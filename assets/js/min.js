"use strict";function init(){renderer=new THREE.WebGLRenderer,renderer.setSize(window.innerWidth,window.innerHeight),renderer.autoClear=!1,document.getElementById("canvas").appendChild(renderer.domElement),scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1e3),camera.position.z=400,scene.add(camera),object=new THREE.Object3D,scene.add(object);for(var e=new THREE.CylinderGeometry(0,1,1.5,4,!1),t=new THREE.MeshPhongMaterial({color:16777215,shading:THREE.FlatShading}),i=0;100>i;i++){t=new THREE.MeshPhongMaterial({color:16777215,shading:THREE.FlatShading});var r=new THREE.Mesh(e,t);r.position.set(Math.random()-.5,Math.random()-.5,Math.random()-.5).normalize(),r.position.multiplyScalar(600*Math.random()),r.rotation.set(2*Math.random(),2*Math.random(),2*Math.random()),r.scale.x=r.scale.y=r.scale.z=50*Math.random(),object.add(r)}var n=new THREE.AmbientLight(5592405);scene.add(n);var o=new THREE.DirectionalLight(16777215);o.position.set(1,1,1).normalize(),scene.add(o);var a=new THREE.RenderPass(scene,camera),s=new THREE.ShaderPass(THREE.RGBShiftShader),h=new THREE.GlitchPass,c=new THREE.FilmPass(.25,0,64,!1);s.uniforms.amount.value=.0015,c.renderToScreen=!0,composer=new THREE.EffectComposer(renderer),composer.addPass(a),composer.addPass(s),composer.addPass(h),composer.addPass(c),window.addEventListener("resize",onWindowResize,!1)}function onWindowResize(){camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),renderer.setSize(window.innerWidth,window.innerHeight),composer.setSize(window.innerWidth,window.innerHeight)}function animate(){requestAnimationFrame(animate),object.rotation.x+=.001,object.rotation.y+=.001,renderer.clear(),composer.render(.05)}var THREE={REVISION:"75"};"function"==typeof define&&define.amd?define("three",THREE):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=THREE),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Math.sign&&(Math.sign=function(e){return 0>e?-1:e>0?1:+e}),void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}}),void 0===Object.assign&&Object.defineProperty(Object,"assign",{writable:!0,configurable:!0,value:function(e){if(void 0===e||null===e)throw new TypeError("Cannot convert first argument to object");for(var t=Object(e),i=1,r=arguments.length;i!==r;++i){var n=arguments[i];if(void 0!==n&&null!==n)for(var n=Object(n),o=Object.keys(n),a=0,s=o.length;a!==s;++a){var h=o[a],c=Object.getOwnPropertyDescriptor(n,h);void 0!==c&&c.enumerable&&(t[h]=n[h])}}return t}}),THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.MinEquation=103,THREE.MaxEquation=104,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.NeverDepth=0,THREE.AlwaysDepth=1,THREE.LessDepth=2,THREE.LessEqualDepth=3,THREE.EqualDepth=4,THREE.GreaterEqualDepth=5,THREE.GreaterDepth=6,THREE.NotEqualDepth=7,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.NoToneMapping=0,THREE.LinearToneMapping=1,THREE.ReinhardToneMapping=2,THREE.Uncharted2ToneMapping=3,THREE.CineonToneMapping=4,THREE.UVMapping=300,THREE.CubeReflectionMapping=301,THREE.CubeRefractionMapping=302,THREE.EquirectangularReflectionMapping=303,THREE.EquirectangularRefractionMapping=304,THREE.SphericalReflectionMapping=305,THREE.CubeUVReflectionMapping=306,THREE.CubeUVRefractionMapping=307,THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.HalfFloatType=1025,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGBEFormat=THREE.RGBAFormat,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.RGB_PVRTC_4BPPV1_Format=2100,THREE.RGB_PVRTC_2BPPV1_Format=2101,THREE.RGBA_PVRTC_4BPPV1_Format=2102,THREE.RGBA_PVRTC_2BPPV1_Format=2103,THREE.RGB_ETC1_Format=2151,THREE.LoopOnce=2200,THREE.LoopRepeat=2201,THREE.LoopPingPong=2202,THREE.InterpolateDiscrete=2300,THREE.InterpolateLinear=2301,THREE.InterpolateSmooth=2302,THREE.ZeroCurvatureEnding=2400,THREE.ZeroSlopeEnding=2401,THREE.WrapAroundEnding=2402,THREE.TrianglesDrawMode=0,THREE.TriangleStripDrawMode=1,THREE.TriangleFanDrawMode=2,THREE.LinearEncoding=3e3,THREE.sRGBEncoding=3001,THREE.GammaEncoding=3007,THREE.RGBEEncoding=3002,THREE.LogLuvEncoding=3003,THREE.RGBM7Encoding=3004,THREE.RGBM16Encoding=3005,THREE.RGBDEncoding=3006,THREE.Color=function(e){return 3===arguments.length?this.fromArray(arguments):this.set(e)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setScalar:function(e){this.b=this.g=this.r=e},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,i){return this.r=e,this.g=t,this.b=i,this},setHSL:function(){function e(e,t,i){return 0>i&&(i+=1),i>1&&(i-=1),1/6>i?e+6*(t-e)*i:.5>i?t:2/3>i?e+6*(t-e)*(2/3-i):e}return function(t,i,r){return t=THREE.Math.euclideanModulo(t,1),i=THREE.Math.clamp(i,0,1),r=THREE.Math.clamp(r,0,1),0===i?this.r=this.g=this.b=r:(i=.5>=r?r*(1+i):r+i-r*i,r=2*r-i,this.r=e(r,i,t+1/3),this.g=e(r,i,t),this.b=e(r,i,t-1/3)),this}}(),setStyle:function(e){function t(e){void 0!==e&&1>parseFloat(e)&&void 0}var i;if(i=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var r=i[2];switch(i[1]){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(r)){var r=parseFloat(i[1])/360,n=parseInt(i[2],10)/100,o=parseInt(i[3],10)/100;return t(i[5]),this.setHSL(r,n,o)}}}else if(i=/^\#([A-Fa-f0-9]+)$/.exec(e)){if(i=i[1],r=i.length,3===r)return this.r=parseInt(i.charAt(0)+i.charAt(0),16)/255,this.g=parseInt(i.charAt(1)+i.charAt(1),16)/255,this.b=parseInt(i.charAt(2)+i.charAt(2),16)/255,this;if(6===r)return this.r=parseInt(i.charAt(0)+i.charAt(1),16)/255,this.g=parseInt(i.charAt(2)+i.charAt(3),16)/255,this.b=parseInt(i.charAt(4)+i.charAt(5),16)/255,this}return e&&0<e.length&&(i=THREE.ColorKeywords[e],void 0!==i?this.setHex(i):void 0),this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var i=t>0?1/t:1;return this.r=Math.pow(e.r,i),this.g=Math.pow(e.g,i),this.b=Math.pow(e.b,i),this},convertGammaToLinear:function(){var e=this.r,t=this.g,i=this.b;return this.r=e*e,this.g=t*t,this.b=i*i,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){e=e||{h:0,s:0,l:0};var t,i=this.r,r=this.g,n=this.b,o=Math.max(i,r,n),a=Math.min(i,r,n),s=(a+o)/2;if(a===o)a=t=0;else{var h=o-a,a=.5>=s?h/(o+a):h/(2-o-a);switch(o){case i:t=(r-n)/h+(n>r?6:0);break;case r:t=(n-i)/h+2;break;case n:t=(i-r)/h+4}t/=6}return e.h=t,e.s=a,e.l=s,e},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,i){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=i,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,i,r){this._x=e||0,this._y=t||0,this._z=i||0,this._w=void 0!==r?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(!1==e instanceof THREE.Euler)throw Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var i=Math.cos(e._x/2),r=Math.cos(e._y/2),n=Math.cos(e._z/2),o=Math.sin(e._x/2),a=Math.sin(e._y/2),s=Math.sin(e._z/2),h=e.order;return"XYZ"===h?(this._x=o*r*n+i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n-o*a*s):"YXZ"===h?(this._x=o*r*n+i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n+o*a*s):"ZXY"===h?(this._x=o*r*n-i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n-o*a*s):"ZYX"===h?(this._x=o*r*n-i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n+o*a*s):"YZX"===h?(this._x=o*r*n+i*a*s,this._y=i*a*n+o*r*s,this._z=i*r*s-o*a*n,this._w=i*r*n-o*a*s):"XZY"===h&&(this._x=o*r*n-i*a*s,this._y=i*a*n-o*r*s,this._z=i*r*s+o*a*n,this._w=i*r*n+o*a*s),!1!==t&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var i=t/2,r=Math.sin(i);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(i),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t=e.elements,i=t[0];e=t[4];var r=t[8],n=t[1],o=t[5],a=t[9],s=t[2],h=t[6],t=t[10],c=i+o+t;return c>0?(i=.5/Math.sqrt(c+1),this._w=.25/i,this._x=(h-a)*i,this._y=(r-s)*i,this._z=(n-e)*i):i>o&&i>t?(i=2*Math.sqrt(1+i-o-t),this._w=(h-a)/i,this._x=.25*i,this._y=(e+n)/i,this._z=(r+s)/i):o>t?(i=2*Math.sqrt(1+o-i-t),this._w=(r-s)/i,this._x=(e+n)/i,this._y=.25*i,this._z=(a+h)/i):(i=2*Math.sqrt(1+t-i-o),this._w=(n-e)/i,this._x=(r+s)/i,this._y=(a+h)/i,this._z=.25*i),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t;return function(i,r){return void 0===e&&(e=new THREE.Vector3),t=i.dot(r)+1,1e-6>t?(t=0,Math.abs(i.x)>Math.abs(i.z)?e.set(-i.y,i.x,0):e.set(0,-i.z,i.y)):e.crossVectors(i,r),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._z=this._y=this._x=0,this._w=1):(e=1/e,this._x*=e,this._y*=e,this._z*=e,this._w*=e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?this.multiplyQuaternions(e,t):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var i=e._x,r=e._y,n=e._z,o=e._w,a=t._x,s=t._y,h=t._z,c=t._w;return this._x=i*c+o*a+r*h-n*s,this._y=r*c+o*s+n*a-i*h,this._z=n*c+o*h+i*s-r*a,this._w=o*c-i*a-r*s-n*h,this.onChangeCallback(),this},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var i=this._x,r=this._y,n=this._z,o=this._w,a=o*e._w+i*e._x+r*e._y+n*e._z;if(0>a?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=r,this._z=n,this;var s=Math.sqrt(1-a*a);if(.001>Math.abs(s))return this._w=.5*(o+this._w),this._x=.5*(i+this._x),this._y=.5*(r+this._y),this._z=.5*(n+this._z),this;var h=Math.atan2(s,a),a=Math.sin((1-t)*h)/s,s=Math.sin(t*h)/s;return this._w=o*a+this._w*s,this._x=i*a+this._x*s,this._y=r*a+this._y*s,this._z=n*a+this._z*s,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},Object.assign(THREE.Quaternion,{slerp:function(e,t,i,r){return i.copy(e).slerp(t,r)},slerpFlat:function(e,t,i,r,n,o,a){var s=i[r+0],h=i[r+1],c=i[r+2];i=i[r+3],r=n[o+0];var l=n[o+1],u=n[o+2];if(n=n[o+3],i!==n||s!==r||h!==l||c!==u){o=1-a;var p=s*r+h*l+c*u+i*n,d=p>=0?1:-1,f=1-p*p;f>Number.EPSILON&&(f=Math.sqrt(f),p=Math.atan2(f,p*d),o=Math.sin(o*p)/f,a=Math.sin(a*p)/f),d*=a,s=s*o+r*d,h=h*o+l*d,c=c*o+u*d,i=i*o+n*d,o===1-a&&(a=1/Math.sqrt(s*s+h*h+c*c+i*i),s*=a,h*=a,c*=a,i*=a)}e[t]=s,e[t+1]=h,e[t+2]=c,e[t+3]=i}}),THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(e){this.x=e},get height(){return this.y},set height(e){this.y=e},set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.y=this.x=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?this.addVectors(e,t):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?this.subVectors(e,t):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e):this.y=this.x=0,this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(){var e,t;return function(i,r){return void 0===e&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(i,i),t.set(r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var i=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,i))/i),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var e=Math.atan2(this.y,this.x);return 0>e&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x;return e=this.y-e.y,t*t+e*e},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,i){return this.subVectors(t,e).multiplyScalar(i).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,i){return void 0===i&&(i=0),t=t*e.itemSize+i,this.x=e.array[t],this.y=e.array[t+1],this},rotateAround:function(e,t){var i=Math.cos(t),r=Math.sin(t),n=this.x-e.x,o=this.y-e.y;return this.x=n*i-o*r+e.x,this.y=n*r+o*i+e.y,this}},THREE.Vector3=function(e,t,i){this.x=e||0,this.y=t||0,this.z=i||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,i){return this.x=e,this.y=t,this.z=i,this},setScalar:function(e){return this.z=this.y=this.x=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?this.addVectors(e,t):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?this.subVectors(e,t):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?this.multiplyVectors(e,t):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e):this.z=this.y=this.x=0,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return!1==t instanceof THREE.Euler&&void 0,void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,i){return void 0===e&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,i)),this}}(),applyMatrix3:function(e){var t=this.x,i=this.y,r=this.z;return e=e.elements,this.x=e[0]*t+e[3]*i+e[6]*r,this.y=e[1]*t+e[4]*i+e[7]*r,this.z=e[2]*t+e[5]*i+e[8]*r,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z;return e=e.elements,this.x=e[0]*t+e[4]*i+e[8]*r+e[12],this.y=e[1]*t+e[5]*i+e[9]*r+e[13],this.z=e[2]*t+e[6]*i+e[10]*r+e[14],this},applyProjection:function(e){var t=this.x,i=this.y,r=this.z;e=e.elements;var n=1/(e[3]*t+e[7]*i+e[11]*r+e[15]);return this.x=(e[0]*t+e[4]*i+e[8]*r+e[12])*n,this.y=(e[1]*t+e[5]*i+e[9]*r+e[13])*n,this.z=(e[2]*t+e[6]*i+e[10]*r+e[14])*n,this},applyQuaternion:function(e){var t=this.x,i=this.y,r=this.z,n=e.x,o=e.y,a=e.z;e=e.w;var s=e*t+o*r-a*i,h=e*i+a*t-n*r,c=e*r+n*i-o*t,t=-n*t-o*i-a*r;return this.x=s*e+t*-n+h*-a-c*-o,this.y=h*e+t*-o+c*-n-s*-a,this.z=c*e+t*-a+s*-o-h*-n,this},project:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyProjection(e)}}(),unproject:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,i=this.y,r=this.z;return e=e.elements,this.x=e[0]*t+e[4]*i+e[8]*r,this.y=e[1]*t+e[5]*i+e[9]*r,this.z=e[2]*t+e[6]*i+e[10]*r,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e,t;return function(i,r){return void 0===e&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(i,i,i),t.set(r,r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var i=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,i))/i),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,i){return this.subVectors(t,e).multiplyScalar(i).add(e),this},cross:function(e,t){if(void 0!==t)return this.crossVectors(e,t);var i=this.x,r=this.y,n=this.z;return this.x=r*e.z-n*e.y,this.y=n*e.x-i*e.z,this.z=i*e.y-r*e.x,this},crossVectors:function(e,t){var i=e.x,r=e.y,n=e.z,o=t.x,a=t.y,s=t.z;return this.x=r*s-n*a,this.y=n*o-i*s,this.z=i*a-r*o,this},projectOnVector:function(){var e,t;return function(i){return void 0===e&&(e=new THREE.Vector3),e.copy(i).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){return e=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq()),Math.acos(THREE.Math.clamp(e,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,i=this.y-e.y;return e=this.z-e.z,t*t+i*i+e*e},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length();return e=this.setFromMatrixColumn(e,2).length(),this.x=t,this.y=i,this.z=e,this},setFromMatrixColumn:function(e,t){return"number"==typeof e&&(t=e=t),this.fromArray(e.elements,4*t)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,i){return void 0===i&&(i=0),t=t*e.itemSize+i,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this}},THREE.Vector4=function(e,t,i,r){this.x=e||0,this.y=t||0,this.z=i||0,this.w=void 0!==r?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,i,r){return this.x=e,this.y=t,this.z=i,this.w=r,this},setScalar:function(e){return this.w=this.z=this.y=this.x=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?this.addVectors(e,t):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?this.subVectors(e,t):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e,this.w*=e):this.w=this.z=this.y=this.x=0,this},applyMatrix4:function(e){var t=this.x,i=this.y,r=this.z,n=this.w;return e=e.elements,this.x=e[0]*t+e[4]*i+e[8]*r+e[12]*n,this.y=e[1]*t+e[5]*i+e[9]*r+e[13]*n,this.z=e[2]*t+e[6]*i+e[10]*r+e[14]*n,this.w=e[3]*t+e[7]*i+e[11]*r+e[15]*n,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.z=this.y=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,i,r;e=e.elements;var n=e[0];r=e[4];var o=e[8],a=e[1],s=e[5],h=e[9];i=e[2],t=e[6];var c=e[10];return.01>Math.abs(r-a)&&.01>Math.abs(o-i)&&.01>Math.abs(h-t)?.1>Math.abs(r+a)&&.1>Math.abs(o+i)&&.1>Math.abs(h+t)&&.1>Math.abs(n+s+c-3)?(this.set(1,0,0,0),this):(e=Math.PI,n=(n+1)/2,s=(s+1)/2,c=(c+1)/2,r=(r+a)/4,o=(o+i)/4,h=(h+t)/4,n>s&&n>c?.01>n?(t=0,r=i=.707106781):(t=Math.sqrt(n),i=r/t,r=o/t):s>c?.01>s?(t=.707106781,i=0,r=.707106781):(i=Math.sqrt(s),t=r/i,r=h/i):.01>c?(i=t=.707106781,r=0):(r=Math.sqrt(c),t=o/r,i=h/r),this.set(t,i,r,e),this):(e=Math.sqrt((t-h)*(t-h)+(o-i)*(o-i)+(a-r)*(a-r)),.001>Math.abs(e)&&(e=1),this.x=(t-h)/e,this.y=(o-i)/e,this.z=(a-r)/e,this.w=Math.acos((n+s+c-1)/2),this)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this;
},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e,t;return function(i,r){return void 0===e&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(i,i,i,i),t.set(r,r,r,r),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=0>this.x?Math.ceil(this.x):Math.floor(this.x),this.y=0>this.y?Math.ceil(this.y):Math.floor(this.y),this.z=0>this.z?Math.ceil(this.z):Math.floor(this.z),this.w=0>this.w?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,i){return this.subVectors(t,e).multiplyScalar(i).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,i){return void 0===i&&(i=0),t=t*e.itemSize+i,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this.w=e.array[t+3],this}},THREE.Euler=function(e,t,i,r){this._x=e||0,this._y=t||0,this._z=i||0,this._order=r||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders="XYZ YZX ZXY XZY YXZ ZYX".split(" "),THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,i,r){return this._x=e,this._y=t,this._z=i,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,i){var r=THREE.Math.clamp,n=e.elements;e=n[0];var o=n[4],a=n[8],s=n[1],h=n[5],c=n[9],l=n[2],u=n[6],n=n[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(r(a,-1,1)),.99999>Math.abs(a)?(this._x=Math.atan2(-c,n),this._z=Math.atan2(-o,e)):(this._x=Math.atan2(u,h),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(c,-1,1)),.99999>Math.abs(c)?(this._y=Math.atan2(a,n),this._z=Math.atan2(s,h)):(this._y=Math.atan2(-l,e),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(u,-1,1)),.99999>Math.abs(u)?(this._y=Math.atan2(-l,n),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(s,e))):"ZYX"===t?(this._y=Math.asin(-r(l,-1,1)),.99999>Math.abs(l)?(this._x=Math.atan2(u,n),this._z=Math.atan2(s,e)):(this._x=0,this._z=Math.atan2(-o,h))):"YZX"===t?(this._z=Math.asin(r(s,-1,1)),.99999>Math.abs(s)?(this._x=Math.atan2(-c,h),this._y=Math.atan2(-l,e)):(this._x=0,this._y=Math.atan2(a,n))):"XZY"===t?(this._z=Math.asin(-r(o,-1,1)),.99999>Math.abs(o)?(this._x=Math.atan2(u,h),this._y=Math.atan2(a,e)):(this._x=Math.atan2(-c,n),this._y=0)):void 0,this._order=t,!1!==i&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,i,r){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,i,r),this}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new THREE.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},THREE.Line3=function(e,t){this.start=void 0!==e?e:new THREE.Vector3,this.end=void 0!==t?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){return(e||new THREE.Vector3).addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){return(e||new THREE.Vector3).subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var i=t||new THREE.Vector3;return this.delta(i).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r){e.subVectors(i,this.start),t.subVectors(this.end,this.start);var n=t.dot(t),n=t.dot(e)/n;return r&&(n=THREE.Math.clamp(n,0,1)),n}}(),closestPointToPoint:function(e,t,i){return e=this.closestPointToPointParameter(e,t),i=i||new THREE.Vector3,this.delta(i).multiplyScalar(e).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-(1/0),-(1/0))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,i=e.length;i>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){return(e||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector2).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){return(t||new THREE.Vector2).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-(1/0),-(1/0),-(1/0))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){this.makeEmpty();for(var t=1/0,i=1/0,r=1/0,n=-(1/0),o=-(1/0),a=-(1/0),s=0,h=e.length;h>s;s+=3){var c=e[s],l=e[s+1],u=e[s+2];t>c&&(t=c),i>l&&(i=l),r>u&&(r=u),c>n&&(n=c),l>o&&(o=l),u>a&&(a=u)}this.min.set(t,i,r),this.max.set(n,o,a)},setFromPoints:function(e){this.makeEmpty();for(var t=0,i=e.length;i>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(t,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(){var e;return function(t){void 0===e&&(e=new THREE.Box3);var i=this;return this.makeEmpty(),t.updateMatrixWorld(!0),t.traverse(function(t){var r=t.geometry;void 0!==r&&(null===r.boundingBox&&r.computeBoundingBox(),!1===r.boundingBox.isEmpty()&&(e.copy(r.boundingBox),e.applyMatrix4(t.matrixWorld),i.union(e)))}),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){return(e||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){return(e||new THREE.Vector3).subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){return(t||new THREE.Vector3).set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},intersectsSphere:function(){var e;return function(t){return void 0===e&&(e=new THREE.Vector3),this.clampPoint(t.center,e),e.distanceToSquared(t.center)<=t.radius*t.radius}}(),intersectsPlane:function(e){var t,i;return 0<e.normal.x?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=e.constant&&i>=e.constant},clampPoint:function(e,t){return(t||new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(t){return e.copy(t).clamp(this.min,this.max).sub(t).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(t){return t=t||new THREE.Sphere,t.center=this.center(),t.radius=.5*this.size(e).length(),t}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),0<arguments.length&&void 0},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,i,r,n,o,a,s,h){var c=this.elements;return c[0]=e,c[1]=r,c[2]=a,c[3]=t,c[4]=n,c[5]=s,c[6]=i,c[7]=o,c[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){return e=e.elements,this.set(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8]),this},setFromMatrix4:function(e){return e=e.elements,this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this},applyToVector3Array:function(){var e;return function(t,i,r){void 0===e&&(e=new THREE.Vector3),void 0===i&&(i=0),void 0===r&&(r=t.length);for(var n=0;r>n;n+=3,i+=3)e.fromArray(t,i),e.applyMatrix3(this),e.toArray(t,i);return t}}(),applyToBuffer:function(){var e;return function(t,i,r){void 0===e&&(e=new THREE.Vector3),void 0===i&&(i=0),void 0===r&&(r=t.length/t.itemSize);for(var n=0;r>n;n++,i++)e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.applyMatrix3(this),t.setXYZ(e.x,e.y,e.z);return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],i=e[1],r=e[2],n=e[3],o=e[4],a=e[5],s=e[6],h=e[7],e=e[8];return t*o*e-t*a*h-i*n*e+i*a*s+r*n*h-r*o*s},getInverse:function(e,t){e instanceof THREE.Matrix4&&void 0;var i=e.elements,r=this.elements,n=i[0],o=i[1],a=i[2],s=i[3],h=i[4],c=i[5],l=i[6],u=i[7],i=i[8],p=i*h-c*u,d=c*l-i*s,f=u*s-h*l,E=n*p+o*d+a*f;if(0===E){if(t)throw Error("THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0");return this.identity()}return r[0]=p,r[1]=a*u-i*o,r[2]=c*o-a*h,r[3]=d,r[4]=i*n-a*l,r[5]=a*s-c*n,r[6]=f,r[7]=o*l-u*n,r[8]=h*n-o*s,this.multiplyScalar(1/E)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]}},THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),0<arguments.length&&void 0},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,i,r,n,o,a,s,h,c,l,u,p,d,f,E){var m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=r,m[1]=n,m[5]=o,m[9]=a,m[13]=s,m[2]=h,m[6]=c,m[10]=l,m[14]=u,m[3]=p,m[7]=d,m[11]=f,m[15]=E,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(e){return this.elements.set(e.elements),this},copyPosition:function(e){var t=this.elements;return e=e.elements,t[12]=e[12],t[13]=e[13],t[14]=e[14],this},extractBasis:function(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this},extractRotation:function(){var e;return function(t){void 0===e&&(e=new THREE.Vector3);var i=this.elements,r=t.elements,n=1/e.setFromMatrixColumn(t,0).length(),o=1/e.setFromMatrixColumn(t,1).length();return t=1/e.setFromMatrixColumn(t,2).length(),i[0]=r[0]*n,i[1]=r[1]*n,i[2]=r[2]*n,i[4]=r[4]*o,i[5]=r[5]*o,i[6]=r[6]*o,i[8]=r[8]*t,i[9]=r[9]*t,i[10]=r[10]*t,this}}(),makeRotationFromEuler:function(e){!1==e instanceof THREE.Euler&&void 0;var t=this.elements,i=e.x,r=e.y,n=e.z,o=Math.cos(i),i=Math.sin(i),a=Math.cos(r),r=Math.sin(r),s=Math.cos(n),n=Math.sin(n);if("XYZ"===e.order){e=o*s;var h=o*n,c=i*s,l=i*n;t[0]=a*s,t[4]=-a*n,t[8]=r,t[1]=h+c*r,t[5]=e-l*r,t[9]=-i*a,t[2]=l-e*r,t[6]=c+h*r,t[10]=o*a}else"YXZ"===e.order?(e=a*s,h=a*n,c=r*s,l=r*n,t[0]=e+l*i,t[4]=c*i-h,t[8]=o*r,t[1]=o*n,t[5]=o*s,t[9]=-i,t[2]=h*i-c,t[6]=l+e*i,t[10]=o*a):"ZXY"===e.order?(e=a*s,h=a*n,c=r*s,l=r*n,t[0]=e-l*i,t[4]=-o*n,t[8]=c+h*i,t[1]=h+c*i,t[5]=o*s,t[9]=l-e*i,t[2]=-o*r,t[6]=i,t[10]=o*a):"ZYX"===e.order?(e=o*s,h=o*n,c=i*s,l=i*n,t[0]=a*s,t[4]=c*r-h,t[8]=e*r+l,t[1]=a*n,t[5]=l*r+e,t[9]=h*r-c,t[2]=-r,t[6]=i*a,t[10]=o*a):"YZX"===e.order?(e=o*a,h=o*r,c=i*a,l=i*r,t[0]=a*s,t[4]=l-e*n,t[8]=c*n+h,t[1]=n,t[5]=o*s,t[9]=-i*s,t[2]=-r*s,t[6]=h*n+c,t[10]=e-l*n):"XZY"===e.order&&(e=o*a,h=o*r,c=i*a,l=i*r,t[0]=a*s,t[4]=-n,t[8]=r*s,t[1]=e*n+l,t[5]=o*s,t[9]=h*n-c,t[2]=c*n-h,t[6]=i*s,t[10]=l*n+e);return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){var t=this.elements,i=e.x,r=e.y,n=e.z,o=e.w,a=i+i,s=r+r,h=n+n;e=i*a;var c=i*s,i=i*h,l=r*s,r=r*h,n=n*h,a=o*a,s=o*s,o=o*h;return t[0]=1-(l+n),t[4]=c-o,t[8]=i+s,t[1]=c+o,t[5]=1-(e+n),t[9]=r-a,t[2]=i-s,t[6]=r+a,t[10]=1-(e+l),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e,t,i;return function(r,n,o){void 0===e&&(e=new THREE.Vector3),void 0===t&&(t=new THREE.Vector3),void 0===i&&(i=new THREE.Vector3);var a=this.elements;return i.subVectors(r,n).normalize(),0===i.lengthSq()&&(i.z=1),e.crossVectors(o,i).normalize(),0===e.lengthSq()&&(i.x+=1e-4,e.crossVectors(o,i).normalize()),t.crossVectors(i,e),a[0]=e.x,a[4]=t.x,a[8]=i.x,a[1]=e.y,a[5]=t.y,a[9]=i.y,a[2]=e.z,a[6]=t.z,a[10]=i.z,this}}(),multiply:function(e,t){return void 0!==t?this.multiplyMatrices(e,t):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var i=e.elements,r=t.elements,n=this.elements,o=i[0],a=i[4],s=i[8],h=i[12],c=i[1],l=i[5],u=i[9],p=i[13],d=i[2],f=i[6],E=i[10],m=i[14],g=i[3],v=i[7],T=i[11],i=i[15],y=r[0],R=r[4],x=r[8],H=r[12],_=r[1],M=r[5],b=r[9],S=r[13],w=r[2],A=r[6],L=r[10],C=r[14],P=r[3],D=r[7],B=r[11],r=r[15];return n[0]=o*y+a*_+s*w+h*P,n[4]=o*R+a*M+s*A+h*D,n[8]=o*x+a*b+s*L+h*B,n[12]=o*H+a*S+s*C+h*r,n[1]=c*y+l*_+u*w+p*P,n[5]=c*R+l*M+u*A+p*D,n[9]=c*x+l*b+u*L+p*B,n[13]=c*H+l*S+u*C+p*r,n[2]=d*y+f*_+E*w+m*P,n[6]=d*R+f*M+E*A+m*D,n[10]=d*x+f*b+E*L+m*B,n[14]=d*H+f*S+E*C+m*r,n[3]=g*y+v*_+T*w+i*P,n[7]=g*R+v*M+T*A+i*D,n[11]=g*x+v*b+T*L+i*B,n[15]=g*H+v*S+T*C+i*r,this},multiplyToArray:function(e,t,i){var r=this.elements;return this.multiplyMatrices(e,t),i[0]=r[0],i[1]=r[1],i[2]=r[2],i[3]=r[3],i[4]=r[4],i[5]=r[5],i[6]=r[6],i[7]=r[7],i[8]=r[8],i[9]=r[9],i[10]=r[10],i[11]=r[11],i[12]=r[12],i[13]=r[13],i[14]=r[14],i[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToVector3Array:function(){var e;return function(t,i,r){void 0===e&&(e=new THREE.Vector3),void 0===i&&(i=0),void 0===r&&(r=t.length);for(var n=0;r>n;n+=3,i+=3)e.fromArray(t,i),e.applyMatrix4(this),e.toArray(t,i);return t}}(),applyToBuffer:function(){var e;return function(t,i,r){void 0===e&&(e=new THREE.Vector3),void 0===i&&(i=0),void 0===r&&(r=t.length/t.itemSize);for(var n=0;r>n;n++,i++)e.x=t.getX(i),e.y=t.getY(i),e.z=t.getZ(i),e.applyMatrix4(this),t.setXYZ(e.x,e.y,e.z);return t}}(),determinant:function(){var e=this.elements,t=e[0],i=e[4],r=e[8],n=e[12],o=e[1],a=e[5],s=e[9],h=e[13],c=e[2],l=e[6],u=e[10],p=e[14];return e[3]*(+n*s*l-r*h*l-n*a*u+i*h*u+r*a*p-i*s*p)+e[7]*(+t*s*p-t*h*u+n*o*u-r*o*p+r*h*c-n*s*c)+e[11]*(+t*h*l-t*a*p-n*o*l+i*o*p+n*a*c-i*h*c)+e[15]*(-r*a*c-t*s*l+t*a*u+r*o*l-i*o*u+i*s*c)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArrayOffset:function(e,t){var i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e},getPosition:function(){var e;return function(){return void 0===e&&(e=new THREE.Vector3),e.setFromMatrixColumn(this,3)}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var i=this.elements,r=e.elements,n=r[0],o=r[1],a=r[2],s=r[3],h=r[4],c=r[5],l=r[6],u=r[7],p=r[8],d=r[9],f=r[10],E=r[11],m=r[12],g=r[13],v=r[14],r=r[15],T=d*v*u-g*f*u+g*l*E-c*v*E-d*l*r+c*f*r,y=m*f*u-p*v*u-m*l*E+h*v*E+p*l*r-h*f*r,R=p*g*u-m*d*u+m*c*E-h*g*E-p*c*r+h*d*r,x=m*d*l-p*g*l-m*c*f+h*g*f+p*c*v-h*d*v,H=n*T+o*y+a*R+s*x;if(0===H){if(t)throw Error("THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0");return this.identity()}return i[0]=T,i[1]=g*f*s-d*v*s-g*a*E+o*v*E+d*a*r-o*f*r,i[2]=c*v*s-g*l*s+g*a*u-o*v*u-c*a*r+o*l*r,i[3]=d*l*s-c*f*s-d*a*u+o*f*u+c*a*E-o*l*E,i[4]=y,i[5]=p*v*s-m*f*s+m*a*E-n*v*E-p*a*r+n*f*r,i[6]=m*l*s-h*v*s-m*a*u+n*v*u+h*a*r-n*l*r,i[7]=h*f*s-p*l*s+p*a*u-n*f*u-h*a*E+n*l*E,i[8]=R,i[9]=m*d*s-p*g*s-m*o*E+n*g*E+p*o*r-n*d*r,i[10]=h*g*s-m*c*s+m*o*u-n*g*u-h*o*r+n*c*r,i[11]=p*c*s-h*d*s-p*o*u+n*d*u+h*o*E-n*c*E,i[12]=x,i[13]=p*g*a-m*d*a+m*o*f-n*g*f-p*o*v+n*d*v,i[14]=m*c*a-h*g*a-m*o*l+n*g*l+h*o*v-n*c*v,i[15]=h*d*a-p*c*a+p*o*l-n*d*l-h*o*f+n*c*f,this.multiplyScalar(1/H)},scale:function(e){var t=this.elements,i=e.x,r=e.y;return e=e.z,t[0]*=i,t[4]*=r,t[8]*=e,t[1]*=i,t[5]*=r,t[9]*=e,t[2]*=i,t[6]*=r,t[10]*=e,t[3]*=i,t[7]*=r,t[11]*=e,this},getMaxScaleOnAxis:function(){var e=this.elements;return Math.sqrt(Math.max(e[0]*e[0]+e[1]*e[1]+e[2]*e[2],e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e[8]*e[8]+e[9]*e[9]+e[10]*e[10]))},makeTranslation:function(e,t,i){return this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e);return e=Math.sin(e),this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var i=Math.cos(t),r=Math.sin(t),n=1-i,o=e.x,a=e.y,s=e.z,h=n*o,c=n*a;return this.set(h*o+i,h*a-r*s,h*s+r*a,0,h*a+r*s,c*a+i,c*s-r*o,0,h*s-r*a,c*s+r*o,n*s*s+i,0,0,0,0,1),this},makeScale:function(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this},compose:function(e,t,i){return this.makeRotationFromQuaternion(t),this.scale(i),this.setPosition(e),this},decompose:function(){var e,t;return function(i,r,n){void 0===e&&(e=new THREE.Vector3),void 0===t&&(t=new THREE.Matrix4);var o=this.elements,a=e.set(o[0],o[1],o[2]).length(),s=e.set(o[4],o[5],o[6]).length(),h=e.set(o[8],o[9],o[10]).length();0>this.determinant()&&(a=-a),i.x=o[12],i.y=o[13],i.z=o[14],t.elements.set(this.elements),i=1/a;var o=1/s,c=1/h;return t.elements[0]*=i,t.elements[1]*=i,t.elements[2]*=i,t.elements[4]*=o,t.elements[5]*=o,t.elements[6]*=o,t.elements[8]*=c,t.elements[9]*=c,t.elements[10]*=c,r.setFromRotationMatrix(t),n.x=a,n.y=s,n.z=h,this}}(),makeFrustum:function(e,t,i,r,n,o){var a=this.elements;return a[0]=2*n/(t-e),a[4]=0,a[8]=(t+e)/(t-e),a[12]=0,a[1]=0,a[5]=2*n/(r-i),a[9]=(r+i)/(r-i),a[13]=0,a[2]=0,a[6]=0,a[10]=-(o+n)/(o-n),a[14]=-2*o*n/(o-n),a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,i,r){e=i*Math.tan(THREE.Math.degToRad(.5*e));var n=-e;return this.makeFrustum(n*t,e*t,n,e,i,r)},makeOrthographic:function(e,t,i,r,n,o){var a=this.elements,s=1/(t-e),h=1/(i-r),c=1/(o-n);return a[0]=2*s,a[4]=0,a[8]=0,a[12]=-((t+e)*s),a[1]=0,a[5]=2*h,a[9]=0,a[13]=-((i+r)*h),a[2]=0,a[6]=0,a[10]=-2*c,a[14]=-((o+n)*c),a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},equals:function(e){var t=this.elements;e=e.elements;for(var i=0;16>i;i++)if(t[i]!==e[i])return!1;return!0},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]}},THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){return(t||new THREE.Vector3).copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){this.direction.copy(e).sub(this.origin).normalize()},recast:function(){var e=new THREE.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var i=t||new THREE.Vector3;i.subVectors(e,this.origin);var r=i.dot(this.direction);return 0>r?i.copy(this.origin):i.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new THREE.Vector3;return function(t){var i=e.subVectors(t,this.origin).dot(this.direction);return 0>i?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(i).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,n,o,a){e.copy(r).add(n).multiplyScalar(.5),t.copy(n).sub(r).normalize(),i.copy(this.origin).sub(e);var s,h=.5*r.distanceTo(n),c=-this.direction.dot(t),l=i.dot(this.direction),u=-i.dot(t),p=i.lengthSq(),d=Math.abs(1-c*c);return d>0?(r=c*u-l,n=c*l-u,s=h*d,r>=0?n>=-s?s>=n?(h=1/d,r*=h,n*=h,c=r*(r+c*n+2*l)+n*(c*r+n+2*u)+p):(n=h,r=Math.max(0,-(c*n+l)),c=-r*r+n*(n+2*u)+p):(n=-h,r=Math.max(0,-(c*n+l)),c=-r*r+n*(n+2*u)+p):-s>=n?(r=Math.max(0,-(-c*h+l)),n=r>0?-h:Math.min(Math.max(-h,-u),h),c=-r*r+n*(n+2*u)+p):s>=n?(r=0,n=Math.min(Math.max(-h,-u),h),c=n*(n+2*u)+p):(r=Math.max(0,-(c*h+l)),n=r>0?h:Math.min(Math.max(-h,-u),h),c=-r*r+n*(n+2*u)+p)):(n=c>0?-h:h,r=Math.max(0,-(c*n+l)),c=-r*r+n*(n+2*u)+p),o&&o.copy(this.direction).multiplyScalar(r).add(this.origin),a&&a.copy(t).multiplyScalar(n).add(e),c}}(),intersectSphere:function(){var e=new THREE.Vector3;return function(t,i){e.subVectors(t.center,this.origin);var r=e.dot(this.direction),n=e.dot(e)-r*r,o=t.radius*t.radius;return n>o?null:(o=Math.sqrt(o-n),n=r-o,r+=o,0>n&&0>r?null:0>n?this.at(r,i):this.at(n,i))}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);return 0===t?0===e.distanceToPoint(this.origin)?0:null:(e=-(this.origin.dot(e.normal)+e.constant)/t,e>=0?e:null)},intersectPlane:function(e,t){var i=this.distanceToPlane(e);return null===i?null:this.at(i,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);return 0===t||0>e.normal.dot(this.direction)*t?!0:!1},intersectBox:function(e,t){var i,r,n,o,a;r=1/this.direction.x,o=1/this.direction.y,a=1/this.direction.z;var s=this.origin;return r>=0?(i=(e.min.x-s.x)*r,r*=e.max.x-s.x):(i=(e.max.x-s.x)*r,r*=e.min.x-s.x),o>=0?(n=(e.min.y-s.y)*o,o*=e.max.y-s.y):(n=(e.max.y-s.y)*o,o*=e.min.y-s.y),i>o||n>r?null:((n>i||i!==i)&&(i=n),(r>o||r!==r)&&(r=o),a>=0?(n=(e.min.z-s.z)*a,a*=e.max.z-s.z):(n=(e.max.z-s.z)*a,a*=e.min.z-s.z),i>a||n>r?null:((n>i||i!==i)&&(i=n),(r>a||r!==r)&&(r=a),0>r?null:this.at(i>=0?i:r,t)))},intersectsBox:function(){var e=new THREE.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3,r=new THREE.Vector3;return function(n,o,a,s,h){if(t.subVectors(o,n),i.subVectors(a,n),r.crossVectors(t,i),o=this.direction.dot(r),o>0){if(s)return null;s=1}else{if(!(0>o))return null;s=-1,o=-o}return e.subVectors(this.origin,n),n=s*this.direction.dot(i.crossVectors(e,i)),0>n?null:(a=s*this.direction.dot(t.cross(e)),0>a||n+a>o?null:(n=-s*e.dot(r),0>n?null:this.at(n/o,h)))}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(t,i){var r=this.center;void 0!==i?r.copy(i):e.setFromPoints(t).center(r);for(var n=0,o=0,a=t.length;a>o;o++)n=Math.max(n,r.distanceToSquared(t[o]));return this.radius=Math.sqrt(n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(this.center.dot(e.normal)-e.constant)<=this.radius},clampPoint:function(e,t){var i=this.center.distanceToSquared(e),r=t||new THREE.Vector3;return r.copy(e),i>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){return e=e||new THREE.Box3,e.set(this.center,this.center),e.expandByScalar(this.radius),e},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius*=e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},THREE.Frustum=function(e,t,i,r,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,i,r,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(r),a[4].copy(n),a[5].copy(o),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,i=0;6>i;i++)t[i].copy(e.planes[i]);return this},setFromMatrix:function(e){var t=this.planes,i=e.elements;e=i[0];var r=i[1],n=i[2],o=i[3],a=i[4],s=i[5],h=i[6],c=i[7],l=i[8],u=i[9],p=i[10],d=i[11],f=i[12],E=i[13],m=i[14],i=i[15];return t[0].setComponents(o-e,c-a,d-l,i-f).normalize(),t[1].setComponents(o+e,c+a,d+l,i+f).normalize(),
t[2].setComponents(o+r,c+s,d+u,i+E).normalize(),t[3].setComponents(o-r,c-s,d-u,i-E).normalize(),t[4].setComponents(o-n,c-h,d-p,i-m).normalize(),t[5].setComponents(o+n,c+h,d+p,i+m).normalize(),this},intersectsObject:function(){var e=new THREE.Sphere;return function(t){var i=t.geometry;return null===i.boundingSphere&&i.computeBoundingSphere(),e.copy(i.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes,i=e.center;e=-e.radius;for(var r=0;6>r;r++)if(t[r].distanceToPoint(i)<e)return!1;return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i){for(var r=this.planes,n=0;6>n;n++){var o=r[n];e.x=0<o.normal.x?i.min.x:i.max.x,t.x=0<o.normal.x?i.max.x:i.min.x,e.y=0<o.normal.y?i.min.y:i.max.y,t.y=0<o.normal.y?i.max.y:i.min.y,e.z=0<o.normal.z?i.min.z:i.max.z,t.z=0<o.normal.z?i.max.z:i.min.z;var a=o.distanceToPoint(e),o=o.distanceToPoint(t);if(0>a&&0>o)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,i=0;6>i;i++)if(0>t[i].distanceToPoint(e))return!1;return!0}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,i,r){return this.normal.set(e,t,i),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i,r,n){return r=e.subVectors(n,r).cross(t.subVectors(i,r)).normalize(),this.setFromNormalAndCoplanarPoint(r,i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var i=this.distanceToPoint(e);return(t||new THREE.Vector3).copy(this.normal).multiplyScalar(i)},intersectLine:function(){var e=new THREE.Vector3;return function(t,i){var r=i||new THREE.Vector3,n=t.delta(e),o=this.normal.dot(n);return 0!==o?(o=-(t.start.dot(this.normal)+this.constant)/o,0>o||o>1?void 0:r.copy(n).multiplyScalar(o).add(t.start)):0===this.distanceToPoint(t.start)?r.copy(t.start):void 0}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start);return e=this.distanceToPoint(e.end),0>t&&e>0||0>e&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){return(e||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Matrix3;return function(r,n){var o=n||i.getNormalMatrix(r),o=e.copy(this.normal).applyMatrix3(o),a=this.coplanarPoint(t);return a.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(o,a),this}}(),translate:function(e){return this.constant-=e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},THREE.Spherical=function(e,t,i){return this.radius=void 0!==e?e:1,this.phi=void 0!==t?t:0,this.theta=void 0!==i?i:0,this},THREE.Spherical.prototype={constructor:THREE.Spherical,set:function(e,t,i){this.radius=e,this.phi=t,this.theta=i},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius.copy(e.radius),this.phi.copy(e.phi),this.theta.copy(e.theta),this},makeSafe:function(){this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi))},setFromVector3:function(e){return this.radius=e.length(),0===this.radius?this.phi=this.theta=0:(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(THREE.Math.clamp(e.y/this.radius,-1,1))),this}},THREE.Math={generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),i=Array(36),r=0;return function(){for(var n=0;36>n;n++)8===n||13===n||18===n||23===n?i[n]="-":14===n?i[n]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,i[n]=t[19===n?3&e|8:e]);return i.join("")}}(),clamp:function(e,t,i){return Math.max(t,Math.min(i,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,i,r,n){return r+(e-t)*(n-r)/(i-t)},smoothstep:function(e,t,i){return t>=e?0:e>=i?1:(e=(e-t)/(i-t),e*e*(3-2*e))},smootherstep:function(e,t,i){return t>=e?0:e>=i?1:(e=(e-t)/(i-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return Math.random()},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e}},THREE.Spline=function(e){function t(e,t,i,r,n,o,a){return e=.5*(i-e),r=.5*(r-t),(2*(t-i)+e+r)*a+(-3*(t-i)-2*e-r)*o+e*n+t}this.points=e;var i,r,n,o,a,s,h,c,l,u=[],p={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return i=(this.points.length-1)*e,r=Math.floor(i),n=i-r,u[0]=0===r?r:r-1,u[1]=r,u[2]=r>this.points.length-2?this.points.length-1:r+1,u[3]=r>this.points.length-3?this.points.length-1:r+2,s=this.points[u[0]],h=this.points[u[1]],c=this.points[u[2]],l=this.points[u[3]],o=n*n,a=n*o,p.x=t(s.x,h.x,c.x,l.x,n,o,a),p.y=t(s.y,h.y,c.y,l.y,n,o,a),p.z=t(s.z,h.z,c.z,l.z,n,o,a),p},this.getControlPointsArray=function(){var e,t,i=this.points.length,r=[];for(e=0;i>e;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,i,r,n=t=t=0,o=new THREE.Vector3,a=new THREE.Vector3,s=[],h=0;for(s[0]=0,e||(e=100),i=this.points.length*e,o.copy(this.points[0]),e=1;i>e;e++)t=e/i,r=this.getPoint(t),a.copy(r),h+=a.distanceTo(o),o.copy(r),t*=this.points.length-1,t=Math.floor(t),t!==n&&(s[t]=h,n=t);return s[s.length]=h,{chunks:s,total:h}},this.reparametrizeByArcLength=function(e){var t,i,r,n,o,a,s=[],h=new THREE.Vector3,c=this.getLength();for(s.push(h.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(i=c.chunks[t]-c.chunks[t-1],a=Math.ceil(e*i/c.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),i=1;a-1>i;i++)r=n+1/a*i*(o-n),r=this.getPoint(r),s.push(h.copy(r).clone());s.push(h.copy(this.points[t]).clone())}this.points=s}},THREE.Triangle=function(e,t,i){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==i?i:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(t,i,r,n){return n=n||new THREE.Vector3,n.subVectors(r,i),e.subVectors(t,i),n.cross(e),t=n.lengthSq(),t>0?n.multiplyScalar(1/Math.sqrt(t)):n.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(r,n,o,a,s){e.subVectors(a,n),t.subVectors(o,n),i.subVectors(r,n),r=e.dot(e),n=e.dot(t),o=e.dot(i);var h=t.dot(t);a=t.dot(i);var c=r*h-n*n;return s=s||new THREE.Vector3,0===c?s.set(-2,-1,-1):(c=1/c,h=(h*o-n*a)*c,r=(r*a-n*o)*c,s.set(1-h-r,r,h))}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(t,i,r,n){return t=THREE.Triangle.barycoordFromPoint(t,i,r,n,e),0<=t.x&&0<=t.y&&1>=t.x+t.y}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this},setFromPointsAndIndices:function(e,t,i,r){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){return(e||new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){return(e||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},THREE.Interpolant=function(e,t,i,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(i),this.sampleValues=t,this.valueSize=i},THREE.Interpolant.prototype={constructor:THREE.Interpolant,evaluate:function(e){var t=this.parameterPositions,i=this._cachedIndex,r=t[i],n=t[i-1];e:{t:{i:{r:if(!(r>e)){for(var o=i+2;;){if(void 0===r){if(n>e)break r;return this._cachedIndex=i=t.length,this.afterEnd_(i-1,e,n)}if(i===o)break;if(n=r,r=t[++i],r>e)break t}r=t.length;break i}if(e>=n)break e;for(o=t[1],o>e&&(i=2,n=o),o=i-2;;){if(void 0===n)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(i===o)break;if(r=n,n=t[--i-1],e>=n)break t}r=i,i=0}for(;r>i;)n=i+r>>>1,e<t[n]?r=n:i=n+1;if(r=t[i],n=t[i-1],void 0===n)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(void 0===r)return this._cachedIndex=i=t.length,this.afterEnd_(i-1,n,e)}this._cachedIndex=i,this.intervalChanged_(i,n,r)}return this.interpolate_(i,n,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){var t=this.resultBuffer,i=this.sampleValues,r=this.valueSize;e*=r;for(var n=0;n!==r;++n)t[n]=i[e+n];return t},interpolate_:function(e,t,i,r){throw Error("call to abstract method")},intervalChanged_:function(e,t,i){}},Object.assign(THREE.Interpolant.prototype,{beforeStart_:THREE.Interpolant.prototype.copySampleValue_,afterEnd_:THREE.Interpolant.prototype.copySampleValue_}),THREE.CubicInterpolant=function(e,t,i,r){THREE.Interpolant.call(this,e,t,i,r),this._offsetNext=this._weightNext=this._offsetPrev=this._weightPrev=-0},THREE.CubicInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.CubicInterpolant,DefaultSettings_:{endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},intervalChanged_:function(e,t,i){var r=this.parameterPositions,n=e-2,o=e+1,a=r[n],s=r[o];if(void 0===a)switch(this.getSettings_().endingStart){case THREE.ZeroSlopeEnding:n=e,a=2*t-i;break;case THREE.WrapAroundEnding:n=r.length-2,a=t+r[n]-r[n+1];break;default:n=e,a=i}if(void 0===s)switch(this.getSettings_().endingEnd){case THREE.ZeroSlopeEnding:o=e,s=2*i-t;break;case THREE.WrapAroundEnding:o=1,s=i+r[1]-r[0];break;default:o=e-1,s=t}e=.5*(i-t),r=this.valueSize,this._weightPrev=e/(t-a),this._weightNext=e/(s-i),this._offsetPrev=n*r,this._offsetNext=o*r},interpolate_:function(e,t,i,r){var n=this.resultBuffer,o=this.sampleValues,a=this.valueSize;e*=a;var s=e-a,h=this._offsetPrev,c=this._offsetNext,l=this._weightPrev,u=this._weightNext,p=(i-t)/(r-t);for(i=p*p,r=i*p,t=-l*r+2*l*i-l*p,l=(1+l)*r+(-1.5-2*l)*i+(-.5+l)*p+1,p=(-1-u)*r+(1.5+u)*i+.5*p,u=u*r-u*i,i=0;i!==a;++i)n[i]=t*o[h+i]+l*o[s+i]+p*o[e+i]+u*o[c+i];return n}}),THREE.DiscreteInterpolant=function(e,t,i,r){THREE.Interpolant.call(this,e,t,i,r)},THREE.DiscreteInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.DiscreteInterpolant,interpolate_:function(e,t,i,r){return this.copySampleValue_(e-1)}}),THREE.LinearInterpolant=function(e,t,i,r){THREE.Interpolant.call(this,e,t,i,r)},THREE.LinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.LinearInterpolant,interpolate_:function(e,t,i,r){var n=this.resultBuffer,o=this.sampleValues,a=this.valueSize;e*=a;var s=e-a;for(t=(i-t)/(r-t),i=1-t,r=0;r!==a;++r)n[r]=o[s+r]*i+o[e+r]*t;return n}}),THREE.QuaternionLinearInterpolant=function(e,t,i,r){THREE.Interpolant.call(this,e,t,i,r)},THREE.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.QuaternionLinearInterpolant,interpolate_:function(e,t,i,r){var n=this.resultBuffer,o=this.sampleValues,a=this.valueSize;for(e*=a,t=(i-t)/(r-t),i=e+a;e!==i;e+=4)THREE.Quaternion.slerpFlat(n,0,o,e-a,o,e,t);return n}}),THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.elapsedTime=this.oldTime=this.startTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.oldTime=this.startTime=performance.now(),this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=performance.now(),e=.001*(t-this.oldTime);this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(e){e.addEventListener=THREE.EventDispatcher.prototype.addEventListener,e.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,e.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var i=this._listeners;void 0===i[e]&&(i[e]=[]),-1===i[e].indexOf(t)&&i[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var i=this._listeners;return void 0!==i[e]&&-1!==i[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var i=this._listeners[e];if(void 0!==i){var r=i.indexOf(t);-1!==r&&i.splice(r,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var i=[],r=t.length,n=0;r>n;n++)i[n]=t[n];for(n=0;r>n;n++)i[n].call(this,e)}}}},THREE.Layers=function(){this.mask=1},THREE.Layers.prototype={constructor:THREE.Layers,set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)},test:function(e){return 0!==(this.mask&e.mask)}},function(e){function t(e,t){return e.distance-t.distance}function i(e,t,r,n){if(!1!==e.visible&&(e.raycast(t,r),!0===n)){e=e.children,n=0;for(var o=e.length;o>n;n++)i(e[n],t,r,!0)}}e.Raycaster=function(t,i,r,n){this.ray=new e.Ray(t,i),this.near=r||0,this.far=n||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return this.Points}}})},e.Raycaster.prototype={constructor:e.Raycaster,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,i){i instanceof e.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(i.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(i).sub(this.ray.origin).normalize()):i instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(i),this.ray.direction.set(0,0,-1).transformDirection(i.matrixWorld)):void 0},intersectObject:function(e,r){var n=[];return i(e,this,n,r),n.sort(t),n},intersectObjects:function(e,r){var n=[];if(!1===Array.isArray(e))return n;for(var o=0,a=e.length;a>o;o++)i(e[o],this,n,r);return n.sort(t),n}}}(THREE),THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var e=new THREE.Vector3,t=new THREE.Euler,i=new THREE.Quaternion,r=new THREE.Vector3(1,1,1);t.onChange(function(){i.setFromEuler(t,!1)}),i.onChange(function(){t.setFromQuaternion(i,void 0,!1)}),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:i},scale:{enumerable:!0,value:r},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}}),this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new THREE.Layers,this.visible=!0,this.receiveShadow=this.castShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.DefaultMatrixAutoUpdate=!0,THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(t,i){return e.setFromAxisAngle(t,i),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(t,i){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(i)),this}}(),translateX:function(){var e=new THREE.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(1<arguments.length){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?this:(e instanceof THREE.Object3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):void 0,this)},remove:function(e){if(1<arguments.length)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);t=this.children.indexOf(e),-1!==t&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(t,1))},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var i=0,r=this.children.length;r>i;i++){var n=this.children[i].getObjectByProperty(e,t);if(void 0!==n)return n}},getWorldPosition:function(e){return e=e||new THREE.Vector3,this.updateMatrixWorld(!0),e.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i){return i=i||new THREE.Quaternion,this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,i,t),i}}(),getWorldRotation:function(){var e=new THREE.Quaternion;return function(t){return t=t||new THREE.Euler,this.getWorldQuaternion(e),t.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new THREE.Vector3,t=new THREE.Quaternion;return function(i){return i=i||new THREE.Vector3,this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,i),i}}(),getWorldDirection:function(){var e=new THREE.Quaternion;return function(t){return t=t||new THREE.Vector3,this.getWorldQuaternion(e),t.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,i=0,r=t.length;r>i;i++)t[i].traverse(e)},traverseVisible:function(e){if(!1!==this.visible){e(this);for(var t=this.children,i=0,r=t.length;r>i;i++)t[i].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix(),(!0===this.matrixWorldNeedsUpdate||!0===e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,i=this.children.length;i>t;t++)this.children[t].updateMatrixWorld(e)},toJSON:function(e){function t(e){var t,i=[];for(t in e){var r=e[t];delete r.metadata,i.push(r)}return i}var i=void 0===e,r={};i&&(e={geometries:{},materials:{},textures:{},images:{}},r.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"});var n={};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),!0===this.castShadow&&(n.castShadow=!0),!0===this.receiveShadow&&(n.receiveShadow=!0),!1===this.visible&&(n.visible=!1),n.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===e.geometries[this.geometry.uuid]&&(e.geometries[this.geometry.uuid]=this.geometry.toJSON(e)),n.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===e.materials[this.material.uuid]&&(e.materials[this.material.uuid]=this.material.toJSON(e)),n.material=this.material.uuid),0<this.children.length){n.children=[];for(var o=0;o<this.children.length;o++)n.children.push(this.children[o].toJSON(e).object)}if(i){var i=t(e.geometries),o=t(e.materials),a=t(e.textures);e=t(e.images),0<i.length&&(r.geometries=i),0<o.length&&(r.materials=o),0<a.length&&(r.textures=a),0<e.length&&(r.images=e)}return r.object=n,r},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.rotationAutoUpdate=e.rotationAutoUpdate,this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var i=0;i<e.children.length;i++)this.add(e.children[i].clone());return this}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Face3=function(e,t,i,r,n,o){this.a=e,this.b=t,this.c=i,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=Array.isArray(r)?r:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=Array.isArray(n)?n:[],this.materialIndex=void 0!==o?o:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,i=e.vertexNormals.length;i>t;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(t=0,i=e.vertexColors.length;i>t;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}},THREE.BufferAttribute=function(e,t){this.uuid=THREE.Math.generateUUID(),this.array=e,this.itemSize=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(e){!0===e&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.dynamic=e.dynamic,this},copyAt:function(e,t,i){e*=this.itemSize,i*=t.itemSize;for(var r=0,n=this.itemSize;n>r;r++)this.array[e+r]=t.array[i+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,i=0,r=0,n=e.length;n>r;r++){var o=e[r];void 0===o&&(o=new THREE.Color),t[i++]=o.r,t[i++]=o.g,t[i++]=o.b}return this},copyIndicesArray:function(e){for(var t=this.array,i=0,r=0,n=e.length;n>r;r++){var o=e[r];t[i++]=o.a,t[i++]=o.b,t[i++]=o.c}return this},copyVector2sArray:function(e){for(var t=this.array,i=0,r=0,n=e.length;n>r;r++){var o=e[r];void 0===o&&(o=new THREE.Vector2),t[i++]=o.x,t[i++]=o.y}return this},copyVector3sArray:function(e){for(var t=this.array,i=0,r=0,n=e.length;n>r;r++){var o=e[r];void 0===o&&(o=new THREE.Vector3),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z}return this},copyVector4sArray:function(e){for(var t=this.array,i=0,r=0,n=e.length;n>r;r++){var o=e[r];void 0===o&&(o=new THREE.Vector4),t[i++]=o.x,t[i++]=o.y,t[i++]=o.z,t[i++]=o.w}return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this},setXYZ:function(e,t,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this},setXYZW:function(e,t,i,r,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=r,this.array[e+3]=n,this},clone:function(){return(new this.constructor).copy(this)}},THREE.Int8Attribute=function(e,t){return new THREE.BufferAttribute(new Int8Array(e),t)},THREE.Uint8Attribute=function(e,t){return new THREE.BufferAttribute(new Uint8Array(e),t)},THREE.Uint8ClampedAttribute=function(e,t){return new THREE.BufferAttribute(new Uint8ClampedArray(e),t)},THREE.Int16Attribute=function(e,t){return new THREE.BufferAttribute(new Int16Array(e),t)},THREE.Uint16Attribute=function(e,t){return new THREE.BufferAttribute(new Uint16Array(e),t)},THREE.Int32Attribute=function(e,t){return new THREE.BufferAttribute(new Int32Array(e),t)},THREE.Uint32Attribute=function(e,t){return new THREE.BufferAttribute(new Uint32Array(e),t)},THREE.Float32Attribute=function(e,t){return new THREE.BufferAttribute(new Float32Array(e),t)},THREE.Float64Attribute=function(e,t){return new THREE.BufferAttribute(new Float64Array(e),t)},THREE.DynamicBufferAttribute=function(e,t){return new THREE.BufferAttribute(e,t).setDynamic(!0)},THREE.InstancedBufferAttribute=function(e,t,i){THREE.BufferAttribute.call(this,e,t),this.meshPerAttribute=i||1},THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute,THREE.InstancedBufferAttribute.prototype.copy=function(e){return THREE.BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},THREE.InterleavedBuffer=function(e,t){this.uuid=THREE.Math.generateUUID(),this.array=e,this.stride=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(e){!0===e&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,i){e*=this.stride,i*=t.stride;for(var r=0,n=this.stride;n>r;r++)this.array[e+r]=t.array[i+r];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)}},THREE.InstancedInterleavedBuffer=function(e,t,i){THREE.InterleavedBuffer.call(this,e,t),this.meshPerAttribute=i||1},THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype),THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer,THREE.InstancedInterleavedBuffer.prototype.copy=function(e){return THREE.InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},THREE.InterleavedBufferAttribute=function(e,t,i){this.uuid=THREE.Math.generateUUID(),this.data=e,this.itemSize=t,this.offset=i},THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){return this.array.length},get count(){return this.data.count},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this},setXYZ:function(e,t,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this},setXYZW:function(e,t,i,r,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=r,this.data.array[e+3]=n,this}},THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingSphere=this.boundingBox=null,this.groupsNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getNormalMatrix(e),i=0,r=this.vertices.length;r>i;i++)this.vertices[i].applyMatrix4(e);for(i=0,r=this.faces.length;r>i;i++){e=this.faces[i],e.normal.applyMatrix3(t).normalize();for(var n=0,o=e.vertexNormals.length;o>n;n++)e.vertexNormals[n].applyMatrix3(t).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.normalsNeedUpdate=this.verticesNeedUpdate=!0,this},rotateX:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,i,r){return void 0===e&&(e=new THREE.Matrix4),e.makeTranslation(t,i,r),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,i,r){return void 0===e&&(e=new THREE.Matrix4),e.makeScale(t,i,r),
this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){void 0===e&&(e=new THREE.Object3D),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){function t(e,t,r,n){var o=void 0!==a?[l[e].clone(),l[t].clone(),l[r].clone()]:[],d=void 0!==s?[i.colors[e].clone(),i.colors[t].clone(),i.colors[r].clone()]:[];n=new THREE.Face3(e,t,r,o,d,n),i.faces.push(n),void 0!==h&&i.faceVertexUvs[0].push([u[e].clone(),u[t].clone(),u[r].clone()]),void 0!==c&&i.faceVertexUvs[1].push([p[e].clone(),p[t].clone(),p[r].clone()])}var i=this,r=null!==e.index?e.index.array:void 0,n=e.attributes,o=n.position.array,a=void 0!==n.normal?n.normal.array:void 0,s=void 0!==n.color?n.color.array:void 0,h=void 0!==n.uv?n.uv.array:void 0,c=void 0!==n.uv2?n.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var l=[],u=[],p=[],d=n=0;n<o.length;n+=3,d+=2)i.vertices.push(new THREE.Vector3(o[n],o[n+1],o[n+2])),void 0!==a&&l.push(new THREE.Vector3(a[n],a[n+1],a[n+2])),void 0!==s&&i.colors.push(new THREE.Color(s[n],s[n+1],s[n+2])),void 0!==h&&u.push(new THREE.Vector2(h[d],h[d+1])),void 0!==c&&p.push(new THREE.Vector2(c[d],c[d+1]));if(void 0!==r)if(o=e.groups,0<o.length)for(n=0;n<o.length;n++)for(var f=o[n],E=f.start,m=f.count,d=E,E=E+m;E>d;d+=3)t(r[d],r[d+1],r[d+2],f.materialIndex);else for(n=0;n<r.length;n+=3)t(r[n],r[n+1],r[n+2]);else for(n=0;n<o.length/3;n+=3)t(n,n+1,n+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,t=0===t?1:1/t,i=new THREE.Matrix4;return i.set(t,0,0,-t*e.x,0,t,0,-t*e.y,0,0,t,-t*e.z,0,0,0,1),this.applyMatrix(i),this},computeFaceNormals:function(){for(var e=new THREE.Vector3,t=new THREE.Vector3,i=0,r=this.faces.length;r>i;i++){var n=this.faces[i],o=this.vertices[n.a],a=this.vertices[n.b];e.subVectors(this.vertices[n.c],a),t.subVectors(o,a),e.cross(t),e.normalize(),n.normal.copy(e)}},computeVertexNormals:function(e){void 0===e&&(e=!0);var t,i,r;for(r=Array(this.vertices.length),t=0,i=this.vertices.length;i>t;t++)r[t]=new THREE.Vector3;if(e){var n,o,a,s=new THREE.Vector3,h=new THREE.Vector3;for(e=0,t=this.faces.length;t>e;e++)i=this.faces[e],n=this.vertices[i.a],o=this.vertices[i.b],a=this.vertices[i.c],s.subVectors(a,o),h.subVectors(n,o),s.cross(h),r[i.a].add(s),r[i.b].add(s),r[i.c].add(s)}else for(e=0,t=this.faces.length;t>e;e++)i=this.faces[e],r[i.a].add(i.normal),r[i.b].add(i.normal),r[i.c].add(i.normal);for(t=0,i=this.vertices.length;i>t;t++)r[t].normalize();for(e=0,t=this.faces.length;t>e;e++)i=this.faces[e],n=i.vertexNormals,3===n.length?(n[0].copy(r[i.a]),n[1].copy(r[i.b]),n[2].copy(r[i.c])):(n[0]=r[i.a].clone(),n[1]=r[i.b].clone(),n[2]=r[i.c].clone());0<this.faces.length&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,i,r,n;for(i=0,r=this.faces.length;r>i;i++)for(n=this.faces[i],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;t>e;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[],n=this.morphNormals[e].faceNormals;var a,s,h=this.morphNormals[e].vertexNormals;for(i=0,r=this.faces.length;r>i;i++)a=new THREE.Vector3,s={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},n.push(a),h.push(s)}for(h=this.morphNormals[e],o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals(),i=0,r=this.faces.length;r>i;i++)n=this.faces[i],a=h.faceNormals[i],s=h.vertexNormals[i],a.copy(n.normal),s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])}for(i=0,r=this.faces.length;r>i;i++)n=this.faces[i],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){},computeLineDistances:function(){for(var e=0,t=this.vertices,i=0,r=t.length;r>i;i++)i>0&&(e+=t[i].distanceTo(t[i-1])),this.lineDistances[i]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,i){if(!1==e instanceof THREE.Geometry);else{var r,n=this.vertices.length,o=this.vertices,a=e.vertices,s=this.faces,h=e.faces,c=this.faceVertexUvs[0];e=e.faceVertexUvs[0],void 0===i&&(i=0),void 0!==t&&(r=(new THREE.Matrix3).getNormalMatrix(t));for(var l=0,u=a.length;u>l;l++){var p=a[l].clone();void 0!==t&&p.applyMatrix4(t),o.push(p)}for(l=0,u=h.length;u>l;l++){var d,a=h[l],f=a.vertexNormals,E=a.vertexColors,p=new THREE.Face3(a.a+n,a.b+n,a.c+n);for(p.normal.copy(a.normal),void 0!==r&&p.normal.applyMatrix3(r).normalize(),t=0,o=f.length;o>t;t++)d=f[t].clone(),void 0!==r&&d.applyMatrix3(r).normalize(),p.vertexNormals.push(d);for(p.color.copy(a.color),t=0,o=E.length;o>t;t++)d=E[t],p.vertexColors.push(d.clone());p.materialIndex=a.materialIndex+i,s.push(p)}for(l=0,u=e.length;u>l;l++)if(i=e[l],r=[],void 0!==i){for(t=0,o=i.length;o>t;t++)r.push(i[t].clone());c.push(r)}}},mergeMesh:function(e){!1==e instanceof THREE.Mesh?void 0:(e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix))},mergeVertices:function(){var e,t,i,r={},n=[],o=[],a=Math.pow(10,4);for(t=0,i=this.vertices.length;i>t;t++)e=this.vertices[t],e=Math.round(e.x*a)+"_"+Math.round(e.y*a)+"_"+Math.round(e.z*a),void 0===r[e]?(r[e]=t,n.push(this.vertices[t]),o[t]=n.length-1):o[t]=o[r[e]];for(r=[],t=0,i=this.faces.length;i>t;t++)for(a=this.faces[t],a.a=o[a.a],a.b=o[a.b],a.c=o[a.c],a=[a.a,a.b,a.c],e=0;3>e;e++)if(a[e]===a[(e+1)%3]){r.push(t);break}for(t=r.length-1;t>=0;t--)for(a=r[t],this.faces.splice(a,1),o=0,i=this.faceVertexUvs.length;i>o;o++)this.faceVertexUvs[o].splice(a,1);return t=this.vertices.length-n.length,this.vertices=n,t},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,i=0;t>i;i++)e[i]._id=i;e.sort(function(e,t){return e.materialIndex-t.materialIndex});var r,n,o=this.faceVertexUvs[0],a=this.faceVertexUvs[1];for(o&&o.length===t&&(r=[]),a&&a.length===t&&(n=[]),i=0;t>i;i++){var s=e[i]._id;r&&r.push(o[s]),n&&n.push(a[s])}r&&(this.faceVertexUvs[0]=r),n&&(this.faceVertexUvs[1]=n)},toJSON:function(){function e(e,t,i){return i?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==c[t]?c[t]:(c[t]=h.length/3,h.push(e.x,e.y,e.z),c[t])}function i(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==u[t]?u[t]:(u[t]=l.length,l.push(e.getHex()),u[t])}function r(e){var t=e.x.toString()+e.y.toString();return void 0!==d[t]?d[t]:(d[t]=p.length/2,p.push(e.x,e.y),d[t])}var n={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),void 0!==this.parameters){var o,a=this.parameters;for(o in a)void 0!==a[o]&&(n[o]=a[o]);return n}for(a=[],o=0;o<this.vertices.length;o++){var s=this.vertices[o];a.push(s.x,s.y,s.z)}var s=[],h=[],c={},l=[],u={},p=[],d={};for(o=0;o<this.faces.length;o++){var f=this.faces[o],E=void 0!==this.faceVertexUvs[0][o],m=0<f.normal.length(),g=0<f.vertexNormals.length,v=1!==f.color.r||1!==f.color.g||1!==f.color.b,T=0<f.vertexColors.length,y=0,y=e(y,0,0),y=e(y,1,!0),y=e(y,2,!1),y=e(y,3,E),y=e(y,4,m),y=e(y,5,g),y=e(y,6,v),y=e(y,7,T);s.push(y),s.push(f.a,f.b,f.c),s.push(f.materialIndex),E&&(E=this.faceVertexUvs[0][o],s.push(r(E[0]),r(E[1]),r(E[2]))),m&&s.push(t(f.normal)),g&&(m=f.vertexNormals,s.push(t(m[0]),t(m[1]),t(m[2]))),v&&s.push(i(f.color)),T&&(f=f.vertexColors,s.push(i(f[0]),i(f[1]),i(f[2])))}return n.data={},n.data.vertices=a,n.data.normals=h,0<l.length&&(n.data.colors=l),0<p.length&&(n.data.uvs=[p]),n.data.faces=s,n},clone:function(){return(new THREE.Geometry).copy(this)},copy:function(e){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]];for(var t=e.vertices,i=0,r=t.length;r>i;i++)this.vertices.push(t[i].clone());for(t=e.faces,i=0,r=t.length;r>i;i++)this.faces.push(t[i].clone());for(i=0,r=e.faceVertexUvs.length;r>i;i++){t=e.faceVertexUvs[i],void 0===this.faceVertexUvs[i]&&(this.faceVertexUvs[i]=[]);for(var n=0,o=t.length;o>n;n++){for(var a=t[n],s=[],h=0,c=a.length;c>h;h++)s.push(a[h].clone());this.faceVertexUvs[i].push(s)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="DirectGeometry",this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingSphere=this.boundingBox=null,this.groupsNeedUpdate=this.uvsNeedUpdate=this.colorsNeedUpdate=this.normalsNeedUpdate=this.verticesNeedUpdate=!1},THREE.DirectGeometry.prototype={constructor:THREE.DirectGeometry,computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){},computeVertexNormals:function(){},computeGroups:function(e){var t,i,r=[];e=e.faces;for(var n=0;n<e.length;n++){var o=e[n];o.materialIndex!==i&&(i=o.materialIndex,void 0!==t&&(t.count=3*n-t.start,r.push(t)),t={start:3*n,materialIndex:i})}void 0!==t&&(t.count=3*n-t.start,r.push(t)),this.groups=r},fromGeometry:function(e){var t,i=e.faces,r=e.vertices,n=e.faceVertexUvs,o=n[0]&&0<n[0].length,a=n[1]&&0<n[1].length,s=e.morphTargets,h=s.length;if(h>0){t=[];for(var c=0;h>c;c++)t[c]=[];this.morphTargets.position=t}var l,u=e.morphNormals,p=u.length;if(p>0){for(l=[],c=0;p>c;c++)l[c]=[];this.morphTargets.normal=l}for(var d=e.skinIndices,f=e.skinWeights,E=d.length===r.length,m=f.length===r.length,c=0;c<i.length;c++){var g=i[c];this.vertices.push(r[g.a],r[g.b],r[g.c]);var v=g.vertexNormals;for(3===v.length?this.normals.push(v[0],v[1],v[2]):(v=g.normal,this.normals.push(v,v,v)),v=g.vertexColors,3===v.length?this.colors.push(v[0],v[1],v[2]):(v=g.color,this.colors.push(v,v,v)),!0===o&&(v=n[0][c],void 0!==v?this.uvs.push(v[0],v[1],v[2]):this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)),!0===a&&(v=n[1][c],void 0!==v?this.uvs2.push(v[0],v[1],v[2]):this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2)),v=0;h>v;v++){var T=s[v].vertices;t[v].push(T[g.a],T[g.b],T[g.c])}for(v=0;p>v;v++)T=u[v].vertexNormals[c],l[v].push(T.a,T.b,T.c);E&&this.skinIndices.push(d[g.a],d[g.b],d[g.c]),m&&this.skinWeights.push(f[g.a],f[g.b],f[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.DirectGeometry.prototype),THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingSphere=this.boundingBox=null,this.drawRange={start:0,count:1/0}},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,getIndex:function(){return this.index},setIndex:function(e){this.index=e},addAttribute:function(e,t,i){if(!1==t instanceof THREE.BufferAttribute&&!1==t instanceof THREE.InterleavedBufferAttribute)this.addAttribute(e,new THREE.BufferAttribute(t,i));else{if("index"!==e)return this.attributes[e]=t,this;this.setIndex(t)}},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,i){this.groups.push({start:e,count:t,materialIndex:void 0!==i?i:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;return void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0),t=this.attributes.normal,void 0!==t&&((new THREE.Matrix3).getNormalMatrix(e).applyToVector3Array(t.array),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new THREE.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,i,r){return void 0===e&&(e=new THREE.Matrix4),e.makeTranslation(t,i,r),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,i,r){return void 0===e&&(e=new THREE.Matrix4),e.makeScale(t,i,r),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){void 0===e&&(e=new THREE.Object3D),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e instanceof THREE.Points||e instanceof THREE.Line){e=new THREE.Float32Attribute(3*t.vertices.length,3);var i=new THREE.Float32Attribute(3*t.colors.length,3);this.addAttribute("position",e.copyVector3sArray(t.vertices)),this.addAttribute("color",i.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length&&(e=new THREE.Float32Attribute(t.lineDistances.length,1),this.addAttribute("lineDistance",e.copyArray(t.lineDistances))),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e instanceof THREE.Mesh&&t instanceof THREE.Geometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t=e.geometry;if(e instanceof THREE.Mesh){var i=t.__directGeometry;if(void 0===i)return this.fromGeometry(t);i.verticesNeedUpdate=t.verticesNeedUpdate,i.normalsNeedUpdate=t.normalsNeedUpdate,i.colorsNeedUpdate=t.colorsNeedUpdate,i.uvsNeedUpdate=t.uvsNeedUpdate,i.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=i}return!0===t.verticesNeedUpdate&&(i=this.attributes.position,void 0!==i&&(i.copyVector3sArray(t.vertices),i.needsUpdate=!0),t.verticesNeedUpdate=!1),!0===t.normalsNeedUpdate&&(i=this.attributes.normal,void 0!==i&&(i.copyVector3sArray(t.normals),i.needsUpdate=!0),t.normalsNeedUpdate=!1),!0===t.colorsNeedUpdate&&(i=this.attributes.color,void 0!==i&&(i.copyColorsArray(t.colors),i.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(i=this.attributes.uv,void 0!==i&&(i.copyVector2sArray(t.uvs),i.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(i=this.attributes.lineDistance,void 0!==i&&(i.copyArray(t.lineDistances),i.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new THREE.DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);this.addAttribute("position",new THREE.BufferAttribute(t,3).copyVector3sArray(e.vertices)),0<e.normals.length&&(t=new Float32Array(3*e.normals.length),this.addAttribute("normal",new THREE.BufferAttribute(t,3).copyVector3sArray(e.normals))),0<e.colors.length&&(t=new Float32Array(3*e.colors.length),this.addAttribute("color",new THREE.BufferAttribute(t,3).copyColorsArray(e.colors))),0<e.uvs.length&&(t=new Float32Array(2*e.uvs.length),this.addAttribute("uv",new THREE.BufferAttribute(t,2).copyVector2sArray(e.uvs))),0<e.uvs2.length&&(t=new Float32Array(2*e.uvs2.length),this.addAttribute("uv2",new THREE.BufferAttribute(t,2).copyVector2sArray(e.uvs2))),0<e.indices.length&&(t=new(65535<e.vertices.length?Uint32Array:Uint16Array)(3*e.indices.length),this.setIndex(new THREE.BufferAttribute(t,1).copyIndicesArray(e.indices))),this.groups=e.groups;for(var i in e.morphTargets){for(var t=[],r=e.morphTargets[i],n=0,o=r.length;o>n;n++){var a=r[n],s=new THREE.Float32Attribute(3*a.length,3);t.push(s.copyVector3sArray(a))}this.morphAttributes[i]=t}return 0<e.skinIndices.length&&(i=new THREE.Float32Attribute(4*e.skinIndices.length,4),this.addAttribute("skinIndex",i.copyVector4sArray(e.skinIndices))),0<e.skinWeights.length&&(i=new THREE.Float32Attribute(4*e.skinWeights.length,4),this.addAttribute("skinWeight",i.copyVector4sArray(e.skinWeights))),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){return new THREE.Vector3,function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;e&&this.boundingBox.setFromArray(e),(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&void 0}}(),computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var i=this.attributes.position.array;if(i){var r=this.boundingSphere.center;e.setFromArray(i),e.center(r);for(var n=0,o=0,a=i.length;a>o;o+=3)t.fromArray(i,o),n=Math.max(n,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&void 0}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,i=this.groups;if(t.position){var r=t.position.array;if(void 0===t.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(r.length),3));else for(var n=t.normal.array,o=0,a=n.length;a>o;o++)n[o]=0;var s,h,c,n=t.normal.array,l=new THREE.Vector3,u=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,f=new THREE.Vector3;if(e){e=e.array,0===i.length&&this.addGroup(0,e.length);for(var E=0,m=i.length;m>E;++E)for(o=i[E],a=o.start,s=o.count,o=a,a+=s;a>o;o+=3)s=3*e[o+0],h=3*e[o+1],c=3*e[o+2],l.fromArray(r,s),u.fromArray(r,h),p.fromArray(r,c),d.subVectors(p,u),f.subVectors(l,u),d.cross(f),n[s]+=d.x,n[s+1]+=d.y,n[s+2]+=d.z,n[h]+=d.x,n[h+1]+=d.y,n[h+2]+=d.z,n[c]+=d.x,n[c+1]+=d.y,n[c+2]+=d.z}else for(o=0,a=r.length;a>o;o+=9)l.fromArray(r,o),u.fromArray(r,o+3),p.fromArray(r,o+6),d.subVectors(p,u),f.subVectors(l,u),d.cross(f),n[o]=d.x,n[o+1]=d.y,n[o+2]=d.z,n[o+3]=d.x,n[o+4]=d.y,n[o+5]=d.z,n[o+6]=d.x,n[o+7]=d.y,n[o+8]=d.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(!1!=e instanceof THREE.BufferGeometry){void 0===t&&(t=0);var i,r=this.attributes;for(i in r)if(void 0!==e.attributes[i])for(var n=r[i].array,o=e.attributes[i],a=o.array,s=0,o=o.itemSize*t;s<a.length;s++,o++)n[o]=a[s];return this}},normalizeNormals:function(){for(var e,t,i,r=this.attributes.normal.array,n=0,o=r.length;o>n;n+=3)e=r[n],t=r[n+1],i=r[n+2],e=1/Math.sqrt(e*e+t*t+i*i),r[n]*=e,r[n+1]*=e,r[n+2]*=e},toNonIndexed:function(){if(null===this.index)return this;var e,t=new THREE.BufferGeometry,i=this.index.array,r=this.attributes;for(e in r){for(var n=r[e],o=n.array,n=n.itemSize,a=new o.constructor(i.length*n),s=0,h=0,c=0,l=i.length;l>c;c++)for(var s=i[c]*n,u=0;n>u;u++)a[h++]=o[s++];t.addAttribute(e,new THREE.BufferAttribute(a,n))}return t},toJSON:function(){var e={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t,i=this.parameters;for(t in i)void 0!==i[t]&&(e[t]=i[t]);return e}e.data={attributes:{}};var r=this.index;null!==r&&(i=Array.prototype.slice.call(r.array),e.data.index={type:r.array.constructor.name,array:i}),r=this.attributes;for(t in r){var n=r[t],i=Array.prototype.slice.call(n.array);e.data.attributes[t]={itemSize:n.itemSize,type:n.array.constructor.name,array:i}}return t=this.groups,0<t.length&&(e.data.groups=JSON.parse(JSON.stringify(t))),t=this.boundingSphere,null!==t&&(e.data.boundingSphere={center:t.center.toArray(),radius:t.radius}),e},clone:function(){return(new THREE.BufferGeometry).copy(this)},copy:function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var i,t=e.attributes;for(i in t)this.addAttribute(i,t[i].clone());for(e=e.groups,i=0,t=e.length;t>i;i++){var r=e[i];this.addGroup(r.start,r.count)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.BufferGeometry.MaxIndex=65535,THREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0},THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry,THREE.InstancedBufferGeometry.prototype.addGroup=function(e,t,i){this.groups.push({start:e,count:t,instances:i})},THREE.InstancedBufferGeometry.prototype.copy=function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var i,t=e.attributes;for(i in t)this.addAttribute(i,t[i].clone());for(e=e.groups,i=0,t=e.length;t>i;i++){var r=e[i];this.addGroup(r.start,r.count,r.instances)}return this},THREE.EventDispatcher.prototype.apply(THREE.InstancedBufferGeometry.prototype),THREE.Uniform=function(e,t){this.type=e,this.value=t,this.dynamic=!1},THREE.Uniform.prototype={constructor:THREE.Uniform,onUpdate:function(e){return this.dynamic=!0,this.onUpdateCallback=e,this}},THREE.AnimationClip=function(e,t,i){this.name=e||THREE.Math.generateUUID(),this.tracks=i,this.duration=void 0!==t?t:-1,0>this.duration&&this.resetDuration(),this.trim(),this.optimize()},THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,resetDuration:function(){for(var e=0,t=0,i=this.tracks.length;t!==i;++t)var r=this.tracks[t],e=Math.max(e,r.times[r.times.length-1]);this.duration=e},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},Object.assign(THREE.AnimationClip,{parse:function(e){for(var t=[],i=e.tracks,r=1/(e.fps||1),n=0,o=i.length;n!==o;++n)t.push(THREE.KeyframeTrack.parse(i[n]).scale(r));return new THREE.AnimationClip(e.name,e.duration,t)},toJSON:function(e){var t=[],i=e.tracks;e={name:e.name,duration:e.duration,tracks:t};for(var r=0,n=i.length;r!==n;++r)t.push(THREE.KeyframeTrack.toJSON(i[r]));return e},CreateFromMorphTargetSequence:function(e,t,i){for(var r=t.length,n=[],o=0;r>o;o++){var a=[],s=[];a.push((o+r-1)%r,o,(o+1)%r),s.push(0,1,0);var h=THREE.AnimationUtils.getKeyframeOrder(a),a=THREE.AnimationUtils.sortedArray(a,1,h),s=THREE.AnimationUtils.sortedArray(s,1,h);0===a[0]&&(a.push(r),s.push(s[0])),n.push(new THREE.NumberKeyframeTrack(".morphTargetInfluences["+t[o].name+"]",a,s).scale(1/i))}return new THREE.AnimationClip(e,-1,n)},findByName:function(e,t){for(var i=0;i<e.length;i++)if(e[i].name===t)return e[i];return null},CreateClipsFromMorphTargetSequences:function(e,t){for(var i={},r=/^([\w-]*?)([\d]+)$/,n=0,o=e.length;o>n;n++){var a=e[n],s=a.name.match(r);if(s&&1<s.length){var h=s[1];(s=i[h])||(i[h]=s=[]),s.push(a)}}r=[];for(h in i)r.push(THREE.AnimationClip.CreateFromMorphTargetSequence(h,i[h],t));return r},parseAnimation:function(e,t,i){if(!e)return null;i=function(e,t,i,r,n){if(0!==i.length){var o=[],a=[];THREE.AnimationUtils.flattenJSON(i,o,a,r),0!==o.length&&n.push(new e(t,o,a))}};var r=[],n=e.name||"default",o=e.length||-1,a=e.fps||30;e=e.hierarchy||[];for(var s=0;s<e.length;s++){var h=e[s].keys;if(h&&0!=h.length)if(h[0].morphTargets){for(var o={},c=0;c<h.length;c++)if(h[c].morphTargets)for(var l=0;l<h[c].morphTargets.length;l++)o[h[c].morphTargets[l]]=-1;for(var u in o){for(var p=[],d=[],l=0;l!==h[c].morphTargets.length;++l){var f=h[c];p.push(f.time),d.push(f.morphTarget===u?1:0)}r.push(new THREE.NumberKeyframeTrack(".morphTargetInfluence["+u+"]",p,d))}o=o.length*(a||1)}else c=".bones["+t[s].name+"]",i(THREE.VectorKeyframeTrack,c+".position",h,"pos",r),i(THREE.QuaternionKeyframeTrack,c+".quaternion",h,"rot",r),i(THREE.VectorKeyframeTrack,c+".scale",h,"scl",r)}return 0===r.length?null:new THREE.AnimationClip(n,o,r)}}),THREE.AnimationMixer=function(e){this._root=e,this._initMemoryManager(),this.time=this._accuIndex=0,this.timeScale=1},THREE.AnimationMixer.prototype={constructor:THREE.AnimationMixer,clipAction:function(e,t){var i,r=(t||this._root).uuid,n="string"==typeof e?e:e.name,o=e!==n?e:null,a=this._actionsByClip[n];if(void 0!==a){if(i=a.actionByRoot[r],void 0!==i)return i;if(i=a.knownActions[0],o=i._clip,e!==n&&e!==o)throw Error("Different clips with the same name detected!")}return null===o?null:(a=new THREE.AnimationMixer._Action(this,o,t),this._bindAction(a,i),this._addInactiveAction(a,n,r),a)},existingAction:function(e,t){var i=(t||this._root).uuid,r=this._actionsByClip["string"==typeof e?e:e.name];return void 0!==r?r.actionByRoot[i]||null:null},stopAllAction:function(){for(var e=this._actions,t=this._nActiveActions,i=this._bindings,r=this._nActiveBindings,n=this._nActiveBindings=this._nActiveActions=0;n!==t;++n)e[n].reset();for(n=0;n!==r;++n)i[n].useCount=0;return this},update:function(e){e*=this.timeScale;for(var t=this._actions,i=this._nActiveActions,r=this.time+=e,n=Math.sign(e),o=this._accuIndex^=1,a=0;a!==i;++a){var s=t[a];s.enabled&&s._update(r,e,n,o)}for(e=this._bindings,t=this._nActiveBindings,a=0;a!==t;++a)e[a].apply(o);return this},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions;e=e.name;var i=this._actionsByClip,r=i[e];if(void 0!==r){for(var r=r.knownActions,n=0,o=r.length;n!==o;++n){var a=r[n];this._deactivateAction(a);var s=a._cacheIndex,h=t[t.length-1];a._cacheIndex=null,a._byClipCacheIndex=null,h._cacheIndex=s,t[s]=h,t.pop(),this._removeInactiveBindingsForAction(a)}delete i[e]}},uncacheRoot:function(e){e=e.uuid;var t,i=this._actionsByClip;for(t in i){var r=i[t].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}if(t=this._bindingsByRootAndName[e],void 0!==t)for(var n in t)e=t[n],e.restoreOriginalState(),this._removeInactiveBinding(e)},uncacheAction:function(e,t){var i=this.existingAction(e,t);null!==i&&(this._deactivateAction(i),this._removeInactiveAction(i))}},THREE.EventDispatcher.prototype.apply(THREE.AnimationMixer.prototype),THREE.AnimationMixer._Action=function(e,t,i){this._mixer=e,this._clip=t,this._localRoot=i||null,e=t.tracks,t=e.length,i=Array(t);for(var r={endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},n=0;n!==t;++n){var o=e[n].createInterpolant(null);i[n]=o,o.settings=r}this._interpolantSettings=r,this._interpolants=i,this._propertyBindings=Array(t),this._weightInterpolant=this._timeScaleInterpolant=this._byClipCacheIndex=this._cacheIndex=null,this.loop=THREE.LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this._effectiveWeight=this.weight=this._effectiveTimeScale=this.timeScale=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtEnd=this.zeroSlopeAtStart=!0},THREE.AnimationMixer._Action.prototype={constructor:THREE.AnimationMixer._Action,play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,i){if(e.fadeOut(t),this.fadeIn(t),i){i=this._clip.duration;var r=e._clip.duration,n=i/r;e.warp(1,r/i,t),this.warp(n,1,t)}return this},crossFadeTo:function(e,t,i){return e.crossFadeFrom(this,t,i)},stopFading:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._currentTimeScale,0,e)},warp:function(e,t,i){var r=this._mixer,n=r.time,o=this._timeScaleInterpolant,a=this.timeScale;return null===o&&(this._timeScaleInterpolant=o=r._lendControlInterpolant()),r=o.parameterPositions,o=o.sampleValues,r[0]=n,r[1]=n+i,o[0]=e/a,o[1]=t/a,this},stopWarping:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,i,r){var n=this._startTime;if(null!==n){if(t=(e-n)*i,0>t||0===i)return;this._startTime=null,t*=i}if(t*=this._updateTimeScale(e),i=this._updateTime(t),e=this._updateWeight(e),e>0){t=this._interpolants;for(var n=this._propertyBindings,o=0,a=t.length;o!==a;++o)t[o].evaluate(i),n[o].accumulate(r,e)}},_updateWeight:function(e){var t=0;if(this.enabled){var t=this.weight,i=this._weightInterpolant;if(null!==i){var r=i.evaluate(e)[0],t=t*r;e>i.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=t},_updateTimeScale:function(e){var t=0;if(!this.paused){var t=this.timeScale,i=this._timeScaleInterpolant;if(null!==i){var r=i.evaluate(e)[0],t=t*r;e>i.parameterPositions[1]&&(this.stopWarping(),0===t?this.pause=!0:this.timeScale=t)}}return this._effectiveTimeScale=t},_updateTime:function(e){var t=this.time+e;if(0===e)return t;var i=this._clip.duration,r=this.loop,n=this._loopCount,o=!1;switch(r){case THREE.LoopOnce:if(-1===n&&(this.loopCount=0,this._setEndings(!0,!0,!1)),t>=i)t=i;else{if(!(0>t))break;t=0}this.clampWhenFinished?this.pause=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:0>e?-1:1});break;case THREE.LoopPingPong:o=!0;case THREE.LoopRepeat:if(-1===n&&(e>0?(n=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),t>=i||0>t){var a=Math.floor(t/i),t=t-i*a,n=n+Math.abs(a),s=this.repetitions-n;if(0>s){this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?i:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});break}0===s?(e=0>e,
this._setEndings(e,!e,o)):this._setEndings(!1,!1,o),this._loopCount=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}if(r===THREE.LoopPingPong&&1===(1&n))return this.time=t,i-t}return this.time=t},_setEndings:function(e,t,i){var r=this._interpolantSettings;i?(r.endingStart=THREE.ZeroSlopeEnding,r.endingEnd=THREE.ZeroSlopeEnding):(r.endingStart=e?this.zeroSlopeAtStart?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding,r.endingEnd=t?this.zeroSlopeAtEnd?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:THREE.WrapAroundEnding)},_scheduleFading:function(e,t,i){var r=this._mixer,n=r.time,o=this._weightInterpolant;return null===o&&(this._weightInterpolant=o=r._lendControlInterpolant()),r=o.parameterPositions,o=o.sampleValues,r[0]=n,o[0]=t,r[1]=n+e,o[1]=i,this}},Object.assign(THREE.AnimationMixer.prototype,{_bindAction:function(e,t){var i=e._localRoot||this._root,r=e._clip.tracks,n=r.length,o=e._propertyBindings,a=e._interpolants,s=i.uuid,h=this._bindingsByRootAndName,c=h[s];for(void 0===c&&(c={},h[s]=c),h=0;h!==n;++h){var l=r[h],u=l.name,p=c[u];if(void 0===p){if(p=o[h],void 0!==p){null===p._cacheIndex&&(++p.referenceCount,this._addInactiveBinding(p,s,u));continue}p=new THREE.PropertyMixer(THREE.PropertyBinding.create(i,u,t&&t._propertyBindings[h].binding.parsedPath),l.ValueTypeName,l.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,s,u)}o[h]=p,a[h].resultBuffer=p.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,i=e._clip.name,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,t)}for(t=e._propertyBindings,i=0,r=t.length;i!==r;++i){var n=t[i];0===n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,i=0,r=t.length;i!==r;++i){var n=t[i];0===--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){return e=e._cacheIndex,null!==e&&e<this._nActiveActions},_addInactiveAction:function(e,t,i){var r=this._actions,n=this._actionsByClip,o=n[t];void 0===o?(o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,n[t]=o):(t=o.knownActions,e._byClipCacheIndex=t.length,t.push(e)),e._cacheIndex=r.length,r.push(e),o.actionByRoot[i]=e},_removeInactiveAction:function(e){var t=this._actions,i=t[t.length-1],r=e._cacheIndex;i._cacheIndex=r,t[r]=i,t.pop(),e._cacheIndex=null;var i=e._clip.name,r=this._actionsByClip,n=r[i],o=n.knownActions,a=o[o.length-1],s=e._byClipCacheIndex;a._byClipCacheIndex=s,o[s]=a,o.pop(),e._byClipCacheIndex=null,delete n.actionByRoot[(t._localRoot||this._root).uuid],0===o.length&&delete r[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){e=e._propertyBindings;for(var t=0,i=e.length;t!==i;++t){var r=e[t];0===--r.referenceCount&&this._removeInactiveBinding(r)}},_lendAction:function(e){var t=this._actions,i=e._cacheIndex,r=this._nActiveActions++,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n},_takeBackAction:function(e){var t=this._actions,i=e._cacheIndex,r=--this._nActiveActions,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n},_addInactiveBinding:function(e,t,i){var r=this._bindingsByRootAndName,n=r[t],o=this._bindings;void 0===n&&(n={},r[t]=n),n[i]=e,e._cacheIndex=o.length,o.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,i=e.binding,r=i.rootNode.uuid,i=i.path,n=this._bindingsByRootAndName,o=n[r],a=t[t.length-1];e=e._cacheIndex,a._cacheIndex=e,t[e]=a,t.pop(),delete o[i];e:{for(var s in o)break e;delete n[r]}},_lendBinding:function(e){var t=this._bindings,i=e._cacheIndex,r=this._nActiveBindings++,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n},_takeBackBinding:function(e){var t=this._bindings,i=e._cacheIndex,r=--this._nActiveBindings,n=t[r];e._cacheIndex=r,t[r]=e,n._cacheIndex=i,t[i]=n},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,i=e[t];return void 0===i&&(i=new THREE.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),i.__cacheIndex=t,e[t]=i),i},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,i=e.__cacheIndex,r=--this._nActiveControlInterpolants,n=t[r];e.__cacheIndex=r,t[r]=e,n.__cacheIndex=i,t[i]=n},_controlInterpolantsResultBuffer:new Float32Array(1)}),THREE.AnimationObjectGroup=function(e){this.uuid=THREE.Math.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var i=0,r=arguments.length;i!==r;++i)t[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var n=this;this.stats={objects:{get total(){return n._objects.length},get inUse(){return this.total-n.nCachedObjects_}},get bindingsPerObject(){return n._bindings.length}}},THREE.AnimationObjectGroup.prototype={constructor:THREE.AnimationObjectGroup,add:function(e){for(var t=this._objects,i=t.length,r=this.nCachedObjects_,n=this._indicesByUUID,o=this._paths,a=this._parsedPaths,s=this._bindings,h=s.length,c=0,l=arguments.length;c!==l;++c){var u=arguments[c],p=u.uuid,d=n[p];if(void 0===d){d=i++,n[p]=d,t.push(u);for(var p=0,f=h;p!==f;++p)s[p].push(new THREE.PropertyBinding(u,o[p],a[p]))}else if(r>d){var E=t[d],m=--r,f=t[m];for(n[f.uuid]=d,t[d]=f,n[p]=m,t[m]=u,p=0,f=h;p!==f;++p){var g=s[p],v=g[d];g[d]=g[m],void 0===v&&(v=new THREE.PropertyBinding(u,o[p],a[p])),g[m]=v}}else t[d]!==E&&void 0}this.nCachedObjects_=r},remove:function(e){for(var t=this._objects,i=this.nCachedObjects_,r=this._indicesByUUID,n=this._bindings,o=n.length,a=0,s=arguments.length;a!==s;++a){var h=arguments[a],c=h.uuid,l=r[c];if(void 0!==l&&l>=i){var u=i++,p=t[u];for(r[p.uuid]=l,t[l]=p,r[c]=u,t[u]=h,h=0,c=o;h!==c;++h){var p=n[h],d=p[l];p[l]=p[u],p[u]=d}}}this.nCachedObjects_=i},uncache:function(e){for(var t=this._objects,i=t.length,r=this.nCachedObjects_,n=this._indicesByUUID,o=this._bindings,a=o.length,s=0,h=arguments.length;s!==h;++s){var c=arguments[s].uuid,l=n[c];if(void 0!==l)if(delete n[c],r>l){var c=--r,u=t[c],p=--i,d=t[p];for(n[u.uuid]=l,t[l]=u,n[d.uuid]=c,t[c]=d,t.pop(),u=0,d=a;u!==d;++u){var f=o[u],E=f[p];f[l]=f[c],f[c]=E,f.pop()}}else for(p=--i,d=t[p],n[d.uuid]=l,t[l]=d,t.pop(),u=0,d=a;u!==d;++u)f=o[u],f[l]=f[p],f.pop()}this.nCachedObjects_=r},subscribe_:function(e,t){var i=this._bindingsIndicesByPath,r=i[e],n=this._bindings;if(void 0!==r)return n[r];var o=this._paths,a=this._parsedPaths,s=this._objects,h=this.nCachedObjects_,c=Array(s.length),r=n.length;for(i[e]=r,o.push(e),a.push(t),n.push(c),i=h,r=s.length;i!==r;++i)c[i]=new THREE.PropertyBinding(s[i],e,t);return c},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,i=t[e];if(void 0!==i){var r=this._paths,n=this._parsedPaths,o=this._bindings,a=o.length-1,s=o[a];t[e[a]]=i,o[i]=s,o.pop(),n[i]=n[a],n.pop(),r[i]=r[a],r.pop()}}},THREE.AnimationUtils={arraySlice:function(e,t,i){return THREE.AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,i)):e.slice(t,i)},convertArray:function(e,t,i){return!e||!i&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){for(var t=e.length,i=Array(t),r=0;r!==t;++r)i[r]=r;return i.sort(function(t,i){return e[t]-e[i]}),i},sortedArray:function(e,t,i){for(var r=e.length,n=new e.constructor(r),o=0,a=0;a!==r;++o)for(var s=i[o]*t,h=0;h!==t;++h)n[a++]=e[s+h];return n},flattenJSON:function(e,t,i,r){for(var n=1,o=e[0];void 0!==o&&void 0===o[r];)o=e[n++];if(void 0!==o){var a=o[r];if(void 0!==a)if(Array.isArray(a)){do a=o[r],void 0!==a&&(t.push(o.time),i.push.apply(i,a)),o=e[n++];while(void 0!==o)}else if(void 0!==a.toArray){do a=o[r],void 0!==a&&(t.push(o.time),a.toArray(i,i.length)),o=e[n++];while(void 0!==o)}else do a=o[r],void 0!==a&&(t.push(o.time),i.push(a)),o=e[n++];while(void 0!==o)}}},THREE.KeyframeTrack=function(e,t,i,r){if(void 0===e)throw Error("track name is undefined");if(void 0===t||0===t.length)throw Error("no keyframes in track named "+e);this.name=e,this.times=THREE.AnimationUtils.convertArray(t,this.TimeBufferType),this.values=THREE.AnimationUtils.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation),this.validate(),this.optimize()},THREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(e){return new THREE.DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new THREE.LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new THREE.CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t=void 0;switch(e){case THREE.InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case THREE.InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case THREE.InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){if(t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name,void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw Error(t);this.setInterpolation(this.DefaultInterpolation)}}else this.createInterpolant=t},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return THREE.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return THREE.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return THREE.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(0!==e)for(var t=this.times,i=0,r=t.length;i!==r;++i)t[i]+=e;return this},scale:function(e){if(1!==e)for(var t=this.times,i=0,r=t.length;i!==r;++i)t[i]*=e;return this},trim:function(e,t){for(var i=this.times,r=i.length,n=0,o=r-1;n!==r&&i[n]<e;)++n;for(;-1!==o&&i[o]>t;)--o;return++o,(0!==n||o!==r)&&(n>=o&&(o=Math.max(o,1),n=o-1),r=this.getValueSize(),this.times=THREE.AnimationUtils.arraySlice(i,n,o),this.values=THREE.AnimationUtils.arraySlice(this.values,n*r,o*r)),this},validate:function(){var e=!0,t=this.getValueSize();0!==t-Math.floor(t)&&(e=!1);var i=this.times,t=this.values,r=i.length;0===r&&(e=!1);for(var n=null,o=0;o!==r;o++){var a=i[o];if("number"==typeof a&&isNaN(a)){e=!1;break}if(null!==n&&n>a){e=!1;break}n=a}if(void 0!==t&&THREE.AnimationUtils.isTypedArray(t))for(o=0,i=t.length;o!==i;++o)if(r=t[o],isNaN(r)){e=!1;break}return e},optimize:function(){for(var e=this.times,t=this.values,i=this.getValueSize(),r=1,n=1,o=e.length-1;o>=n;++n){var a=!1,s=e[n];if(s!==e[n+1]&&(1!==n||s!==s[0]))for(var h=n*i,c=h-i,l=h+i,s=0;s!==i;++s){var u=t[h+s];if(u!==t[c+s]||u!==t[l+s]){a=!0;break}}if(a){if(n!==r)for(e[r]=e[n],a=n*i,h=r*i,s=0;s!==i;++s)t[h+s]=t[a+s];++r}}return r!==e.length&&(this.times=THREE.AnimationUtils.arraySlice(e,0,r),this.values=THREE.AnimationUtils.arraySlice(t,0,r*i)),this}},Object.assign(THREE.KeyframeTrack,{parse:function(e){if(void 0===e.type)throw Error("track type undefined, can not parse");var t=THREE.KeyframeTrack._getTrackTypeForValueTypeName(e.type);if(void 0===e.times){var i=[],r=[];THREE.AnimationUtils.flattenJSON(e.keys,i,r,"value"),e.times=i,e.values=r}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)},toJSON:function(e){var t=e.constructor;if(void 0!==t.toJSON)t=t.toJSON(e);else{var t={name:e.name,times:THREE.AnimationUtils.convertArray(e.times,Array),values:THREE.AnimationUtils.convertArray(e.values,Array)},i=e.getInterpolation();i!==e.DefaultInterpolation&&(t.interpolation=i)}return t.type=e.ValueTypeName,t},_getTrackTypeForValueTypeName:function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return THREE.NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return THREE.VectorKeyframeTrack;case"color":return THREE.ColorKeyframeTrack;case"quaternion":return THREE.QuaternionKeyframeTrack;case"bool":case"boolean":return THREE.BooleanKeyframeTrack;case"string":return THREE.StringKeyframeTrack}throw Error("Unsupported typeName: "+e)}}),THREE.PropertyBinding=function(e,t,i){this.path=t,this.parsedPath=i||THREE.PropertyBinding.parseTrackName(t),this.node=THREE.PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e},THREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,getValue:function(e,t){this.bind(),this.getValue(e,t)},setValue:function(e,t){this.bind(),this.setValue(e,t)},bind:function(){var e=this.node,t=this.parsedPath,i=t.objectName,r=t.propertyName,n=t.propertyIndex;if(e||(this.node=e=THREE.PropertyBinding.findNode(this.rootNode,t.nodeName)||this.rootNode),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,e){if(i){var o=t.objectIndex;switch(i){case"materials":if(!e.material)return;if(!e.material.materials)return;e=e.material.materials;break;case"bones":if(!e.skeleton)return;for(e=e.skeleton.bones,i=0;i<e.length;i++)if(e[i].name===o){o=i;break}break;default:if(void 0===e[i])return;e=e[i]}if(void 0!==o){if(void 0===e[o])return;e=e[o]}}if(o=e[r]){if(t=this.Versioning.None,void 0!==e.needsUpdate?(t=this.Versioning.NeedsUpdate,this.targetObject=e):void 0!==e.matrixWorldNeedsUpdate&&(t=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=e),i=this.BindingType.Direct,void 0!==n){if("morphTargetInfluences"===r){if(!e.geometry)return;if(!e.geometry.morphTargets)return;for(i=0;i<this.node.geometry.morphTargets.length;i++)if(e.geometry.morphTargets[i].name===n){n=i;break}}i=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=n}else void 0!==o.fromArray&&void 0!==o.toArray?(i=this.BindingType.HasFromToArray,this.resolvedProperty=o):void 0!==o.length?(i=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[i],this.setValue=this.SetterByBindingTypeAndVersioning[i][t]}}},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}},Object.assign(THREE.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:THREE.PropertyBinding.prototype.getValue,_setValue_unbound:THREE.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(e,t){e[t]=this.node[this.propertyName]},function(e,t){for(var i=this.resolvedProperty,r=0,n=i.length;r!==n;++r)e[t++]=i[r]},function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]},function(e,t){this.resolvedProperty.toArray(e,t)}],SetterByBindingTypeAndVersioning:[[function(e,t){this.node[this.propertyName]=e[t]},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.node[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){for(var i=this.resolvedProperty,r=0,n=i.length;r!==n;++r)i[r]=e[t++]},function(e,t){for(var i=this.resolvedProperty,r=0,n=i.length;r!==n;++r)i[r]=e[t++];this.targetObject.needsUpdate=!0},function(e,t){for(var i=this.resolvedProperty,r=0,n=i.length;r!==n;++r)i[r]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(e,t){this.resolvedProperty.fromArray(e,t)},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0},function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}]]}),THREE.PropertyBinding.Composite=function(e,t,i){i=i||THREE.PropertyBinding.parseTrackName(t),this._targetGroup=e,this._bindings=e.subscribe_(t,i)},THREE.PropertyBinding.Composite.prototype={constructor:THREE.PropertyBinding.Composite,getValue:function(e,t){this.bind();var i=this._bindings[this._targetGroup.nCachedObjects_];void 0!==i&&i.getValue(e,t)},setValue:function(e,t){for(var i=this._bindings,r=this._targetGroup.nCachedObjects_,n=i.length;r!==n;++r)i[r].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}},THREE.PropertyBinding.create=function(e,t,i){return e instanceof THREE.AnimationObjectGroup?new THREE.PropertyBinding.Composite(e,t,i):new THREE.PropertyBinding(e,t,i)},THREE.PropertyBinding.parseTrackName=function(e){var t=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,i=t.exec(e);if(!i)throw Error("cannot parse trackName at all: "+e);if(i.index===t.lastIndex&&t.lastIndex++,t={nodeName:i[3],objectName:i[5],objectIndex:i[7],propertyName:i[9],propertyIndex:i[11]},null===t.propertyName||0===t.propertyName.length)throw Error("can not parse propertyName from trackName: "+e);return t},THREE.PropertyBinding.findNode=function(e,t){if(!t||""===t||"root"===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var i=function(e){for(var i=0;i<e.bones.length;i++){var r=e.bones[i];if(r.name===t)return r}return null}(e.skeleton);if(i)return i}if(e.children){var r=function(e){for(var i=0;i<e.length;i++){var n=e[i];if(n.name===t||n.uuid===t||(n=r(n.children)))return n}return null};if(i=r(e.children))return i}return null},THREE.PropertyMixer=function(e,t,i){switch(this.binding=e,this.valueSize=i,e=Float64Array,t){case"quaternion":t=this._slerp;break;case"string":case"bool":e=Array,t=this._select;break;default:t=this._lerp}this.buffer=new e(4*i),this._mixBufferRegion=t,this.referenceCount=this.useCount=this.cumulativeWeight=0},THREE.PropertyMixer.prototype={constructor:THREE.PropertyMixer,accumulate:function(e,t){var i=this.buffer,r=this.valueSize,n=e*r+r,o=this.cumulativeWeight;if(0===o){for(o=0;o!==r;++o)i[n+o]=i[o];o=t}else o+=t,this._mixBufferRegion(i,n,0,t/o,r);this.cumulativeWeight=o},apply:function(e){var t=this.valueSize,i=this.buffer;e=e*t+t;var r=this.cumulativeWeight,n=this.binding;this.cumulativeWeight=0,1>r&&this._mixBufferRegion(i,e,3*t,1-r,t);for(var r=t,o=t+t;r!==o;++r)if(i[r]!==i[r+t]){n.setValue(i,e);break}},saveOriginalState:function(){var e=this.buffer,t=this.valueSize,i=3*t;this.binding.getValue(e,i);for(var r=t;r!==i;++r)e[r]=e[i+r%t];this.cumulativeWeight=0},restoreOriginalState:function(){this.binding.setValue(this.buffer,3*this.valueSize)},_select:function(e,t,i,r,n){if(r>=.5)for(r=0;r!==n;++r)e[t+r]=e[i+r]},_slerp:function(e,t,i,r,n){THREE.Quaternion.slerpFlat(e,t,e,t,e,i,r)},_lerp:function(e,t,i,r,n){for(var o=1-r,a=0;a!==n;++a){var s=t+a;e[s]=e[s]*o+e[i+a]*r}}},THREE.BooleanKeyframeTrack=function(e,t,i){THREE.KeyframeTrack.call(this,e,t,i)},THREE.BooleanKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:THREE.IntepolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),THREE.NumberKeyframeTrack=function(e,t,i,r){THREE.KeyframeTrack.call(this,e,t,i,r)},THREE.NumberKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.NumberKeyframeTrack,ValueTypeName:"number"}),THREE.QuaternionKeyframeTrack=function(e,t,i,r){THREE.KeyframeTrack.call(this,e,t,i,r)},THREE.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodLinear:function(e){return new THREE.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0}),THREE.StringKeyframeTrack=function(e,t,i,r){THREE.KeyframeTrack.call(this,e,t,i,r)},THREE.StringKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:THREE.IntepolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),THREE.VectorKeyframeTrack=function(e,t,i,r){THREE.KeyframeTrack.call(this,e,t,i,r)},THREE.VectorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.VectorKeyframeTrack,ValueTypeName:"vector"}),THREE.Audio=function(e){THREE.Object3D.call(this),this.type="Audio",this.context=e.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filter=null},THREE.Audio.prototype=Object.create(THREE.Object3D.prototype),THREE.Audio.prototype.constructor=THREE.Audio,THREE.Audio.prototype.getOutput=function(){return this.gain},THREE.Audio.prototype.load=function(e){var t=new THREE.AudioBuffer(this.context);return t.load(e),this.setBuffer(t),this},THREE.Audio.prototype.setNodeSource=function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},THREE.Audio.prototype.setBuffer=function(e){var t=this;return e.onReady(function(e){t.source.buffer=e,t.sourceType="buffer",t.autoplay&&t.play()}),this},THREE.Audio.prototype.play=function(){if(!0===this.isPlaying);else if(!1===this.hasPlaybackControl);else{var e=this.context.createBufferSource();e.buffer=this.source.buffer,e.loop=this.source.loop,e.onended=this.source.onended,e.start(0,this.startTime),e.playbackRate.value=this.playbackRate,this.isPlaying=!0,this.source=e,this.connect()}},THREE.Audio.prototype.pause=function(){!1===this.hasPlaybackControl?void 0:(this.source.stop(),this.startTime=this.context.currentTime)},THREE.Audio.prototype.stop=function(){!1===this.hasPlaybackControl?void 0:(this.source.stop(),this.startTime=0)},THREE.Audio.prototype.connect=function(){null!==this.filter?(this.source.connect(this.filter),this.filter.connect(this.getOutput())):this.source.connect(this.getOutput())},THREE.Audio.prototype.disconnect=function(){null!==this.filter?(this.source.disconnect(this.filter),this.filter.disconnect(this.getOutput())):this.source.disconnect(this.getOutput())},THREE.Audio.prototype.getFilter=function(){return this.filter},THREE.Audio.prototype.setFilter=function(e){void 0===e&&(e=null),!0===this.isPlaying?(this.disconnect(),this.filter=e,this.connect()):this.filter=e},THREE.Audio.prototype.setPlaybackRate=function(e){!1===this.hasPlaybackControl?void 0:(this.playbackRate=e,!0===this.isPlaying&&(this.source.playbackRate.value=this.playbackRate))},THREE.Audio.prototype.getPlaybackRate=function(){return this.playbackRate},THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1},THREE.Audio.prototype.setLoop=function(e){!1===this.hasPlaybackControl?void 0:this.source.loop=e},THREE.Audio.prototype.getLoop=function(){return!1===this.hasPlaybackControl?!1:this.source.loop},THREE.Audio.prototype.setVolume=function(e){this.gain.gain.value=e},THREE.Audio.prototype.getVolume=function(){return this.gain.gain.value},THREE.AudioAnalyser=function(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=void 0!==t?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)},THREE.AudioAnalyser.prototype={constructor:THREE.AudioAnalyser,getData:function(){return this.analyser.getByteFrequencyData(this.data),this.data}},THREE.AudioBuffer=function(e){this.context=e,this.ready=!1,this.readyCallbacks=[]},THREE.AudioBuffer.prototype.load=function(e){var t=this,i=new XMLHttpRequest;return i.open("GET",e,!0),i.responseType="arraybuffer",i.onload=function(e){t.context.decodeAudioData(this.response,function(e){for(t.buffer=e,t.ready=!0,e=0;e<t.readyCallbacks.length;e++)t.readyCallbacks[e](t.buffer);t.readyCallbacks=[]})},i.send(),this},THREE.AudioBuffer.prototype.onReady=function(e){this.ready?e(this.buffer):this.readyCallbacks.push(e)},THREE.PositionalAudio=function(e){THREE.Audio.call(this,e),this.panner=this.context.createPanner(),this.panner.connect(this.gain)},THREE.PositionalAudio.prototype=Object.create(THREE.Audio.prototype),THREE.PositionalAudio.prototype.constructor=THREE.PositionalAudio,THREE.PositionalAudio.prototype.getOutput=function(){return this.panner},THREE.PositionalAudio.prototype.setRefDistance=function(e){this.panner.refDistance=e},THREE.PositionalAudio.prototype.getRefDistance=function(){return this.panner.refDistance},THREE.PositionalAudio.prototype.setRolloffFactor=function(e){this.panner.rolloffFactor=e},THREE.PositionalAudio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor},THREE.PositionalAudio.prototype.setDistanceModel=function(e){this.panner.distanceModel=e},THREE.PositionalAudio.prototype.getDistanceModel=function(){return this.panner.distanceModel},THREE.PositionalAudio.prototype.setMaxDistance=function(e){this.panner.maxDistance=e},THREE.PositionalAudio.prototype.getMaxDistance=function(){return this.panner.maxDistance},THREE.PositionalAudio.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3;return function(t){THREE.Object3D.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}(),THREE.AudioListener=function(){THREE.Object3D.call(this),this.type="AudioListener",this.context=new(window.AudioContext||window.webkitAudioContext),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null},THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype),THREE.AudioListener.prototype.constructor=THREE.AudioListener,THREE.AudioListener.prototype.getInput=function(){return this.gain},THREE.AudioListener.prototype.removeFilter=function(){null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},THREE.AudioListener.prototype.setFilter=function(e){null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},THREE.AudioListener.prototype.getFilter=function(){return this.filter},THREE.AudioListener.prototype.setMasterVolume=function(e){this.gain.gain.value=e},THREE.AudioListener.prototype.getMasterVolume=function(){return this.gain.gain.value},THREE.AudioListener.prototype.updateMatrixWorld=function(){var e=new THREE.Vector3,t=new THREE.Quaternion,i=new THREE.Vector3,r=new THREE.Vector3;return function(n){THREE.Object3D.prototype.updateMatrixWorld.call(this,n),n=this.context.listener;var o=this.up;this.matrixWorld.decompose(e,t,i),r.set(0,0,-1).applyQuaternion(t),n.setPosition(e.x,e.y,e.z),n.setOrientation(r.x,r.y,r.z,o.x,o.y,o.z)}}(),THREE.Camera=function(){THREE.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.getWorldDirection=function(){var e=new THREE.Quaternion;return function(t){return t=t||new THREE.Vector3,this.getWorldQuaternion(e),t.set(0,0,-1).applyQuaternion(e)}}(),THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)},THREE.Camera.prototype.copy=function(e){return THREE.Object3D.prototype.copy.call(this,e),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},THREE.CubeCamera=function(e,t,i){THREE.Object3D.call(this),this.type="CubeCamera";var r=new THREE.PerspectiveCamera(90,1,e,t);r.up.set(0,-1,0),r.lookAt(new THREE.Vector3(1,0,0)),this.add(r);var n=new THREE.PerspectiveCamera(90,1,e,t);n.up.set(0,-1,0),n.lookAt(new THREE.Vector3(-1,0,0)),this.add(n);var o=new THREE.PerspectiveCamera(90,1,e,t);o.up.set(0,0,1),o.lookAt(new THREE.Vector3(0,1,0)),this.add(o);var a=new THREE.PerspectiveCamera(90,1,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var s=new THREE.PerspectiveCamera(90,1,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(0,0,1)),this.add(s);var h=new THREE.PerspectiveCamera(90,1,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(i,i,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){null===this.parent&&this.updateMatrixWorld();var i=this.renderTarget,c=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,i.activeCubeFace=0,e.render(t,r,i),i.activeCubeFace=1,e.render(t,n,i),i.activeCubeFace=2,e.render(t,o,i),i.activeCubeFace=3,e.render(t,a,i),i.activeCubeFace=4,e.render(t,s,i),i.texture.generateMipmaps=c,i.activeCubeFace=5,e.render(t,h,i),e.setRenderTarget(null)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.OrthographicCamera=function(e,t,i,r,n,o){THREE.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=e,this.right=t,this.top=i,this.bottom=r,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(i-e,i+e,r+t,r-t,this.near,this.far)},THREE.OrthographicCamera.prototype.copy=function(e){return THREE.Camera.prototype.copy.call(this,e),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this},THREE.OrthographicCamera.prototype.toJSON=function(e){return e=THREE.Object3D.prototype.toJSON.call(this,e),e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,e},THREE.PerspectiveCamera=function(e,t,i,r){THREE.Camera.call(this),this.type="PerspectiveCamera",this.focalLength=10,this.zoom=1,this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==i?i:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),
this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,i,r,n,o){this.fullWidth=e,this.fullHeight=t,this.x=i,this.y=r,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var e=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var t=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(.5*e))*this.near,i=-e,r=t*i,t=Math.abs(t*e-r),i=Math.abs(e-i);this.projectionMatrix.makeFrustum(r+this.x*t/this.fullWidth,r+(this.x+this.width)*t/this.fullWidth,e-(this.y+this.height)*i/this.fullHeight,e-this.y*i/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(e,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.copy=function(e){return THREE.Camera.prototype.copy.call(this,e),this.focalLength=e.focalLength,this.zoom=e.zoom,this.fov=e.fov,this.aspect=e.aspect,this.near=e.near,this.far=e.far,this},THREE.PerspectiveCamera.prototype.toJSON=function(e){return e=THREE.Object3D.prototype.toJSON.call(this,e),e.object.focalLength=this.focalLength,e.object.zoom=this.zoom,e.object.fov=this.fov,e.object.aspect=this.aspect,e.object.near=this.near,e.object.far=this.far,e},THREE.StereoCamera=function(){this.type="StereoCamera",this.aspect=1,this.cameraL=new THREE.PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new THREE.PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1},THREE.StereoCamera.prototype={constructor:THREE.StereoCamera,update:function(){var e,t,i,r,n,o=new THREE.Matrix4,a=new THREE.Matrix4;return function(s){if(e!==s.focalLength||t!==s.fov||i!==s.aspect*this.aspect||r!==s.near||n!==s.far){e=s.focalLength,t=s.fov,i=s.aspect*this.aspect,r=s.near,n=s.far;var h,c,l=s.projectionMatrix.clone(),u=.032*r/e,p=r*Math.tan(THREE.Math.degToRad(.5*t));a.elements[12]=-.032,o.elements[12]=.032,h=-p*i+u,c=p*i+u,l.elements[0]=2*r/(c-h),l.elements[8]=(c+h)/(c-h),this.cameraL.projectionMatrix.copy(l),h=-p*i-u,c=p*i-u,l.elements[0]=2*r/(c-h),l.elements[8]=(c+h)/(c-h),this.cameraR.projectionMatrix.copy(l)}this.cameraL.matrixWorld.copy(s.matrixWorld).multiply(a),this.cameraR.matrixWorld.copy(s.matrixWorld).multiply(o)}}()},THREE.Light=function(e,t){THREE.Object3D.call(this),this.type="Light",this.color=new THREE.Color(e),this.intensity=void 0!==t?t:1,this.receiveShadow=void 0},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.copy=function(e){return THREE.Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},THREE.Light.prototype.toJSON=function(e){return e=THREE.Object3D.prototype.toJSON.call(this,e),e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),e},THREE.LightShadow=function(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new THREE.Vector2(512,512),this.map=null,this.matrix=new THREE.Matrix4},THREE.LightShadow.prototype={constructor:THREE.LightShadow,copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)}},THREE.AmbientLight=function(e,t){THREE.Light.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e,t),this.type="DirectionalLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new THREE.Object3D,this.shadow=new THREE.LightShadow(new THREE.OrthographicCamera(-5,5,5,-5,.5,500))},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.DirectionalLight.prototype.copy=function(e){return THREE.Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this},THREE.HemisphereLight=function(e,t,i){THREE.Light.call(this,e,i),this.type="HemisphereLight",this.castShadow=void 0,this.position.set(0,1,0),this.updateMatrix(),this.groundColor=new THREE.Color(t)},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight,THREE.HemisphereLight.prototype.copy=function(e){return THREE.Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this},THREE.PointLight=function(e,t,i,r){THREE.Light.call(this,e,t),this.type="PointLight",this.distance=void 0!==i?i:0,this.decay=void 0!==r?r:1,this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,.5,500))},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.constructor=THREE.PointLight,Object.defineProperty(THREE.PointLight.prototype,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),THREE.PointLight.prototype.copy=function(e){return THREE.Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this},THREE.SpotLight=function(e,t,i,r,n,o){THREE.Light.call(this,e,t),this.type="SpotLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new THREE.Object3D,this.distance=void 0!==i?i:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==n?n:0,this.decay=void 0!==o?o:1,this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(50,1,.5,500))},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.constructor=THREE.SpotLight,Object.defineProperty(THREE.SpotLight.prototype,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),THREE.SpotLight.prototype.copy=function(e){return THREE.Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this},THREE.Cache={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){return!1!==this.enabled?this.files[e]:void 0},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},THREE.Loader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,extractUrlBase:function(e){return e=e.split("/"),1===e.length?"./":(e.pop(),e.join("/")+"/")},initMaterials:function(e,t,i){for(var r=[],n=0;n<e.length;++n)r[n]=this.createMaterial(e[n],t,i);return r},createMaterial:function(){var e,t,i;return function(r,n,o){function a(e,i,r,a,s){e=n+e;var c=THREE.Loader.Handlers.get(e);return null!==c?e=c.load(e):(t.setCrossOrigin(o),e=t.load(e)),void 0!==i&&(e.repeat.fromArray(i),1!==i[0]&&(e.wrapS=THREE.RepeatWrapping),1!==i[1]&&(e.wrapT=THREE.RepeatWrapping)),void 0!==r&&e.offset.fromArray(r),void 0!==a&&("repeat"===a[0]&&(e.wrapS=THREE.RepeatWrapping),"mirror"===a[0]&&(e.wrapS=THREE.MirroredRepeatWrapping),"repeat"===a[1]&&(e.wrapT=THREE.RepeatWrapping),"mirror"===a[1]&&(e.wrapT=THREE.MirroredRepeatWrapping)),void 0!==s&&(e.anisotropy=s),i=THREE.Math.generateUUID(),h[i]=e,i}void 0===e&&(e=new THREE.Color),void 0===t&&(t=new THREE.TextureLoader),void 0===i&&(i=new THREE.MaterialLoader);var s,h={},c={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"};for(s in r){var l=r[s];switch(s){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":c.name=l;break;case"blending":c.blending=THREE[l];break;case"colorAmbient":case"mapAmbient":break;case"colorDiffuse":c.color=e.fromArray(l).getHex();break;case"colorSpecular":c.specular=e.fromArray(l).getHex();break;case"colorEmissive":c.emissive=e.fromArray(l).getHex();break;case"specularCoef":c.shininess=l;break;case"shading":"basic"===l.toLowerCase()&&(c.type="MeshBasicMaterial"),"phong"===l.toLowerCase()&&(c.type="MeshPhongMaterial");break;case"mapDiffuse":c.map=a(l,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapLight":c.lightMap=a(l,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":c.aoMap=a(l,r.mapAORepeat,r.mapAOOffset,r.mapAOWrap,r.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":c.bumpMap=a(l,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);break;case"mapBumpScale":c.bumpScale=l;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":c.normalMap=a(l,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);break;case"mapNormalFactor":c.normalScale=[l,l];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":c.specularMap=a(l,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapAlpha":c.alphaMap=a(l,r.mapAlphaRepeat,r.mapAlphaOffset,r.mapAlphaWrap,r.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":c.side=THREE.BackSide;break;case"doubleSided":c.side=THREE.DoubleSide;break;case"transparency":c.opacity=l;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":c[s]=l;break;case"vertexColors":!0===l&&(c.vertexColors=THREE.VertexColors),"face"===l&&(c.vertexColors=THREE.FaceColors)}}return"MeshBasicMaterial"===c.type&&delete c.emissive,"MeshPhongMaterial"!==c.type&&delete c.specular,1>c.opacity&&(c.transparent=!0),i.setTextures(h),i.parse(c)}}()},THREE.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,i=0,r=t.length;r>i;i+=2){var n=t[i+1];if(t[i].test(e))return n}return null}},THREE.XHRLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(e,t,i,r){void 0!==this.path&&(e=this.path+e);var n=this,o=THREE.Cache.get(e);if(void 0!==o)return t&&setTimeout(function(){t(o)},0),o;var a=new XMLHttpRequest;return a.overrideMimeType("text/plain"),a.open("GET",e,!0),a.addEventListener("load",function(i){var o=i.target.response;THREE.Cache.add(e,o),200===this.status?(t&&t(o),n.manager.itemEnd(e)):0===this.status?(t&&t(o),n.manager.itemEnd(e)):(r&&r(i),n.manager.itemError(e))},!1),void 0!==i&&a.addEventListener("progress",function(e){i(e)},!1),a.addEventListener("error",function(t){r&&r(t),n.manager.itemError(e)},!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.send(null),n.manager.itemStart(e),a},setPath:function(e){this.path=e},setResponseType:function(e){this.responseType=e},setWithCredentials:function(e){this.withCredentials=e}},THREE.FontLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.FontLoader.prototype={constructor:THREE.FontLoader,load:function(e,t,i,r){new THREE.XHRLoader(this.manager).load(e,function(e){t(new THREE.Font(JSON.parse(e.substring(65,e.length-2))))},i,r)}},THREE.ImageLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t,i,r){void 0!==this.path&&(e=this.path+e);var n=this,o=THREE.Cache.get(e);if(void 0!==o)return n.manager.itemStart(e),t?setTimeout(function(){t(o),n.manager.itemEnd(e)},0):n.manager.itemEnd(e),o;var a=document.createElement("img");return a.addEventListener("load",function(i){THREE.Cache.add(e,this),t&&t(this),n.manager.itemEnd(e)},!1),void 0!==i&&a.addEventListener("progress",function(e){i(e)},!1),a.addEventListener("error",function(t){r&&r(t),n.manager.itemError(e)},!1),void 0!==this.crossOrigin&&(a.crossOrigin=this.crossOrigin),n.manager.itemStart(e),a.src=e,a},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e}},THREE.JSONLoader=function(e){"boolean"==typeof e&&(e=void 0),this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.withCredentials=!1},THREE.JSONLoader.prototype={constructor:THREE.JSONLoader,get statusDomElement(){return void 0===this._statusDomElement&&(this._statusDomElement=document.createElement("div")),this._statusDomElement},load:function(e,t,i,r){var n=this,o=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:THREE.Loader.prototype.extractUrlBase(e),a=new THREE.XHRLoader(this.manager);a.setWithCredentials(this.withCredentials),a.load(e,function(e){e=JSON.parse(e);var i=e.metadata;if(void 0!==i&&(i=i.type,void 0!==i)){if("object"===i.toLowerCase())return;if("scene"===i.toLowerCase())return}e=n.parse(e,o),t(e.geometry,e.materials)},i,r)},setTexturePath:function(e){this.texturePath=e},parse:function(e,t){var i=new THREE.Geometry,r=void 0!==e.scale?1/e.scale:1;return function(t){var r,n,o,a,s,h,c,l,u,p,d,f,E,m=e.faces;h=e.vertices;var g=e.normals,v=e.colors,T=0;if(void 0!==e.uvs){for(r=0;r<e.uvs.length;r++)e.uvs[r].length&&T++;for(r=0;T>r;r++)i.faceVertexUvs[r]=[]}for(a=0,s=h.length;s>a;)r=new THREE.Vector3,r.x=h[a++]*t,r.y=h[a++]*t,r.z=h[a++]*t,i.vertices.push(r);for(a=0,s=m.length;s>a;)if(t=m[a++],u=1&t,o=2&t,r=8&t,c=16&t,p=32&t,h=64&t,t&=128,u){if(u=new THREE.Face3,u.a=m[a],u.b=m[a+1],u.c=m[a+3],d=new THREE.Face3,d.a=m[a+1],d.b=m[a+2],d.c=m[a+3],a+=4,o&&(o=m[a++],u.materialIndex=o,d.materialIndex=o),o=i.faces.length,r)for(r=0;T>r;r++)for(f=e.uvs[r],i.faceVertexUvs[r][o]=[],i.faceVertexUvs[r][o+1]=[],n=0;4>n;n++)l=m[a++],E=f[2*l],l=f[2*l+1],E=new THREE.Vector2(E,l),2!==n&&i.faceVertexUvs[r][o].push(E),0!==n&&i.faceVertexUvs[r][o+1].push(E);if(c&&(c=3*m[a++],u.normal.set(g[c++],g[c++],g[c]),d.normal.copy(u.normal)),p)for(r=0;4>r;r++)c=3*m[a++],p=new THREE.Vector3(g[c++],g[c++],g[c]),2!==r&&u.vertexNormals.push(p),0!==r&&d.vertexNormals.push(p);if(h&&(h=m[a++],h=v[h],u.color.setHex(h),d.color.setHex(h)),t)for(r=0;4>r;r++)h=m[a++],h=v[h],2!==r&&u.vertexColors.push(new THREE.Color(h)),0!==r&&d.vertexColors.push(new THREE.Color(h));i.faces.push(u),i.faces.push(d)}else{if(u=new THREE.Face3,u.a=m[a++],u.b=m[a++],u.c=m[a++],o&&(o=m[a++],u.materialIndex=o),o=i.faces.length,r)for(r=0;T>r;r++)for(f=e.uvs[r],i.faceVertexUvs[r][o]=[],n=0;3>n;n++)l=m[a++],E=f[2*l],l=f[2*l+1],E=new THREE.Vector2(E,l),i.faceVertexUvs[r][o].push(E);if(c&&(c=3*m[a++],u.normal.set(g[c++],g[c++],g[c])),p)for(r=0;3>r;r++)c=3*m[a++],p=new THREE.Vector3(g[c++],g[c++],g[c]),u.vertexNormals.push(p);if(h&&(h=m[a++],u.color.setHex(v[h])),t)for(r=0;3>r;r++)h=m[a++],u.vertexColors.push(new THREE.Color(v[h]));i.faces.push(u)}}(r),function(){var t=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var r=0,n=e.skinWeights.length;n>r;r+=t)i.skinWeights.push(new THREE.Vector4(e.skinWeights[r],t>1?e.skinWeights[r+1]:0,t>2?e.skinWeights[r+2]:0,t>3?e.skinWeights[r+3]:0));if(e.skinIndices)for(r=0,n=e.skinIndices.length;n>r;r+=t)i.skinIndices.push(new THREE.Vector4(e.skinIndices[r],t>1?e.skinIndices[r+1]:0,t>2?e.skinIndices[r+2]:0,t>3?e.skinIndices[r+3]:0));i.bones=e.bones,i.bones&&0<i.bones.length&&(i.skinWeights.length!==i.skinIndices.length||i.skinIndices.length!==i.vertices.length)&&void 0}(),function(t){if(void 0!==e.morphTargets)for(var r=0,n=e.morphTargets.length;n>r;r++){i.morphTargets[r]={},i.morphTargets[r].name=e.morphTargets[r].name,i.morphTargets[r].vertices=[];for(var o=i.morphTargets[r].vertices,a=e.morphTargets[r].vertices,s=0,h=a.length;h>s;s+=3){var c=new THREE.Vector3;c.x=a[s]*t,c.y=a[s+1]*t,c.z=a[s+2]*t,o.push(c)}}if(void 0!==e.morphColors&&0<e.morphColors.length)for(t=i.faces,o=e.morphColors[0].colors,r=0,n=t.length;n>r;r++)t[r].color.fromArray(o,3*r)}(r),function(){var t=[],r=[];void 0!==e.animation&&r.push(e.animation),void 0!==e.animations&&(e.animations.length?r=r.concat(e.animations):r.push(e.animations));for(var n=0;n<r.length;n++){var o=THREE.AnimationClip.parseAnimation(r[n],i.bones);o&&t.push(o)}i.morphTargets&&(r=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(i.morphTargets,10),t=t.concat(r)),0<t.length&&(i.animations=t)}(),i.computeFaceNormals(),i.computeBoundingSphere(),void 0===e.materials||0===e.materials.length?{geometry:i}:(r=THREE.Loader.prototype.initMaterials(e.materials,t,this.crossOrigin),{geometry:i,materials:r})}},THREE.LoadingManager=function(e,t,i){var r=this,n=!1,o=0,a=0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.itemStart=function(e){a++,!1===n&&void 0!==r.onStart&&r.onStart(e,o,a),n=!0},this.itemEnd=function(e){o++,void 0!==r.onProgress&&r.onProgress(e,o,a),o===a&&(n=!1,void 0!==r.onLoad)&&r.onLoad()},this.itemError=function(e){void 0!==r.onError&&r.onError(e)}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(e,t,i,r){var n=this;new THREE.XHRLoader(n.manager).load(e,function(e){t(n.parse(JSON.parse(e)))},i,r)},parse:function(e){var t=new THREE.BufferGeometry,i=e.data.index,r={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};void 0!==i&&(i=new r[i.type](i.array),t.setIndex(new THREE.BufferAttribute(i,1)));var n,o=e.data.attributes;for(n in o){var a=o[n],i=new r[a.type](a.array);t.addAttribute(n,new THREE.BufferAttribute(i,a.itemSize))}if(r=e.data.groups||e.data.drawcalls||e.data.offsets,void 0!==r)for(n=0,i=r.length;n!==i;++n)o=r[n],t.addGroup(o.start,o.count,o.materialIndex);return e=e.data.boundingSphere,void 0!==e&&(r=new THREE.Vector3,void 0!==e.center&&r.fromArray(e.center),t.boundingSphere=new THREE.Sphere(r,e.radius)),t}},THREE.MaterialLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.textures={}},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(e,t,i,r){var n=this;new THREE.XHRLoader(n.manager).load(e,function(e){t(n.parse(JSON.parse(e)))},i,r)},setTextures:function(e){this.textures=e},getTexture:function(e){var t=this.textures;return void 0===t[e]&&void 0,t[e]},parse:function(e){var t=new THREE[e.type];if(void 0!==e.uuid&&(t.uuid=e.uuid),void 0!==e.name&&(t.name=e.name),void 0!==e.color&&t.color.setHex(e.color),void 0!==e.roughness&&(t.roughness=e.roughness),void 0!==e.metalness&&(t.metalness=e.metalness),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.uniforms&&(t.uniforms=e.uniforms),void 0!==e.vertexShader&&(t.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(t.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.shading&&(t.shading=e.shading),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.alphaTest&&(t.alphaTest=e.alphaTest),void 0!==e.depthTest&&(t.depthTest=e.depthTest),void 0!==e.depthWrite&&(t.depthWrite=e.depthWrite),void 0!==e.colorWrite&&(t.colorWrite=e.colorWrite),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(t.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.size&&(t.size=e.size),void 0!==e.sizeAttenuation&&(t.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(t.map=this.getTexture(e.map)),void 0!==e.alphaMap&&(t.alphaMap=this.getTexture(e.alphaMap),t.transparent=!0),void 0!==e.bumpMap&&(t.bumpMap=this.getTexture(e.bumpMap)),void 0!==e.bumpScale&&(t.bumpScale=e.bumpScale),void 0!==e.normalMap&&(t.normalMap=this.getTexture(e.normalMap)),void 0!==e.normalScale){var i=e.normalScale;!1===Array.isArray(i)&&(i=[i,i]),t.normalScale=(new THREE.Vector2).fromArray(i)}if(void 0!==e.displacementMap&&(t.displacementMap=this.getTexture(e.displacementMap)),void 0!==e.displacementScale&&(t.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(t.displacementBias=e.displacementBias),void 0!==e.roughnessMap&&(t.roughnessMap=this.getTexture(e.roughnessMap)),void 0!==e.metalnessMap&&(t.metalnessMap=this.getTexture(e.metalnessMap)),void 0!==e.emissiveMap&&(t.emissiveMap=this.getTexture(e.emissiveMap)),void 0!==e.emissiveIntensity&&(t.emissiveIntensity=e.emissiveIntensity),void 0!==e.specularMap&&(t.specularMap=this.getTexture(e.specularMap)),void 0!==e.envMap&&(t.envMap=this.getTexture(e.envMap),t.combine=THREE.MultiplyOperation),e.reflectivity&&(t.reflectivity=e.reflectivity),void 0!==e.lightMap&&(t.lightMap=this.getTexture(e.lightMap)),void 0!==e.lightMapIntensity&&(t.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(t.aoMap=this.getTexture(e.aoMap)),void 0!==e.aoMapIntensity&&(t.aoMapIntensity=e.aoMapIntensity),void 0!==e.materials)for(var i=0,r=e.materials.length;r>i;i++)t.materials.push(this.parse(e.materials[i]));return t}},THREE.ObjectLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this.texturePath=""},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(e,t,i,r){""===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var n=this;new THREE.XHRLoader(n.manager).load(e,function(e){n.parse(JSON.parse(e),t)},i,r)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var i=this.parseGeometries(e.geometries),r=this.parseImages(e.images,function(){void 0!==t&&t(n)}),r=this.parseTextures(e.textures,r),r=this.parseMaterials(e.materials,r),n=this.parseObject(e.object,i,r);return e.animations&&(n.animations=this.parseAnimations(e.animations)),void 0!==e.images&&0!==e.images.length||void 0===t||t(n),n},parseGeometries:function(e){var t={};if(void 0!==e)for(var i=new THREE.JSONLoader,r=new THREE.BufferGeometryLoader,n=0,o=e.length;o>n;n++){var a,s=e[n];switch(s.type){case"PlaneGeometry":case"PlaneBufferGeometry":a=new THREE[s.type](s.width,s.height,s.widthSegments,s.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":a=new THREE[s.type](s.width,s.height,s.depth,s.widthSegments,s.heightSegments,s.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":a=new THREE[s.type](s.radius,s.segments,s.thetaStart,s.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":a=new THREE[s.type](s.radiusTop,s.radiusBottom,s.height,s.radialSegments,s.heightSegments,s.openEnded,s.thetaStart,s.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":a=new THREE[s.type](s.radius,s.widthSegments,s.heightSegments,s.phiStart,s.phiLength,s.thetaStart,s.thetaLength);break;case"DodecahedronGeometry":a=new THREE.DodecahedronGeometry(s.radius,s.detail);break;case"IcosahedronGeometry":a=new THREE.IcosahedronGeometry(s.radius,s.detail);break;case"OctahedronGeometry":a=new THREE.OctahedronGeometry(s.radius,s.detail);break;case"TetrahedronGeometry":a=new THREE.TetrahedronGeometry(s.radius,s.detail);break;case"RingGeometry":case"RingBufferGeometry":a=new THREE[s.type](s.innerRadius,s.outerRadius,s.thetaSegments,s.phiSegments,s.thetaStart,s.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":a=new THREE[s.type](s.radius,s.tube,s.radialSegments,s.tubularSegments,s.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":a=new THREE[s.type](s.radius,s.tube,s.tubularSegments,s.radialSegments,s.p,s.q);break;case"LatheGeometry":a=new THREE.LatheGeometry(s.points,s.segments,s.phiStart,s.phiLength);break;case"BufferGeometry":a=r.parse(s);break;case"Geometry":a=i.parse(s.data,this.texturePath).geometry;break;default:continue}a.uuid=s.uuid,void 0!==s.name&&(a.name=s.name),t[s.uuid]=a}return t},parseMaterials:function(e,t){var i={};if(void 0!==e){var r=new THREE.MaterialLoader;r.setTextures(t);for(var n=0,o=e.length;o>n;n++){var a=r.parse(e[n]);i[a.uuid]=a}}return i},parseAnimations:function(e){for(var t=[],i=0;i<e.length;i++){var r=THREE.AnimationClip.parse(e[i]);t.push(r)}return t},parseImages:function(e,t){function i(e){return r.manager.itemStart(e),a.load(e,function(){r.manager.itemEnd(e)})}var r=this,n={};if(void 0!==e&&0<e.length){var o=new THREE.LoadingManager(t),a=new THREE.ImageLoader(o);a.setCrossOrigin(this.crossOrigin);for(var o=0,s=e.length;s>o;o++){var h=e[o],c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h.url)?h.url:r.texturePath+h.url;n[h.uuid]=i(c)}}return n},parseTextures:function(e,t){function i(e){return"number"==typeof e?e:THREE[e]}var r={};if(void 0!==e)for(var n=0,o=e.length;o>n;n++){var a=e[n];void 0===a.image&&void 0,void 0===t[a.image]&&void 0;var s=new THREE.Texture(t[a.image]);s.needsUpdate=!0,s.uuid=a.uuid,void 0!==a.name&&(s.name=a.name),void 0!==a.mapping&&(s.mapping=i(a.mapping)),void 0!==a.offset&&(s.offset=new THREE.Vector2(a.offset[0],a.offset[1])),void 0!==a.repeat&&(s.repeat=new THREE.Vector2(a.repeat[0],a.repeat[1])),void 0!==a.minFilter&&(s.minFilter=i(a.minFilter)),void 0!==a.magFilter&&(s.magFilter=i(a.magFilter)),void 0!==a.anisotropy&&(s.anisotropy=a.anisotropy),Array.isArray(a.wrap)&&(s.wrapS=i(a.wrap[0]),s.wrapT=i(a.wrap[1])),r[a.uuid]=s}return r},parseObject:function(){var e=new THREE.Matrix4;return function(t,i,r){function n(e){return void 0===i[e]&&void 0,i[e]}function o(e){return void 0!==e?(void 0===r[e]&&void 0,r[e]):void 0}var a;switch(t.type){case"Scene":a=new THREE.Scene;break;case"PerspectiveCamera":a=new THREE.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":a=new THREE.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":a=new THREE.AmbientLight(t.color,t.intensity);break;case"DirectionalLight":a=new THREE.DirectionalLight(t.color,t.intensity);break;case"PointLight":a=new THREE.PointLight(t.color,t.intensity,t.distance,t.decay);break;case"SpotLight":a=new THREE.SpotLight(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay);break;case"HemisphereLight":a=new THREE.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":a=n(t.geometry);var s=o(t.material);a=a.bones&&0<a.bones.length?new THREE.SkinnedMesh(a,s):new THREE.Mesh(a,s);break;case"LOD":a=new THREE.LOD;break;case"Line":a=new THREE.Line(n(t.geometry),o(t.material),t.mode);break;case"PointCloud":case"Points":a=new THREE.Points(n(t.geometry),o(t.material));break;case"Sprite":a=new THREE.Sprite(o(t.material));break;case"Group":a=new THREE.Group;break;default:a=new THREE.Object3D}if(a.uuid=t.uuid,void 0!==t.name&&(a.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(a.position,a.quaternion,a.scale)):(void 0!==t.position&&a.position.fromArray(t.position),void 0!==t.rotation&&a.rotation.fromArray(t.rotation),void 0!==t.scale&&a.scale.fromArray(t.scale)),void 0!==t.castShadow&&(a.castShadow=t.castShadow),void 0!==t.receiveShadow&&(a.receiveShadow=t.receiveShadow),void 0!==t.visible&&(a.visible=t.visible),void 0!==t.userData&&(a.userData=t.userData),void 0!==t.children)for(var h in t.children)a.add(this.parseObject(t.children[h],i,r));if("LOD"===t.type)for(t=t.levels,s=0;s<t.length;s++){var c=t[s];h=a.getObjectByProperty("uuid",c.object),void 0!==h&&a.addLevel(h,c.distance)}return a}}()},THREE.TextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e,t,i,r){var n=new THREE.Texture,o=new THREE.ImageLoader(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(e){n.image=e,n.needsUpdate=!0,void 0!==t&&t(n)},i,r),n},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e}},THREE.CubeTextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.CubeTextureLoader.prototype={constructor:THREE.CubeTextureLoader,load:function(e,t,i,r){function n(i){a.load(e[i],function(e){o.images[i]=e,s++,6===s&&(o.needsUpdate=!0,t&&t(o))},void 0,r)}var o=new THREE.CubeTexture,a=new THREE.ImageLoader(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var s=0;for(i=0;i<e.length;++i)n(i);return o},setCrossOrigin:function(e){this.crossOrigin=e},setPath:function(e){this.path=e}},THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this._parser=null},THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(e,t,i,r){var n=this,o=new THREE.DataTexture,a=new THREE.XHRLoader(this.manager);return a.setResponseType("arraybuffer"),a.load(e,function(e){(e=n._parser(e))&&(void 0!==e.image?o.image=e.image:void 0!==e.data&&(o.image.width=e.width,o.image.height=e.height,o.image.data=e.data),o.wrapS=void 0!==e.wrapS?e.wrapS:THREE.ClampToEdgeWrapping,o.wrapT=void 0!==e.wrapT?e.wrapT:THREE.ClampToEdgeWrapping,o.magFilter=void 0!==e.magFilter?e.magFilter:THREE.LinearFilter,o.minFilter=void 0!==e.minFilter?e.minFilter:THREE.LinearMipMapLinearFilter,o.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.format&&(o.format=e.format),void 0!==e.type&&(o.type=e.type),void 0!==e.mipmaps&&(o.mipmaps=e.mipmaps),1===e.mipmapCount&&(o.minFilter=THREE.LinearFilter),o.needsUpdate=!0,t&&t(o,e))},i,r),o}},THREE.CompressedTextureLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager,this._parser=null},THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(e,t,i,r){function n(n){h.load(e[n],function(e){e=o._parser(e,!0),a[n]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},c+=1,6===c&&(1===e.mipmapCount&&(s.minFilter=THREE.LinearFilter),s.format=e.format,s.needsUpdate=!0,t&&t(s))},i,r)}var o=this,a=[],s=new THREE.CompressedTexture;s.image=a;var h=new THREE.XHRLoader(this.manager);if(h.setPath(this.path),h.setResponseType("arraybuffer"),Array.isArray(e))for(var c=0,l=0,u=e.length;u>l;++l)n(l);else h.load(e,function(e){if(e=o._parser(e,!0),e.isCubemap)for(var i=e.mipmaps.length/e.mipmapCount,r=0;i>r;r++){a[r]={mipmaps:[]};for(var n=0;n<e.mipmapCount;n++)a[r].mipmaps.push(e.mipmaps[r*e.mipmapCount+n]),a[r].format=e.format,a[r].width=e.width,a[r].height=e.height}else s.image.width=e.width,s.image.height=e.height,s.mipmaps=e.mipmaps;1===e.mipmapCount&&(s.minFilter=THREE.LinearFilter),s.format=e.format,s.needsUpdate=!0,t&&t(s)},i,r);return s},setPath:function(e){this.path=e}},THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Material",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.blendEquationAlpha=this.blendDstAlpha=this.blendSrcAlpha=null,this.depthFunc=THREE.LessEqualDepth,this.colorWrite=this.depthWrite=this.depthTest=!0,this.precision=null,this.polygonOffset=!1,this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0,this.premultipliedAlpha=!1,this.overdraw=0,this._needsUpdate=this.visible=!0},THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){
!0===e&&this.update(),this._needsUpdate=e},setValues:function(e){if(void 0!==e)for(var t in e){var i=e[t];if(void 0===i);else{var r=this[t];void 0===r?void 0:r instanceof THREE.Color?r.set(i):r instanceof THREE.Vector3&&i instanceof THREE.Vector3?r.copy(i):this[t]="overdraw"===t?Number(i):i}}},toJSON:function(e){function t(e){var t,i=[];for(t in e){var r=e[t];delete r.metadata,i.push(r)}return i}var i=void 0===e;i&&(e={textures:{},images:{}});var r={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};return r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),this.color instanceof THREE.Color&&(r.color=this.color.getHex()),.5!==this.roughness&&(r.roughness=this.roughness),.5!==this.metalness&&(r.metalness=this.metalness),this.emissive instanceof THREE.Color&&(r.emissive=this.emissive.getHex()),this.specular instanceof THREE.Color&&(r.specular=this.specular.getHex()),void 0!==this.shininess&&(r.shininess=this.shininess),this.map instanceof THREE.Texture&&(r.map=this.map.toJSON(e).uuid),this.alphaMap instanceof THREE.Texture&&(r.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap instanceof THREE.Texture&&(r.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap instanceof THREE.Texture&&(r.bumpMap=this.bumpMap.toJSON(e).uuid,r.bumpScale=this.bumpScale),this.normalMap instanceof THREE.Texture&&(r.normalMap=this.normalMap.toJSON(e).uuid,r.normalScale=this.normalScale.toArray()),this.displacementMap instanceof THREE.Texture&&(r.displacementMap=this.displacementMap.toJSON(e).uuid,r.displacementScale=this.displacementScale,r.displacementBias=this.displacementBias),this.roughnessMap instanceof THREE.Texture&&(r.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap instanceof THREE.Texture&&(r.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap instanceof THREE.Texture&&(r.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap instanceof THREE.Texture&&(r.specularMap=this.specularMap.toJSON(e).uuid),this.envMap instanceof THREE.Texture&&(r.envMap=this.envMap.toJSON(e).uuid,r.reflectivity=this.reflectivity),void 0!==this.size&&(r.size=this.size),void 0!==this.sizeAttenuation&&(r.sizeAttenuation=this.sizeAttenuation),void 0!==this.vertexColors&&this.vertexColors!==THREE.NoColors&&(r.vertexColors=this.vertexColors),void 0!==this.shading&&this.shading!==THREE.SmoothShading&&(r.shading=this.shading),void 0!==this.blending&&this.blending!==THREE.NormalBlending&&(r.blending=this.blending),void 0!==this.side&&this.side!==THREE.FrontSide&&(r.side=this.side),1>this.opacity&&(r.opacity=this.opacity),!0===this.transparent&&(r.transparent=this.transparent),0<this.alphaTest&&(r.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(r.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(r.wireframe=this.wireframe),1<this.wireframeLinewidth&&(r.wireframeLinewidth=this.wireframeLinewidth),i&&(i=t(e.textures),e=t(e.images),0<i.length&&(r.textures=i),0<e.length&&(r.images=e)),r},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.side=e.side,this.opacity=e.opacity,this.transparent=e.transparent,this.blending=e.blending,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.overdraw=e.overdraw,this.visible=e.visible,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.type="LineBasicMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.linejoin=this.linecap="round",this.blending=THREE.NormalBlending,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.vertexColors=e.vertexColors,this.fog=e.fog,this},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.type="LineDashedMaterial",this.color=new THREE.Color(16777215),this.scale=this.linewidth=1,this.dashSize=3,this.gapSize=1,this.blending=THREE.NormalBlending,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial,THREE.LineDashedMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this.vertexColors=e.vertexColors,this.fog=e.fog,this},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.type="MeshBasicMaterial",this.color=new THREE.Color(16777215),this.aoMap=this.map=null,this.aoMapIntensity=1,this.envMap=this.alphaMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.type="MeshLambertMaterial",this.color=new THREE.Color(16777215),this.lightMap=this.map=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new THREE.Color(0),this.emissiveIntensity=1,this.envMap=this.alphaMap=this.specularMap=this.emissiveMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.blending=THREE.NormalBlending,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshLambertMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.type="MeshPhongMaterial",this.color=new THREE.Color(16777215),this.specular=new THREE.Color(1118481),this.shininess=30,this.lightMap=this.map=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new THREE.Color(0),this.emissiveIntensity=1,this.bumpMap=this.emissiveMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.envMap=this.alphaMap=this.specularMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshPhongMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},THREE.MeshStandardMaterial=function(e){THREE.Material.call(this),this.type="MeshStandardMaterial",this.color=new THREE.Color(16777215),this.metalness=this.roughness=.5,this.lightMap=this.map=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new THREE.Color(0),this.emissiveIntensity=1,this.bumpMap=this.emissiveMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.envMap=this.alphaMap=this.metalnessMap=this.roughnessMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.blending=THREE.NormalBlending,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinejoin=this.wireframeLinecap="round",this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.setValues(e)},THREE.MeshStandardMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshStandardMaterial.prototype.constructor=THREE.MeshStandardMaterial,THREE.MeshStandardMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.type="MeshDepthMaterial",this.wireframe=this.morphTargets=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshDepthMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshNormalMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},THREE.MultiMaterial=function(e){this.uuid=THREE.Math.generateUUID(),this.type="MultiMaterial",this.materials=e instanceof Array?e:[],this.visible=!0},THREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(e){for(var t={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},i=this.materials,r=0,n=i.length;n>r;r++){var o=i[r].toJSON(e);delete o.metadata,t.materials.push(o)}return t.visible=this.visible,t},clone:function(){for(var e=new this.constructor,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e.visible=this.visible,e}},THREE.PointsMaterial=function(e){THREE.Material.call(this),this.type="PointsMaterial",this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.blending=THREE.NormalBlending,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(e)},THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial,THREE.PointsMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.vertexColors=e.vertexColors,this.fog=e.fog,this},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.lights=this.fog=!1,this.vertexColors=THREE.NoColors,this.morphNormals=this.morphTargets=this.skinning=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==e&&(void 0!==e.attributes&&void 0,this.setValues(e))},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.defines=e.defines,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},THREE.ShaderMaterial.prototype.toJSON=function(e){return e=THREE.Material.prototype.toJSON.call(this,e),e.uniforms=this.uniforms,e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e},THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e),this.type="RawShaderMaterial"},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial,THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.type="SpriteMaterial",this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this.fog=e.fog,this},THREE.Texture=function(e,t,i,r,n,o,a,s,h){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++}),this.uuid=THREE.Math.generateUUID(),this.sourceFile=this.name="",this.image=void 0!==e?e:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==i?i:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=THREE.LinearEncoding,this.version=0,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(e){!0===e&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){if(void 0!==e.textures[this.uuid])return e.textures[this.uuid];var t={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(void 0!==this.image){var i=this.image;if(void 0===i.uuid&&(i.uuid=THREE.Math.generateUUID()),void 0===e.images[i.uuid]){var r,n=e.images,o=i.uuid,a=i.uuid;void 0!==i.toDataURL?r=i:(r=document.createElement("canvas"),r.width=i.width,r.height=i.height,r.getContext("2d").drawImage(i,0,0,i.width,i.height)),r=2048<r.width||2048<r.height?r.toDataURL("image/jpeg",.6):r.toDataURL("image/png"),n[o]={uuid:a,url:r}}t.image=i.uuid}return e.textures[this.uuid]=t},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping===THREE.UVMapping){if(e.multiply(this.repeat),e.add(this.offset),0>e.x||1<e.x)switch(this.wrapS){case THREE.RepeatWrapping:e.x-=Math.floor(e.x);break;case THREE.ClampToEdgeWrapping:e.x=0>e.x?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x-=Math.floor(e.x)}if(0>e.y||1<e.y)switch(this.wrapT){case THREE.RepeatWrapping:e.y-=Math.floor(e.y);break;case THREE.ClampToEdgeWrapping:e.y=0>e.y?0:1;break;case THREE.MirroredRepeatWrapping:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y-=Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CanvasTexture=function(e,t,i,r,n,o,a,s,h){THREE.Texture.call(this,e,t,i,r,n,o,a,s,h),this.needsUpdate=!0},THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture,THREE.CubeTexture=function(e,t,i,r,n,o,a,s,h){e=void 0!==e?e:[],t=void 0!==t?t:THREE.CubeReflectionMapping,THREE.Texture.call(this,e,t,i,r,n,o,a,s,h),this.flipY=!1},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.prototype.constructor=THREE.CubeTexture,Object.defineProperty(THREE.CubeTexture.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),THREE.CompressedTexture=function(e,t,i,r,n,o,a,s,h,c,l){THREE.Texture.call(this,null,o,a,s,h,c,r,n,l),this.image={width:t,height:i},this.mipmaps=e,this.generateMipmaps=this.flipY=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture,THREE.DataTexture=function(e,t,i,r,n,o,a,s,h,c,l){THREE.Texture.call(this,null,o,a,s,h,c,r,n,l),this.image={data:e,width:t,height:i},this.magFilter=void 0!==h?h:THREE.NearestFilter,this.minFilter=void 0!==c?c:THREE.NearestFilter,this.generateMipmaps=this.flipY=!1},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.VideoTexture=function(e,t,i,r,n,o,a,s,h){function c(){requestAnimationFrame(c),e.readyState===e.HAVE_ENOUGH_DATA&&(l.needsUpdate=!0)}THREE.Texture.call(this,e,t,i,r,n,o,a,s,h),this.generateMipmaps=!1;var l=this;c()},THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype),THREE.VideoTexture.prototype.constructor=THREE.VideoTexture,THREE.Group=function(){THREE.Object3D.call(this),this.type="Group"},THREE.Group.prototype=Object.create(THREE.Object3D.prototype),THREE.Group.prototype.constructor=THREE.Group,THREE.Points=function(e,t){THREE.Object3D.call(this),this.type="Points",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.PointsMaterial({color:16777215*Math.random()})},THREE.Points.prototype=Object.create(THREE.Object3D.prototype),THREE.Points.prototype.constructor=THREE.Points,THREE.Points.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,i=new THREE.Sphere;return function(r,n){function o(e,i){var o=t.distanceSqToPoint(e);if(l>o){var s=t.closestPointToPoint(e);s.applyMatrix4(h);var c=r.ray.origin.distanceTo(s);c<r.near||c>r.far||n.push({distance:c,distanceToRay:Math.sqrt(o),point:s.clone(),index:i,face:null,object:a})}}var a=this,s=this.geometry,h=this.matrixWorld,c=r.params.Points.threshold;if(null===s.boundingSphere&&s.computeBoundingSphere(),i.copy(s.boundingSphere),i.applyMatrix4(h),!1!==r.ray.intersectsSphere(i)){e.getInverse(h),t.copy(r.ray).applyMatrix4(e);var c=c/((this.scale.x+this.scale.y+this.scale.z)/3),l=c*c,c=new THREE.Vector3;if(s instanceof THREE.BufferGeometry){var u=s.index,s=s.attributes.position.array;if(null!==u)for(var p=u.array,u=0,d=p.length;d>u;u++){var f=p[u];c.fromArray(s,3*f),o(c,f)}else for(u=0,p=s.length/3;p>u;u++)c.fromArray(s,3*u),o(c,u)}else for(c=s.vertices,u=0,p=c.length;p>u;u++)o(c[u],u)}}}(),THREE.Points.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.Line=function(e,t,i){return 1===i?new THREE.LineSegments(e,t):(THREE.Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new THREE.Geometry,void(this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()})))},THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.constructor=THREE.Line,THREE.Line.prototype.raycast=function(){var e=new THREE.Matrix4,t=new THREE.Ray,i=new THREE.Sphere;return function(r,n){var o=r.linePrecision,o=o*o,a=this.geometry,s=this.matrixWorld;if(null===a.boundingSphere&&a.computeBoundingSphere(),i.copy(a.boundingSphere),i.applyMatrix4(s),!1!==r.ray.intersectsSphere(i)){e.getInverse(s),t.copy(r.ray).applyMatrix4(e);var h=new THREE.Vector3,c=new THREE.Vector3,s=new THREE.Vector3,l=new THREE.Vector3,u=this instanceof THREE.LineSegments?2:1;if(a instanceof THREE.BufferGeometry){var p=a.index,d=a.attributes.position.array;if(null!==p)for(var p=p.array,a=0,f=p.length-1;f>a;a+=u){var E=p[a+1];h.fromArray(d,3*p[a]),c.fromArray(d,3*E),E=t.distanceSqToSegment(h,c,l,s),E>o||(l.applyMatrix4(this.matrixWorld),E=r.ray.origin.distanceTo(l),E<r.near||E>r.far||n.push({distance:E,point:s.clone().applyMatrix4(this.matrixWorld),index:a,face:null,faceIndex:null,object:this}))}else for(a=0,f=d.length/3-1;f>a;a+=u)h.fromArray(d,3*a),c.fromArray(d,3*a+3),E=t.distanceSqToSegment(h,c,l,s),E>o||(l.applyMatrix4(this.matrixWorld),E=r.ray.origin.distanceTo(l),E<r.near||E>r.far||n.push({distance:E,point:s.clone().applyMatrix4(this.matrixWorld),index:a,face:null,faceIndex:null,object:this}))}else if(a instanceof THREE.Geometry)for(h=a.vertices,c=h.length,a=0;c-1>a;a+=u)E=t.distanceSqToSegment(h[a],h[a+1],l,s),E>o||(l.applyMatrix4(this.matrixWorld),E=r.ray.origin.distanceTo(l),E<r.near||E>r.far||n.push({distance:E,point:s.clone().applyMatrix4(this.matrixWorld),index:a,face:null,faceIndex:null,object:this}))}}}(),THREE.Line.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.LineStrip=0,THREE.LinePieces=1,THREE.LineSegments=function(e,t){THREE.Line.call(this,e,t),this.type="LineSegments"},THREE.LineSegments.prototype=Object.create(THREE.Line.prototype),THREE.LineSegments.prototype.constructor=THREE.LineSegments,THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new THREE.Geometry,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.drawMode=THREE.TrianglesDrawMode,this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.setDrawMode=function(e){this.drawMode=e},THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&0<this.geometry.morphTargets.length){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:0},THREE.Mesh.prototype.raycast=function(){function e(e,t,i,r,n,o,a){return THREE.Triangle.barycoordFromPoint(e,t,i,r,E),n.multiplyScalar(E.x),o.multiplyScalar(E.y),a.multiplyScalar(E.z),n.add(o).add(a),n.clone()}function t(e,t,i,r,n,o,a){var s=e.material;return null===(s.side===THREE.BackSide?i.intersectTriangle(o,n,r,!0,a):i.intersectTriangle(r,n,o,s.side!==THREE.DoubleSide,a))?null:(g.copy(a),g.applyMatrix4(e.matrixWorld),i=t.ray.origin.distanceTo(g),i<t.near||i>t.far?null:{distance:i,point:g.clone(),object:e})}function i(i,r,n,o,c,l,u,E){return a.fromArray(o,3*l),s.fromArray(o,3*u),h.fromArray(o,3*E),(i=t(i,r,n,a,s,h,m))&&(c&&(p.fromArray(c,2*l),d.fromArray(c,2*u),f.fromArray(c,2*E),i.uv=e(m,a,s,h,p,d,f)),i.face=new THREE.Face3(l,u,E,THREE.Triangle.normal(a,s,h)),i.faceIndex=l),i}var r=new THREE.Matrix4,n=new THREE.Ray,o=new THREE.Sphere,a=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3,c=new THREE.Vector3,l=new THREE.Vector3,u=new THREE.Vector3,p=new THREE.Vector2,d=new THREE.Vector2,f=new THREE.Vector2,E=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector3;return function(E,g){var v=this.geometry,T=this.material,y=this.matrixWorld;if(void 0!==T&&(null===v.boundingSphere&&v.computeBoundingSphere(),o.copy(v.boundingSphere),o.applyMatrix4(y),!1!==E.ray.intersectsSphere(o)&&(r.getInverse(y),n.copy(E.ray).applyMatrix4(r),null===v.boundingBox||!1!==n.intersectsBox(v.boundingBox)))){var R,x;if(v instanceof THREE.BufferGeometry){var H,_,T=v.index,y=v.attributes,v=y.position.array;if(void 0!==y.uv&&(R=y.uv.array),null!==T)for(var y=T.array,M=0,b=y.length;b>M;M+=3)T=y[M],H=y[M+1],_=y[M+2],(x=i(this,E,n,v,R,T,H,_))&&(x.faceIndex=Math.floor(M/3),g.push(x));else for(M=0,b=v.length;b>M;M+=9)T=M/3,H=T+1,_=T+2,(x=i(this,E,n,v,R,T,H,_))&&(x.index=T,g.push(x))}else if(v instanceof THREE.Geometry){var S,w,y=T instanceof THREE.MultiMaterial,M=!0===y?T.materials:null,b=v.vertices;H=v.faces,_=v.faceVertexUvs[0],0<_.length&&(R=_);for(var A=0,L=H.length;L>A;A++){var C=H[A];if(x=!0===y?M[C.materialIndex]:T,void 0!==x){if(_=b[C.a],S=b[C.b],w=b[C.c],!0===x.morphTargets){x=v.morphTargets;var P=this.morphTargetInfluences;a.set(0,0,0),s.set(0,0,0),h.set(0,0,0);for(var D=0,B=x.length;B>D;D++){var I=P[D];if(0!==I){var U=x[D].vertices;a.addScaledVector(c.subVectors(U[C.a],_),I),s.addScaledVector(l.subVectors(U[C.b],S),I),h.addScaledVector(u.subVectors(U[C.c],w),I)}}a.add(_),s.add(S),h.add(w),_=a,S=s,w=h}(x=t(this,E,n,_,S,w,m))&&(R&&(P=R[A],p.copy(P[0]),d.copy(P[1]),f.copy(P[2]),x.uv=e(m,_,S,w,p,d,f)),x.face=C,x.faceIndex=A,g.push(x))}}}}}}(),THREE.Mesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},THREE.Bone=function(e){THREE.Object3D.call(this),this.type="Bone",this.skin=e},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.constructor=THREE.Bone,THREE.Bone.prototype.copy=function(e){return THREE.Object3D.prototype.copy.call(this,e),this.skin=e.skin,this},THREE.Skeleton=function(e,t,i){if(this.useVertexTexture=void 0!==i?i:!0,this.identityMatrix=new THREE.Matrix4,e=e||[],this.bones=e.slice(0),this.useVertexTexture?(e=Math.sqrt(4*this.bones.length),e=THREE.Math.nextPowerOfTwo(Math.ceil(e)),this.boneTextureHeight=this.boneTextureWidth=e=Math.max(e,4),this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)):this.boneMatrices=new Float32Array(16*this.bones.length),void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else for(this.boneInverses=[],t=0,e=this.bones.length;e>t;t++)this.boneInverses.push(new THREE.Matrix4)},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,t=this.bones.length;t>e;e++){var i=new THREE.Matrix4;this.bones[e]&&i.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(i)}},THREE.Skeleton.prototype.pose=function(){for(var e,t=0,i=this.bones.length;i>t;t++)(e=this.bones[t])&&e.matrixWorld.getInverse(this.boneInverses[t]);for(t=0,i=this.bones.length;i>t;t++)(e=this.bones[t])&&(e.parent?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},THREE.Skeleton.prototype.update=function(){var e=new THREE.Matrix4;return function(){for(var t=0,i=this.bones.length;i>t;t++)e.multiplyMatrices(this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.Skeleton.prototype.clone=function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture);
},THREE.SkinnedMesh=function(e,t,i){if(THREE.Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4,e=[],this.geometry&&void 0!==this.geometry.bones){for(var r,n=0,o=this.geometry.bones.length;o>n;++n)r=this.geometry.bones[n],t=new THREE.Bone(this),e.push(t),t.name=r.name,t.position.fromArray(r.pos),t.quaternion.fromArray(r.rotq),void 0!==r.scl&&t.scale.fromArray(r.scl);for(n=0,o=this.geometry.bones.length;o>n;++n)r=this.geometry.bones[n],-1!==r.parent&&null!==r.parent?e[r.parent].add(e[n]):this.add(e[n])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(e,void 0,i),this.matrixWorld)},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.bind=function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinWeights.length;e++){var t=this.geometry.skinWeights[e],i=1/t.lengthManhattan();1/0!==i?t.multiplyScalar(i):t.set(1,0,0,0)}else if(this.geometry instanceof THREE.BufferGeometry)for(var t=new THREE.Vector4,r=this.geometry.attributes.skinWeight,e=0;e<r.count;e++)t.x=r.getX(e),t.y=r.getY(e),t.z=r.getZ(e),t.w=r.getW(e),i=1/t.lengthManhattan(),1/0!==i?t.multiplyScalar(i):t.set(1,0,0,0),r.setXYZW(e,t.x,t.y,t.z,t.w)},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):void 0},THREE.SkinnedMesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)},THREE.LOD=function(){THREE.Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},objects:{get:function(){return this.levels}}})},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var i=this.levels,r=0;r<i.length&&!(t<i[r].distance);r++);i.splice(r,0,{distance:t,object:e}),this.add(e)},THREE.LOD.prototype.getObjectForDistance=function(e){for(var t=this.levels,i=1,r=t.length;r>i&&!(e<t[i].distance);i++);return t[i-1].object},THREE.LOD.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,i){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(e);this.getObjectForDistance(r).raycast(t,i)}}(),THREE.LOD.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(i){var r=this.levels;if(1<r.length){e.setFromMatrixPosition(i.matrixWorld),t.setFromMatrixPosition(this.matrixWorld),i=e.distanceTo(t),r[0].object.visible=!0;for(var n=1,o=r.length;o>n&&i>=r[n].distance;n++)r[n-1].object.visible=!1,r[n].object.visible=!0;for(;o>n;n++)r[n].object.visible=!1}}}(),THREE.LOD.prototype.copy=function(e){THREE.Object3D.prototype.copy.call(this,e,!1),e=e.levels;for(var t=0,i=e.length;i>t;t++){var r=e[t];this.addLevel(r.object.clone(),r.distance)}return this},THREE.LOD.prototype.toJSON=function(e){e=THREE.Object3D.prototype.toJSON.call(this,e),e.object.levels=[];for(var t=this.levels,i=0,r=t.length;r>i;i++){var n=t[i];e.object.levels.push({object:n.object.uuid,distance:n.distance})}return e},THREE.Sprite=function(){var e=new Uint16Array([0,1,2,0,2,3]),t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),i=new Float32Array([0,0,1,0,1,1,0,1]),r=new THREE.BufferGeometry;return r.setIndex(new THREE.BufferAttribute(e,1)),r.addAttribute("position",new THREE.BufferAttribute(t,3)),r.addAttribute("uv",new THREE.BufferAttribute(i,2)),function(e){THREE.Object3D.call(this),this.type="Sprite",this.geometry=r,this.material=void 0!==e?e:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.raycast=function(){var e=new THREE.Vector3;return function(t,i){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.distanceSqToPoint(e);r>this.scale.x*this.scale.y||i.push({distance:Math.sqrt(r),point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.clone=function(){return new this.constructor(this.material).copy(this)},THREE.Particle=THREE.Sprite,THREE.LensFlare=function(e,t,i,r,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,i,r,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.add=function(e,t,i,r,n,o){void 0===t&&(t=-1),void 0===i&&(i=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===r&&(r=THREE.NormalBlending),i=Math.min(i,Math.max(0,i)),this.lensFlares.push({texture:e,size:t,distance:i,x:0,y:0,z:0,scale:1,rotation:0,opacity:o,color:n,blending:r})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,i=this.lensFlares.length,r=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;i>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+n*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.LensFlare.prototype.copy=function(e){THREE.Object3D.prototype.copy.call(this,e),this.positionScreen.copy(e.positionScreen),this.customUpdateCallback=e.customUpdateCallback;for(var t=0,i=e.lensFlares.length;i>t;t++)this.lensFlares.push(e.lensFlares[t]);return this},THREE.Scene=function(){THREE.Object3D.call(this),this.type="Scene",this.overrideMaterial=this.fog=null,this.autoUpdate=!0},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.copy=function(e,t){return THREE.Object3D.prototype.copy.call(this,e,t),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},THREE.Fog=function(e,t,i){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==i?i:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.ShaderChunk={},THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif\n",THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",THREE.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif\n",THREE.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",THREE.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n",THREE.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",THREE.ShaderChunk.bsdfs="bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n	return any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n		if( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n			float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n			float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n			return distanceFalloff * maxDistanceCutoffFactor;\n#else\n			return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n		}\n		return 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_Smith( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n	return specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif\n",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n	diffuseColor.rgb *= vColor;\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif\n",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n	vColor.xyz = color.xyz;\n#endif",THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n",THREE.ShaderChunk.cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\nconst float cubeUV_textureSize = 1024.0;\nint getFaceFromDirection(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    int face = -1;\n    if( absDirection.x > absDirection.z ) {\n        if(absDirection.x > absDirection.y )\n            face = direction.x > 0.0 ? 0 : 3;\n        else\n            face = direction.y > 0.0 ? 1 : 4;\n    }\n    else {\n        if(absDirection.z > absDirection.y )\n            face = direction.z > 0.0 ? 2 : 5;\n        else\n            face = direction.y > 0.0 ? 1 : 4;\n    }\n    return face;\n}\nconst float cubeUV_maxLods1 = log2(cubeUV_textureSize*0.25) - 1.0;\nconst float cubeUV_rangeClamp = exp2((6.0 - 1.0) * 2.0);\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n    float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n    float dxRoughness = dFdx(roughness);\n    float dyRoughness = dFdy(roughness);\n    vec3 dx = dFdx( vec * scale * dxRoughness );\n    vec3 dy = dFdy( vec * scale * dyRoughness );\n    float d = max( dot( dx, dx ), dot( dy, dy ) );\n    d = clamp(d, 1.0, cubeUV_rangeClamp);\n    float mipLevel = 0.5 * log2(d);\n    return vec2(floor(mipLevel), fract(mipLevel));\n}\nconst float cubeUV_maxLods2 = log2(cubeUV_textureSize*0.25) - 2.0;\nconst float cubeUV_rcpTextureSize = 1.0 / cubeUV_textureSize;\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n    mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n    float a = 16.0 * cubeUV_rcpTextureSize;\n    vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n    vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n    float powScale = exp2_packed.x * exp2_packed.y;\n    float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n    float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n    bool bRes = mipLevel == 0.0;\n    scale =  bRes && (scale < a) ? a : scale;\n    vec3 r;\n    vec2 offset;\n    int face = getFaceFromDirection(direction);\n    float rcpPowScale = 1.0 / powScale;\n    if( face == 0) {\n        r = vec3(direction.x, -direction.z, direction.y);\n        offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 1) {\n        r = vec3(direction.y, direction.x, direction.z);\n        offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 2) {\n        r = vec3(direction.z, direction.x, direction.y);\n        offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n    }\n    else if( face == 3) {\n        r = vec3(direction.x, direction.z, direction.y);\n        offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    else if( face == 4) {\n        r = vec3(direction.y, direction.x, -direction.z);\n        offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    else {\n        r = vec3(direction.z, -direction.x, direction.y);\n        offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n        offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n    }\n    r = normalize(r);\n    float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n    vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n    vec2 base = offset + vec2( texelOffset );\n    return base + s * ( scale - 2.0 * texelOffset );\n}\nconst float cubeUV_maxLods3 = log2(cubeUV_textureSize*0.25) - 3.0;\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n    float roughnessVal = roughness* cubeUV_maxLods3;\n    float r1 = floor(roughnessVal);\n    float r2 = r1 + 1.0;\n    float t = fract(roughnessVal);\n    vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n    float s = mipInfo.y;\n    float level0 = mipInfo.x;\n    float level1 = level0 + 1.0;\n    level1 = level1 > 5.0 ? 5.0 : level1;\n    level0 += min( floor( s + 0.5 ), 5.0 );\n    vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n    vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n    vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n    vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n    vec4 result = mix(color10, color20, t);\n    return vec4(result.rgb, 1.0);\n}\n#endif\n",THREE.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n	objectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n	transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",THREE.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif\n",THREE.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",THREE.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif\n",THREE.ShaderChunk.encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n",THREE.ShaderChunk.encodings_fragment="  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#else\n		float flipNormal = 1.0;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n	envColor = envMapTexelToLinear( envColor );\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif\n",THREE.ShaderChunk.envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( STANDARD )\n	uniform float reflectivity;\n	uniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( STANDARD )\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n	varying vec3 vReflect;\n	uniform float refractionRatio;\n#endif\n",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG ) && ! defined( STANDARD )\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n	vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	#ifdef ENVMAP_MODE_REFLECTION\n		vReflect = reflect( cameraToVertex, worldNormal );\n	#else\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n	#endif\n#endif\n",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	#ifdef FOG_EXP2\n		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n	uniform vec3 fogColor;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",THREE.ShaderChunk.lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		directLight = getPointDirectLightIrradiance( pointLights[ i ], geometry );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		directLight = getSpotDirectLightIrradiance( spotLights[ i ], geometry );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directLight = getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n#endif\n",THREE.ShaderChunk.lights_pars="uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	IncidentLight getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry ) {\n		IncidentLight directLight;\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n		return directLight;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	IncidentLight getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry ) {\n		IncidentLight directLight;\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		if ( testLightInRange( lightDistance, pointLight.distance ) ) {\n			directLight.color = pointLight.color;\n			directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n		return directLight;\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	IncidentLight getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry ) {\n		IncidentLight directLight;\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n		return directLight;\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif\n#if defined( USE_ENVMAP ) && defined( STANDARD )\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		#ifdef DOUBLE_SIDED\n			float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		#else\n			float flipNormal = 1.0;\n		#endif\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			vec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n		#else\n			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n		#endif\n		#ifdef DOUBLE_SIDED\n			float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n		#else\n			float flipNormal = 1.0;\n		#endif\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n		#elif defined( ENVMAP_TYPE_EQUIREC )\n			vec2 sampleUV;\n			sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n			sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n			#endif\n		#elif defined( ENVMAP_TYPE_SPHERE )\n			vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#endif\n		#endif\n		envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif\n",
THREE.ShaderChunk.lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",THREE.ShaderChunk.lights_phong_pars_fragment="#ifdef USE_ENVMAP\n	varying vec3 vWorldPosition;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)\n",THREE.ShaderChunk.lights_phong_pars_vertex="#ifdef USE_ENVMAP\n	varying vec3 vWorldPosition;\n#endif\n",THREE.ShaderChunk.lights_phong_vertex="#ifdef USE_ENVMAP\n	vWorldPosition = worldPosition.xyz;\n#endif\n",THREE.ShaderChunk.lights_standard_fragment="StandardMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\nmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n",THREE.ShaderChunk.lights_standard_pars_fragment="struct StandardMaterial {\n	vec3	diffuseColor;\n	float	specularRoughness;\n	vec3	specularColor;\n};\nvoid RE_Direct_Standard( const in IncidentLight directLight, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n}\nvoid RE_IndirectDiffuse_Standard( const in vec3 irradiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Standard( const in vec3 radiance, const in GeometricContext geometry, const in StandardMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n}\n#define RE_Direct				RE_Direct_Standard\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Standard\n#define RE_IndirectSpecular		RE_IndirectSpecular_Standard\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",THREE.ShaderChunk.lights_template="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		directLight = getPointDirectLightIrradiance( pointLight, geometry );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		directLight = getSpotDirectLightIrradiance( spotLight, geometry );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		directLight = getDirectionalDirectLightIrradiance( directionalLight, geometry );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#ifdef USE_LIGHTMAP\n		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n	 	irradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n	#endif\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n	RE_IndirectSpecular( radiance, geometry, material, reflectedLight );\n#endif\n",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n	uniform float logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n	uniform float logDepthBufFC;\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n	#else\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n	#endif\n#endif\n",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif\n",THREE.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n#endif\n",THREE.ShaderChunk.metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.r;\n#endif\n",THREE.ShaderChunk.metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n#endif\n",THREE.ShaderChunk.normal_fragment="#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n	#endif\n#endif\n#ifdef USE_NORMALMAP\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif\n",THREE.ShaderChunk.premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",THREE.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n	vec4 mvPosition = modelViewMatrix * skinned;\n#else\n	vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.r;\n#endif\n",THREE.ShaderChunk.roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n	float unpackDepth( const in vec4 rgba_depth ) {\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		return dot( rgba_depth, bit_shift );\n	}\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackDepth( texture2D( depths, uv ) ) );\n	}\n	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n		const vec2 offset = vec2( 0.0, 1.0 );\n		vec2 texelSize = vec2( 1.0 ) / size;\n		vec2 centroidUV = floor( uv * size + 0.5 ) / size;\n		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n		vec2 f = fract( uv * size + 0.5 );\n		float a = mix( lb, lt, f.y );\n		float b = mix( rb, rt, f.y );\n		float c = mix( a, b, f.x );\n		return c;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return 1.0;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		vec3 bd3D = normalize( lightToPosition );\n		float dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif\n",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n#endif\n",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n#endif\n",THREE.ShaderChunk.shadowmask_pars_fragment="float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#endif\n	return shadow;\n}\n",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif\n",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n#endif\n",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",THREE.ShaderChunk.tonemapping_fragment="#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",THREE.ShaderChunk.tonemapping_pars_fragment="#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",THREE.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",THREE.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n#endif",THREE.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = uv2;\n#endif",THREE.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n#endif",THREE.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n#endif\n",THREE.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( STANDARD ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n	#ifdef USE_SKINNING\n		vec4 worldPosition = modelMatrix * skinned;\n	#else\n		vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n	#endif\n#endif\n",THREE.UniformsUtils={merge:function(e){for(var t={},i=0;i<e.length;i++){var r,n=this.clone(e[i]);for(r in n)t[r]=n[r]}return t},clone:function(e){var t,i={};for(t in e){i[t]={};for(var r in e[t]){var n=e[t][r];n instanceof THREE.Color||n instanceof THREE.Vector2||n instanceof THREE.Vector3||n instanceof THREE.Vector4||n instanceof THREE.Matrix3||n instanceof THREE.Matrix4||n instanceof THREE.Texture?i[t][r]=n.clone():Array.isArray(n)?i[t][r]=n.slice():i[t][r]=n}}return i}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},roughnessmap:{roughnessMap:{type:"t",value:null}},metalnessmap:{metalnessMap:{type:"t",value:null}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLights:{type:"sa",value:[],properties:{direction:{type:"v3"},color:{type:"c"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},directionalShadowMap:{type:"tv",value:[]},directionalShadowMatrix:{type:"m4v",value:[]},spotLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},direction:{type:"v3"},distance:{type:"f"},coneCos:{type:"f"},penumbraCos:{type:"f"},decay:{type:"f"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},spotShadowMap:{type:"tv",value:[]},spotShadowMatrix:{type:"m4v",value:[]},pointLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},decay:{type:"f"},distance:{type:"f"},shadow:{type:"i"},shadowBias:{type:"f"},shadowRadius:{type:"f"},shadowMapSize:{type:"v2"}}},pointShadowMap:{type:"tv",value:[]},pointShadowMatrix:{type:"m4v",value:[]},hemisphereLights:{type:"sa",value:[],properties:{direction:{type:"v3"},skyColor:{type:"c"},groundColor:{type:"c"}}}},points:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)}}},THREE.ShaderChunk.cube_frag="uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n	#include <logdepthbuf_fragment>\n}\n",THREE.ShaderChunk.cube_vert="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n	#include <logdepthbuf_vertex>\n}\n",THREE.ShaderChunk.depth_frag="uniform float mNear;\nuniform float mFar;\nuniform float opacity;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	float color = 1.0 - smoothstep( mNear, mFar, depth );\n	gl_FragColor = vec4( vec3( color ), opacity );\n}\n",THREE.ShaderChunk.depth_vert="#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n}\n",THREE.ShaderChunk.depthRGBA_frag="#include <common>\n#include <logdepthbuf_pars_fragment>\nvec4 pack_depth( const in float depth ) {\n	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n	res -= res.xxyz * bit_mask;\n	return res;\n}\nvoid main() {\n	#include <logdepthbuf_fragment>\n	#ifdef USE_LOGDEPTHBUF_EXT\n		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\n	#else\n		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n	#endif\n}\n",THREE.ShaderChunk.depthRGBA_vert="#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n}\n",THREE.ShaderChunk.distanceRGBA_frag="uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\nvec4 pack1K ( float depth ) {\n	depth /= 1000.0;\n	const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\n	const vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\n	vec4 res = mod( depth * bitSh * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\n	res -= res.xxyz * bitMsk;\n	return res;\n}\nfloat unpack1K ( vec4 color ) {\n	const vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n	return dot( color, bitSh ) * 1000.0;\n}\nvoid main () {\n	gl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\n}\n",THREE.ShaderChunk.distanceRGBA_vert="varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\nvoid main() {\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	vWorldPosition = worldPosition;\n}\n",
THREE.ShaderChunk.equirect_frag="uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	vec3 direction = normalize( vWorldPosition );\n	vec2 sampleUV;\n	sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <logdepthbuf_fragment>\n}\n",THREE.ShaderChunk.equirect_vert="varying vec3 vWorldPosition;\n#include <common>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n	#include <logdepthbuf_vertex>\n}\n",THREE.ShaderChunk.linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n}\n",THREE.ShaderChunk.meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight;\n	reflectedLight.directDiffuse = vec3( 0.0 );\n	reflectedLight.directSpecular = vec3( 0.0 );\n	reflectedLight.indirectDiffuse = diffuseColor.rgb;\n	reflectedLight.indirectSpecular = vec3( 0.0 );\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n}\n",THREE.ShaderChunk.meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <lights_phong_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_phong_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.meshstandard_frag="#define STANDARD\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_standard_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_standard_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshstandard_vert="#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.normal_frag="uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n	#include <logdepthbuf_fragment>\n}\n",THREE.ShaderChunk.normal_vert="varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	vNormal = normalize( normalMatrix * normal );\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n}\n",THREE.ShaderChunk.points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\nvoid main() {\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <project_vertex>\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / - mvPosition.z );\n	#else\n		gl_PointSize = size;\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.meshbasic_vert,fragmentShader:THREE.ShaderChunk.meshbasic_frag},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{type:"c",value:new THREE.Color(0)}}]),vertexShader:THREE.ShaderChunk.meshlambert_vert,fragmentShader:THREE.ShaderChunk.meshlambert_frag},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:THREE.ShaderChunk.meshphong_vert,fragmentShader:THREE.ShaderChunk.meshphong_frag},standard:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.roughnessmap,THREE.UniformsLib.metalnessmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{type:"c",value:new THREE.Color(0)},roughness:{type:"f",value:.5},metalness:{type:"f",value:0},envMapIntensity:{type:"f",value:1}}]),vertexShader:THREE.ShaderChunk.meshstandard_vert,fragmentShader:THREE.ShaderChunk.meshstandard_frag},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.points_vert,fragmentShader:THREE.ShaderChunk.points_frag},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:THREE.ShaderChunk.linedashed_vert,fragmentShader:THREE.ShaderChunk.linedashed_frag},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:THREE.ShaderChunk.depth_vert,fragmentShader:THREE.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:THREE.ShaderChunk.normal_vert,fragmentShader:THREE.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:THREE.ShaderChunk.cube_vert,fragmentShader:THREE.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:THREE.ShaderChunk.equirect_vert,fragmentShader:THREE.ShaderChunk.equirect_frag},depthRGBA:{uniforms:{},vertexShader:THREE.ShaderChunk.depthRGBA_vert,fragmentShader:THREE.ShaderChunk.depthRGBA_frag},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new THREE.Vector3(0,0,0)}},vertexShader:THREE.ShaderChunk.distanceRGBA_vert,fragmentShader:THREE.ShaderChunk.distanceRGBA_frag}},THREE.WebGLRenderer=function(e){function t(e,t,i,r){!0===I&&(e*=r,t*=r,i*=r),ye.clearColor(e,t,i,r)}function i(){ye.init(),ye.scissor(J.copy(se).multiplyScalar(ae)),ye.viewport(ee.copy(ce).multiplyScalar(ae)),t(ie.r,ie.g,ie.b,re)}function r(){Q=X=null,K="",Z=-1,ye.reset()}function n(e){e.preventDefault(),r(),i(),Re.clear()}function o(e){e=e.target,e.removeEventListener("dispose",o);e:{var t=Re.get(e);if(e.image&&t.__image__webglTextureCube)me.deleteTexture(t.__image__webglTextureCube);else{if(void 0===t.__webglInit)break e;me.deleteTexture(t.__webglTexture)}Re["delete"](e)}fe.textures--}function a(e){e=e.target,e.removeEventListener("dispose",a);var t=Re.get(e),i=Re.get(e.texture);if(e&&void 0!==i.__webglTexture){if(me.deleteTexture(i.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(i=0;6>i;i++)me.deleteFramebuffer(t.__webglFramebuffer[i]),me.deleteRenderbuffer(t.__webglDepthbuffer[i]);else me.deleteFramebuffer(t.__webglFramebuffer),me.deleteRenderbuffer(t.__webglDepthbuffer);Re["delete"](e.texture),Re["delete"](e)}fe.textures--}function s(e){e=e.target,e.removeEventListener("dispose",s),h(e),Re["delete"](e)}function h(e){var t=Re.get(e).program;e.program=void 0,void 0!==t&&He.releaseProgram(t)}function c(e,t){return Math.abs(t[0])-Math.abs(e[0])}function l(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function u(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function p(e,t,i,r,n){var o;i.transparent?(r=O,o=++G):(r=N,o=++V),o=r[o],void 0!==o?(o.id=e.id,o.object=e,o.geometry=t,o.material=i,o.z=pe.z,o.group=n):(o={id:e.id,object:e,geometry:t,material:i,z:pe.z,group:n},r.push(o))}function d(e,t){if(!1!==e.visible){if(e.layers.test(t.layers))if(e instanceof THREE.Light)F.push(e);else if(e instanceof THREE.Sprite)!1!==e.frustumCulled&&!0!==le.intersectsObject(e)||k.push(e);else if(e instanceof THREE.LensFlare)j.push(e);else if(e instanceof THREE.ImmediateRenderObject)!0===W.sortObjects&&(pe.setFromMatrixPosition(e.matrixWorld),pe.applyProjection(ue)),p(e,null,e.material,pe.z,null);else if((e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Points)&&(e instanceof THREE.SkinnedMesh&&e.skeleton.update(),!1===e.frustumCulled||!0===le.intersectsObject(e))){var i=e.material;if(!0===i.visible){!0===W.sortObjects&&(pe.setFromMatrixPosition(e.matrixWorld),pe.applyProjection(ue));var r=xe.update(e);if(i instanceof THREE.MultiMaterial)for(var n=r.groups,o=i.materials,i=0,a=n.length;a>i;i++){var s=n[i],h=o[s.materialIndex];!0===h.visible&&p(e,r,h,pe.z,s)}else p(e,r,i,pe.z,null)}}for(r=e.children,i=0,a=r.length;a>i;i++)d(r[i],t)}}function f(e,t,i,r){for(var n=0,o=e.length;o>n;n++){var a=e[n],s=a.object,h=a.geometry,c=void 0===r?a.material:r,a=a.group;if(s.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,s.matrixWorld),s.normalMatrix.getNormalMatrix(s.modelViewMatrix),s instanceof THREE.ImmediateRenderObject){E(c);var l=m(t,i,c,s);K="",s.render(function(e){W.renderBufferImmediate(e,l,c)})}else W.renderBufferDirect(t,i,h,c,s,a)}}function E(e){e.side!==THREE.DoubleSide?ye.enable(me.CULL_FACE):ye.disable(me.CULL_FACE),ye.setFlipSided(e.side===THREE.BackSide),!0===e.transparent?ye.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):ye.setBlending(THREE.NoBlending),ye.setDepthFunc(e.depthFunc),ye.setDepthTest(e.depthTest),ye.setDepthWrite(e.depthWrite),ye.setColorWrite(e.colorWrite),ye.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function m(e,t,i,r){te=0;var n=Re.get(i);if(void 0===n.program&&(i.needsUpdate=!0),void 0!==n.lightsHash&&n.lightsHash!==de.hash&&(i.needsUpdate=!0),i.needsUpdate){e:{var o=Re.get(i),a=He.getParameters(i,de,t,r),c=He.getProgramCode(i,a),l=o.program,u=!0;if(void 0===l)i.addEventListener("dispose",s);else if(l.code!==c)h(i);else{if(void 0!==a.shaderID)break e;u=!1}if(u&&(a.shaderID?(l=THREE.ShaderLib[a.shaderID],o.__webglShader={name:i.type,uniforms:THREE.UniformsUtils.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}):o.__webglShader={name:i.type,uniforms:i.uniforms,vertexShader:i.vertexShader,fragmentShader:i.fragmentShader},i.__webglShader=o.__webglShader,l=He.acquireProgram(i,a,c),o.program=l,i.program=l),a=l.getAttributes(),i.morphTargets)for(c=i.numSupportedMorphTargets=0;c<W.maxMorphTargets;c++)0<=a["morphTarget"+c]&&i.numSupportedMorphTargets++;if(i.morphNormals)for(c=i.numSupportedMorphNormals=0;c<W.maxMorphNormals;c++)0<=a["morphNormal"+c]&&i.numSupportedMorphNormals++;o.uniformsList=[];var p,a=o.__webglShader.uniforms,c=o.program.getUniforms();for(p in a)(l=c[p])&&o.uniformsList.push([o.__webglShader.uniforms[p],l]);for((i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshStandardMaterial||i.lights)&&(o.lightsHash=de.hash,a.ambientLightColor.value=de.ambient,a.directionalLights.value=de.directional,a.spotLights.value=de.spot,a.pointLights.value=de.point,a.hemisphereLights.value=de.hemi,a.directionalShadowMap.value=de.directionalShadowMap,a.directionalShadowMatrix.value=de.directionalShadowMatrix,a.spotShadowMap.value=de.spotShadowMap,a.spotShadowMatrix.value=de.spotShadowMatrix,a.pointShadowMap.value=de.pointShadowMap,a.pointShadowMatrix.value=de.pointShadowMatrix),o.hasDynamicUniforms=!1,p=0,a=o.uniformsList.length;a>p;p++)if(!0===o.uniformsList[p][0].dynamic){o.hasDynamicUniforms=!0;break}}i.needsUpdate=!1}if(l=c=u=!1,o=n.program,p=o.getUniforms(),a=n.__webglShader.uniforms,o.id!==X&&(me.useProgram(o.program),X=o.id,l=c=u=!0),i.id!==Z&&(Z=i.id,c=!0),(u||e!==Q)&&(me.uniformMatrix4fv(p.projectionMatrix,!1,e.projectionMatrix.elements),Te.logarithmicDepthBuffer&&me.uniform1f(p.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==Q&&(Q=e,l=c=!0),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshStandardMaterial||i.envMap)&&void 0!==p.cameraPosition&&(pe.setFromMatrixPosition(e.matrixWorld),me.uniform3f(p.cameraPosition,pe.x,pe.y,pe.z)),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshStandardMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&void 0!==p.viewMatrix&&me.uniformMatrix4fv(p.viewMatrix,!1,e.matrixWorldInverse.elements),void 0!==p.toneMappingExposure&&me.uniform1f(p.toneMappingExposure,W.toneMappingExposure),void 0!==p.toneMappingWhitePoint&&me.uniform1f(p.toneMappingWhitePoint,W.toneMappingWhitePoint)),i.skinning&&(r.bindMatrix&&void 0!==p.bindMatrix&&me.uniformMatrix4fv(p.bindMatrix,!1,r.bindMatrix.elements),r.bindMatrixInverse&&void 0!==p.bindMatrixInverse&&me.uniformMatrix4fv(p.bindMatrixInverse,!1,r.bindMatrixInverse.elements),Te.floatVertexTextures&&r.skeleton&&r.skeleton.useVertexTexture?(void 0!==p.boneTexture&&(u=g(),me.uniform1i(p.boneTexture,u),W.setTexture(r.skeleton.boneTexture,u)),void 0!==p.boneTextureWidth&&me.uniform1i(p.boneTextureWidth,r.skeleton.boneTextureWidth),void 0!==p.boneTextureHeight&&me.uniform1i(p.boneTextureHeight,r.skeleton.boneTextureHeight)):r.skeleton&&r.skeleton.boneMatrices&&void 0!==p.boneGlobalMatrices&&me.uniformMatrix4fv(p.boneGlobalMatrices,!1,r.skeleton.boneMatrices)),c){if((i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshStandardMaterial||i.lights)&&(c=l,a.ambientLightColor.needsUpdate=c,a.directionalLights.needsUpdate=c,a.pointLights.needsUpdate=c,a.spotLights.needsUpdate=c,a.hemisphereLights.needsUpdate=c),t&&i.fog&&(a.fogColor.value=t.color,t instanceof THREE.Fog?(a.fogNear.value=t.near,a.fogFar.value=t.far):t instanceof THREE.FogExp2&&(a.fogDensity.value=t.density)),i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshStandardMaterial){a.opacity.value=i.opacity,a.diffuse.value=i.color,i.emissive&&a.emissive.value.copy(i.emissive).multiplyScalar(i.emissiveIntensity),a.map.value=i.map,a.specularMap.value=i.specularMap,a.alphaMap.value=i.alphaMap,i.aoMap&&(a.aoMap.value=i.aoMap,a.aoMapIntensity.value=i.aoMapIntensity);var d;i.map?d=i.map:i.specularMap?d=i.specularMap:i.displacementMap?d=i.displacementMap:i.normalMap?d=i.normalMap:i.bumpMap?d=i.bumpMap:i.roughnessMap?d=i.roughnessMap:i.metalnessMap?d=i.metalnessMap:i.alphaMap?d=i.alphaMap:i.emissiveMap&&(d=i.emissiveMap),void 0!==d&&(d instanceof THREE.WebGLRenderTarget&&(d=d.texture),t=d.offset,d=d.repeat,a.offsetRepeat.value.set(t.x,t.y,d.x,d.y)),a.envMap.value=i.envMap,a.flipEnvMap.value=i.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,a.reflectivity.value=i.reflectivity,a.refractionRatio.value=i.refractionRatio}i instanceof THREE.LineBasicMaterial?(a.diffuse.value=i.color,a.opacity.value=i.opacity):i instanceof THREE.LineDashedMaterial?(a.diffuse.value=i.color,a.opacity.value=i.opacity,a.dashSize.value=i.dashSize,a.totalSize.value=i.dashSize+i.gapSize,a.scale.value=i.scale):i instanceof THREE.PointsMaterial?(a.diffuse.value=i.color,a.opacity.value=i.opacity,a.size.value=i.size*ae,a.scale.value=A.clientHeight/2,a.map.value=i.map,null!==i.map&&(d=i.map.offset,i=i.map.repeat,a.offsetRepeat.value.set(d.x,d.y,i.x,i.y))):i instanceof THREE.MeshLambertMaterial?(i.lightMap&&(a.lightMap.value=i.lightMap,a.lightMapIntensity.value=i.lightMapIntensity),i.emissiveMap&&(a.emissiveMap.value=i.emissiveMap)):i instanceof THREE.MeshPhongMaterial?(a.specular.value=i.specular,a.shininess.value=Math.max(i.shininess,1e-4),i.lightMap&&(a.lightMap.value=i.lightMap,a.lightMapIntensity.value=i.lightMapIntensity),i.emissiveMap&&(a.emissiveMap.value=i.emissiveMap),i.bumpMap&&(a.bumpMap.value=i.bumpMap,a.bumpScale.value=i.bumpScale),i.normalMap&&(a.normalMap.value=i.normalMap,a.normalScale.value.copy(i.normalScale)),i.displacementMap&&(a.displacementMap.value=i.displacementMap,a.displacementScale.value=i.displacementScale,a.displacementBias.value=i.displacementBias)):i instanceof THREE.MeshStandardMaterial?(a.roughness.value=i.roughness,a.metalness.value=i.metalness,i.roughnessMap&&(a.roughnessMap.value=i.roughnessMap),i.metalnessMap&&(a.metalnessMap.value=i.metalnessMap),i.lightMap&&(a.lightMap.value=i.lightMap,a.lightMapIntensity.value=i.lightMapIntensity),i.emissiveMap&&(a.emissiveMap.value=i.emissiveMap),i.bumpMap&&(a.bumpMap.value=i.bumpMap,a.bumpScale.value=i.bumpScale),i.normalMap&&(a.normalMap.value=i.normalMap,a.normalScale.value.copy(i.normalScale)),i.displacementMap&&(a.displacementMap.value=i.displacementMap,a.displacementScale.value=i.displacementScale,a.displacementBias.value=i.displacementBias),i.envMap&&(a.envMapIntensity.value=i.envMapIntensity)):i instanceof THREE.MeshDepthMaterial?(a.mNear.value=e.near,a.mFar.value=e.far,a.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(a.opacity.value=i.opacity),T(n.uniformsList)}if(me.uniformMatrix4fv(p.modelViewMatrix,!1,r.modelViewMatrix.elements),p.normalMatrix&&me.uniformMatrix3fv(p.normalMatrix,!1,r.normalMatrix.elements),void 0!==p.modelMatrix&&me.uniformMatrix4fv(p.modelMatrix,!1,r.matrixWorld.elements),!0===n.hasDynamicUniforms){for(n=n.uniformsList,i=[],d=0,t=n.length;t>d;d++)p=n[d][0],a=p.onUpdateCallback,void 0!==a&&(a.bind(p)(r,e),i.push(n[d]));T(i)}return o}function g(){var e=te;return e>=Te.maxTextures&&void 0,te+=1,e}function v(e,t,i,r){var n;if("1i"===t)me.uniform1i(i,r);else if("1f"===t)me.uniform1f(i,r);else if("2f"===t)me.uniform2f(i,r[0],r[1]);else if("3f"===t)me.uniform3f(i,r[0],r[1],r[2]);else if("4f"===t)me.uniform4f(i,r[0],r[1],r[2],r[3]);else if("1iv"===t)me.uniform1iv(i,r);else if("3iv"===t)me.uniform3iv(i,r);else if("1fv"===t)me.uniform1fv(i,r);else if("2fv"===t)me.uniform2fv(i,r);else if("3fv"===t)me.uniform3fv(i,r);else if("4fv"===t)me.uniform4fv(i,r);else if("Matrix2fv"===t)me.uniformMatrix2fv(i,!1,r);else if("Matrix3fv"===t)me.uniformMatrix3fv(i,!1,r);else if("Matrix4fv"===t)me.uniformMatrix4fv(i,!1,r);else if("i"===t)me.uniform1i(i,r);else if("f"===t)me.uniform1f(i,r);else if("v2"===t)me.uniform2f(i,r.x,r.y);else if("v3"===t)me.uniform3f(i,r.x,r.y,r.z);else if("v4"===t)me.uniform4f(i,r.x,r.y,r.z,r.w);else if("c"===t)me.uniform3f(i,r.r,r.g,r.b);else if("s"===t){e=e.properties;for(var o in e){n=e[o];var a=i[o],s=r[o];v(n,n.type,a,s)}}else if("sa"===t){e=e.properties,t=0;for(var h=r.length;h>t;t++)for(o in e)n=e[o],a=i[t][o],s=r[t][o],v(n,n.type,a,s)}else if("iv1"===t)me.uniform1iv(i,r);else if("iv"===t)me.uniform3iv(i,r);else if("fv1"===t)me.uniform1fv(i,r);else if("fv"===t)me.uniform3fv(i,r);else if("v2v"===t){for(void 0===e._array&&(e._array=new Float32Array(2*r.length)),n=t=0,o=r.length;o>t;t++,n+=2)e._array[n+0]=r[t].x,e._array[n+1]=r[t].y;me.uniform2fv(i,e._array)}else if("v3v"===t){for(void 0===e._array&&(e._array=new Float32Array(3*r.length)),n=t=0,o=r.length;o>t;t++,n+=3)e._array[n+0]=r[t].x,e._array[n+1]=r[t].y,e._array[n+2]=r[t].z;me.uniform3fv(i,e._array)}else if("v4v"===t){for(void 0===e._array&&(e._array=new Float32Array(4*r.length)),n=t=0,o=r.length;o>t;t++,n+=4)e._array[n+0]=r[t].x,e._array[n+1]=r[t].y,e._array[n+2]=r[t].z,e._array[n+3]=r[t].w;me.uniform4fv(i,e._array)}else if("m2"===t)me.uniformMatrix2fv(i,!1,r.elements);else if("m3"===t)me.uniformMatrix3fv(i,!1,r.elements);else if("m3v"===t){for(void 0===e._array&&(e._array=new Float32Array(9*r.length)),t=0,o=r.length;o>t;t++)r[t].flattenToArrayOffset(e._array,9*t);me.uniformMatrix3fv(i,!1,e._array)}else if("m4"===t)me.uniformMatrix4fv(i,!1,r.elements);else if("m4v"===t){for(void 0===e._array&&(e._array=new Float32Array(16*r.length)),t=0,o=r.length;o>t;t++)r[t].flattenToArrayOffset(e._array,16*t);me.uniformMatrix4fv(i,!1,e._array)}else if("t"===t)n=g(),me.uniform1i(i,n),r&&(r instanceof THREE.CubeTexture||Array.isArray(r.image)&&6===r.image.length?H(r,n):r instanceof THREE.WebGLRenderTargetCube?_(r.texture,n):r instanceof THREE.WebGLRenderTarget?W.setTexture(r.texture,n):W.setTexture(r,n));else if("tv"===t){for(void 0===e._array&&(e._array=[]),t=0,o=e.value.length;o>t;t++)e._array[t]=g();
for(me.uniform1iv(i,e._array),t=0,o=e.value.length;o>t;t++)r=e.value[t],n=e._array[t],r&&(r instanceof THREE.CubeTexture||r.image instanceof Array&&6===r.image.length?H(r,n):r instanceof THREE.WebGLRenderTarget?W.setTexture(r.texture,n):r instanceof THREE.WebGLRenderTargetCube?_(r.texture,n):W.setTexture(r,n))}}function T(e){for(var t=0,i=e.length;i>t;t++){var r=e[t][0];!1!==r.needsUpdate&&v(r,r.type,e[t][1],r.value)}}function y(e,t,i){i?(me.texParameteri(e,me.TEXTURE_WRAP_S,w(t.wrapS)),me.texParameteri(e,me.TEXTURE_WRAP_T,w(t.wrapT)),me.texParameteri(e,me.TEXTURE_MAG_FILTER,w(t.magFilter)),me.texParameteri(e,me.TEXTURE_MIN_FILTER,w(t.minFilter))):(me.texParameteri(e,me.TEXTURE_WRAP_S,me.CLAMP_TO_EDGE),me.texParameteri(e,me.TEXTURE_WRAP_T,me.CLAMP_TO_EDGE),t.wrapS===THREE.ClampToEdgeWrapping&&t.wrapT===THREE.ClampToEdgeWrapping||void 0,me.texParameteri(e,me.TEXTURE_MAG_FILTER,S(t.magFilter)),me.texParameteri(e,me.TEXTURE_MIN_FILTER,S(t.minFilter)),t.minFilter!==THREE.NearestFilter&&t.minFilter!==THREE.LinearFilter&&void 0),!(i=ve.get("EXT_texture_filter_anisotropic"))||t.type===THREE.FloatType&&null===ve.get("OES_texture_float_linear")||t.type===THREE.HalfFloatType&&null===ve.get("OES_texture_half_float_linear")||!(1<t.anisotropy||Re.get(t).__currentAnisotropy)||(me.texParameterf(e,i.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,W.getMaxAnisotropy())),Re.get(t).__currentAnisotropy=t.anisotropy)}function R(e,t){if(e.width>t||e.height>t){var i=t/Math.max(e.width,e.height),r=document.createElement("canvas");return r.width=Math.floor(e.width*i),r.height=Math.floor(e.height*i),r.getContext("2d").drawImage(e,0,0,e.width,e.height,0,0,r.width,r.height),r}return e}function x(e){return THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height)}function H(e,t){var i=Re.get(e);if(6===e.image.length)if(0<e.version&&i.__version!==e.version){i.__image__webglTextureCube||(e.addEventListener("dispose",o),i.__image__webglTextureCube=me.createTexture(),fe.textures++),ye.activeTexture(me.TEXTURE0+t),ye.bindTexture(me.TEXTURE_CUBE_MAP,i.__image__webglTextureCube),me.pixelStorei(me.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof THREE.CompressedTexture,n=e.image[0]instanceof THREE.DataTexture,a=[],s=0;6>s;s++)a[s]=!W.autoScaleCubemaps||r||n?n?e.image[s].image:e.image[s]:R(e.image[s],Te.maxCubemapSize);var h=x(a[0]),c=w(e.format),l=w(e.type);for(y(me.TEXTURE_CUBE_MAP,e,h),s=0;6>s;s++)if(r)for(var u,p=a[s].mipmaps,d=0,f=p.length;f>d;d++)u=p[d],e.format!==THREE.RGBAFormat&&e.format!==THREE.RGBFormat?-1<ye.getCompressedTextureFormats().indexOf(c)?ye.compressedTexImage2D(me.TEXTURE_CUBE_MAP_POSITIVE_X+s,d,c,u.width,u.height,0,u.data):void 0:ye.texImage2D(me.TEXTURE_CUBE_MAP_POSITIVE_X+s,d,c,u.width,u.height,0,c,l,u.data);else n?ye.texImage2D(me.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,c,a[s].width,a[s].height,0,c,l,a[s].data):ye.texImage2D(me.TEXTURE_CUBE_MAP_POSITIVE_X+s,0,c,c,l,a[s]);e.generateMipmaps&&h&&me.generateMipmap(me.TEXTURE_CUBE_MAP),i.__version=e.version,e.onUpdate&&e.onUpdate(e)}else ye.activeTexture(me.TEXTURE0+t),ye.bindTexture(me.TEXTURE_CUBE_MAP,i.__image__webglTextureCube)}function _(e,t){ye.activeTexture(me.TEXTURE0+t),ye.bindTexture(me.TEXTURE_CUBE_MAP,Re.get(e).__webglTexture)}function M(e,t,i,r){var n=w(t.texture.format),o=w(t.texture.type);ye.texImage2D(r,0,n,t.width,t.height,0,n,o,null),me.bindFramebuffer(me.FRAMEBUFFER,e),me.framebufferTexture2D(me.FRAMEBUFFER,i,r,Re.get(t.texture).__webglTexture,0),me.bindFramebuffer(me.FRAMEBUFFER,null)}function b(e,t){me.bindRenderbuffer(me.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(me.renderbufferStorage(me.RENDERBUFFER,me.DEPTH_COMPONENT16,t.width,t.height),me.framebufferRenderbuffer(me.FRAMEBUFFER,me.DEPTH_ATTACHMENT,me.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(me.renderbufferStorage(me.RENDERBUFFER,me.DEPTH_STENCIL,t.width,t.height),me.framebufferRenderbuffer(me.FRAMEBUFFER,me.DEPTH_STENCIL_ATTACHMENT,me.RENDERBUFFER,e)):me.renderbufferStorage(me.RENDERBUFFER,me.RGBA4,t.width,t.height),me.bindRenderbuffer(me.RENDERBUFFER,null)}function S(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?me.NEAREST:me.LINEAR}function w(e){var t;if(e===THREE.RepeatWrapping)return me.REPEAT;if(e===THREE.ClampToEdgeWrapping)return me.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return me.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return me.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return me.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return me.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return me.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return me.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return me.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return me.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return me.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return me.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return me.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return me.BYTE;if(e===THREE.ShortType)return me.SHORT;if(e===THREE.UnsignedShortType)return me.UNSIGNED_SHORT;if(e===THREE.IntType)return me.INT;if(e===THREE.UnsignedIntType)return me.UNSIGNED_INT;if(e===THREE.FloatType)return me.FLOAT;if(t=ve.get("OES_texture_half_float"),null!==t&&e===THREE.HalfFloatType)return t.HALF_FLOAT_OES;if(e===THREE.AlphaFormat)return me.ALPHA;if(e===THREE.RGBFormat)return me.RGB;if(e===THREE.RGBAFormat)return me.RGBA;if(e===THREE.LuminanceFormat)return me.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return me.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return me.FUNC_ADD;if(e===THREE.SubtractEquation)return me.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return me.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return me.ZERO;if(e===THREE.OneFactor)return me.ONE;if(e===THREE.SrcColorFactor)return me.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return me.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return me.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return me.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return me.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return me.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return me.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return me.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return me.SRC_ALPHA_SATURATE;if(t=ve.get("WEBGL_compressed_texture_s3tc"),null!==t){if(e===THREE.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t=ve.get("WEBGL_compressed_texture_pvrtc"),null!==t){if(e===THREE.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===THREE.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===THREE.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===THREE.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t=ve.get("WEBGL_compressed_texture_etc1"),null!==t&&e===THREE.RGB_ETC1_Format)return t.COMPRESSED_RGB_ETC1_WEBGL;if(t=ve.get("EXT_blend_minmax"),null!==t){if(e===THREE.MinEquation)return t.MIN_EXT;if(e===THREE.MaxEquation)return t.MAX_EXT}return 0}e=e||{};var A=void 0!==e.canvas?e.canvas:document.createElement("canvas"),L=void 0!==e.context?e.context:null,C=void 0!==e.alpha?e.alpha:!1,P=void 0!==e.depth?e.depth:!0,D=void 0!==e.stencil?e.stencil:!0,B=void 0!==e.antialias?e.antialias:!1,I=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,U=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,F=[],N=[],V=-1,O=[],G=-1,z=new Float32Array(8),k=[],j=[];this.domElement=A,this.context=null,this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0,this.gammaFactor=2,this.physicallyCorrectLights=this.gammaOutput=this.gammaInput=!1,this.toneMapping=THREE.LinearToneMapping,this.toneMappingWhitePoint=this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0;var W=this,X=null,q=null,Y=null,Z=-1,K="",Q=null,J=new THREE.Vector4,$=null,ee=new THREE.Vector4,te=0,ie=new THREE.Color(0),re=0,ne=A.width,oe=A.height,ae=1,se=new THREE.Vector4(0,0,ne,oe),he=!1,ce=new THREE.Vector4(0,0,ne,oe),le=new THREE.Frustum,ue=new THREE.Matrix4,pe=new THREE.Vector3,de={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[],shadowsPointLight:0},fe={geometries:0,textures:0},Ee={calls:0,vertices:0,faces:0,points:0};this.info={render:Ee,memory:fe,programs:null};var me;try{if(C={alpha:C,depth:P,stencil:D,antialias:B,premultipliedAlpha:I,preserveDrawingBuffer:U},me=L||A.getContext("webgl",C)||A.getContext("experimental-webgl",C),null===me){if(null!==A.getContext("webgl"))throw"Error creating WebGL context with your selected attributes.";throw"Error creating WebGL context."}void 0===me.getShaderPrecisionFormat&&(me.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),A.addEventListener("webglcontextlost",n,!1)}catch(ge){}var ve=new THREE.WebGLExtensions(me);ve.get("OES_texture_float"),ve.get("OES_texture_float_linear"),ve.get("OES_texture_half_float"),ve.get("OES_texture_half_float_linear"),ve.get("OES_standard_derivatives"),ve.get("ANGLE_instanced_arrays"),ve.get("OES_element_index_uint")&&(THREE.BufferGeometry.MaxIndex=4294967296);var Te=new THREE.WebGLCapabilities(me,ve,e),ye=new THREE.WebGLState(me,ve,w),Re=new THREE.WebGLProperties,xe=new THREE.WebGLObjects(me,Re,this.info),He=new THREE.WebGLPrograms(this,Te),_e=new THREE.WebGLLights;this.info.programs=He.programs;var Me=new THREE.WebGLBufferRenderer(me,ve,Ee),be=new THREE.WebGLIndexedBufferRenderer(me,ve,Ee);i(),this.context=me,this.capabilities=Te,this.extensions=ve,this.properties=Re,this.state=ye;var Se=new THREE.WebGLShadowMap(this,de,xe);this.shadowMap=Se;var we=new THREE.SpritePlugin(this,k),Ae=new THREE.LensFlarePlugin(this,j);this.getContext=function(){return me},this.getContextAttributes=function(){return me.getContextAttributes()},this.forceContextLoss=function(){ve.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){var e;return function(){if(void 0!==e)return e;var t=ve.get("EXT_texture_filter_anisotropic");return e=null!==t?me.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}(),this.getPrecision=function(){return Te.precision},this.getPixelRatio=function(){return ae},this.setPixelRatio=function(e){void 0!==e&&(ae=e,this.setSize(ce.z,ce.w,!1))},this.getSize=function(){return{width:ne,height:oe}},this.setSize=function(e,t,i){ne=e,oe=t,A.width=e*ae,A.height=t*ae,!1!==i&&(A.style.width=e+"px",A.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,i,r){ye.viewport(ce.set(e,t,i,r))},this.setScissor=function(e,t,i,r){ye.scissor(se.set(e,t,i,r))},this.setScissorTest=function(e){ye.setScissorTest(he=e)},this.getClearColor=function(){return ie},this.setClearColor=function(e,i){ie.set(e),re=void 0!==i?i:1,t(ie.r,ie.g,ie.b,re)},this.getClearAlpha=function(){return re},this.setClearAlpha=function(e){re=e,t(ie.r,ie.g,ie.b,re)},this.clear=function(e,t,i){var r=0;(void 0===e||e)&&(r|=me.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=me.DEPTH_BUFFER_BIT),(void 0===i||i)&&(r|=me.STENCIL_BUFFER_BIT),me.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(e,t,i,r){this.setRenderTarget(e),this.clear(t,i,r)},this.resetGLState=r,this.dispose=function(){A.removeEventListener("webglcontextlost",n,!1)},this.renderBufferImmediate=function(e,t,i){ye.initAttributes();var r=Re.get(e);if(e.hasPositions&&!r.position&&(r.position=me.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=me.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=me.createBuffer()),e.hasColors&&!r.color&&(r.color=me.createBuffer()),t=t.getAttributes(),e.hasPositions&&(me.bindBuffer(me.ARRAY_BUFFER,r.position),me.bufferData(me.ARRAY_BUFFER,e.positionArray,me.DYNAMIC_DRAW),ye.enableAttribute(t.position),me.vertexAttribPointer(t.position,3,me.FLOAT,!1,0,0)),e.hasNormals){if(me.bindBuffer(me.ARRAY_BUFFER,r.normal),"MeshPhongMaterial"!==i.type&&"MeshStandardMaterial"!==i.type&&i.shading===THREE.FlatShading)for(var n=0,o=3*e.count;o>n;n+=9){var a=e.normalArray,s=(a[n+0]+a[n+3]+a[n+6])/3,h=(a[n+1]+a[n+4]+a[n+7])/3,c=(a[n+2]+a[n+5]+a[n+8])/3;a[n+0]=s,a[n+1]=h,a[n+2]=c,a[n+3]=s,a[n+4]=h,a[n+5]=c,a[n+6]=s,a[n+7]=h,a[n+8]=c}me.bufferData(me.ARRAY_BUFFER,e.normalArray,me.DYNAMIC_DRAW),ye.enableAttribute(t.normal),me.vertexAttribPointer(t.normal,3,me.FLOAT,!1,0,0)}e.hasUvs&&i.map&&(me.bindBuffer(me.ARRAY_BUFFER,r.uv),me.bufferData(me.ARRAY_BUFFER,e.uvArray,me.DYNAMIC_DRAW),ye.enableAttribute(t.uv),me.vertexAttribPointer(t.uv,2,me.FLOAT,!1,0,0)),e.hasColors&&i.vertexColors!==THREE.NoColors&&(me.bindBuffer(me.ARRAY_BUFFER,r.color),me.bufferData(me.ARRAY_BUFFER,e.colorArray,me.DYNAMIC_DRAW),ye.enableAttribute(t.color),me.vertexAttribPointer(t.color,3,me.FLOAT,!1,0,0)),ye.disableUnusedAttributes(),me.drawArrays(me.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,i,r,n,o){E(r);var a=m(e,t,r,n),s=!1;if(e=i.id+"_"+a.id+"_"+r.wireframe,e!==K&&(K=e,s=!0),t=n.morphTargetInfluences,void 0!==t){e=[];for(var h=0,s=t.length;s>h;h++){var l=t[h];e.push([l,h])}e.sort(c),8<e.length&&(e.length=8);for(var u=i.morphAttributes,h=0,s=e.length;s>h;h++)l=e[h],z[h]=l[0],0!==l[0]?(t=l[1],!0===r.morphTargets&&u.position&&i.addAttribute("morphTarget"+h,u.position[t]),!0===r.morphNormals&&u.normal&&i.addAttribute("morphNormal"+h,u.normal[t])):(!0===r.morphTargets&&i.removeAttribute("morphTarget"+h),!0===r.morphNormals&&i.removeAttribute("morphNormal"+h));e=a.getUniforms(),null!==e.morphTargetInfluences&&me.uniform1fv(e.morphTargetInfluences,z),s=!0}if(t=i.index,h=i.attributes.position,!0===r.wireframe&&(t=xe.getWireframeAttribute(i)),null!==t?(e=be,e.setIndex(t)):e=Me,s){var p,s=void 0;if(!(i instanceof THREE.InstancedBufferGeometry&&(p=ve.get("ANGLE_instanced_arrays"),null===p))){void 0===s&&(s=0),ye.initAttributes();var d,l=i.attributes,a=a.getAttributes(),u=r.defaultAttributeValues;for(d in a){var f=a[d];if(f>=0){var g=l[d];if(void 0!==g){var v=g.itemSize,T=xe.getAttributeBuffer(g);if(g instanceof THREE.InterleavedBufferAttribute){var y=g.data,R=y.stride,g=g.offset;y instanceof THREE.InstancedInterleavedBuffer?(ye.enableAttributeAndDivisor(f,y.meshPerAttribute,p),void 0===i.maxInstancedCount&&(i.maxInstancedCount=y.meshPerAttribute*y.count)):ye.enableAttribute(f),me.bindBuffer(me.ARRAY_BUFFER,T),me.vertexAttribPointer(f,v,me.FLOAT,!1,R*y.array.BYTES_PER_ELEMENT,(s*R+g)*y.array.BYTES_PER_ELEMENT)}else g instanceof THREE.InstancedBufferAttribute?(ye.enableAttributeAndDivisor(f,g.meshPerAttribute,p),void 0===i.maxInstancedCount&&(i.maxInstancedCount=g.meshPerAttribute*g.count)):ye.enableAttribute(f),me.bindBuffer(me.ARRAY_BUFFER,T),me.vertexAttribPointer(f,v,me.FLOAT,!1,0,s*v*4)}else if(void 0!==u&&(v=u[d],void 0!==v))switch(v.length){case 2:me.vertexAttrib2fv(f,v);break;case 3:me.vertexAttrib3fv(f,v);break;case 4:me.vertexAttrib4fv(f,v);break;default:me.vertexAttrib1fv(f,v)}}}ye.disableUnusedAttributes()}null!==t&&me.bindBuffer(me.ELEMENT_ARRAY_BUFFER,xe.getAttributeBuffer(t))}if(p=1/0,null!==t?p=t.count:void 0!==h&&(p=h.count),d=i.drawRange.start,t=i.drawRange.count,h=null!==o?o.start:0,s=null!==o?o.count:1/0,o=Math.max(0,d,h),p=Math.min(0+p,d+t,h+s)-1,p=Math.max(0,p-o+1),n instanceof THREE.Mesh)if(!0===r.wireframe)ye.setLineWidth(r.wireframeLinewidth*(null===q?ae:1)),e.setMode(me.LINES);else switch(n.drawMode){case THREE.TrianglesDrawMode:e.setMode(me.TRIANGLES);break;case THREE.TriangleStripDrawMode:e.setMode(me.TRIANGLE_STRIP);break;case THREE.TriangleFanDrawMode:e.setMode(me.TRIANGLE_FAN)}else n instanceof THREE.Line?(r=r.linewidth,void 0===r&&(r=1),ye.setLineWidth(r*(null===q?ae:1)),n instanceof THREE.LineSegments?e.setMode(me.LINES):e.setMode(me.LINE_STRIP)):n instanceof THREE.Points&&e.setMode(me.POINTS);i instanceof THREE.InstancedBufferGeometry?0<i.maxInstancedCount&&e.renderInstances(i,o,p):e.render(o,p)},this.render=function(e,t,i,r){if(!1==t instanceof THREE.Camera);else{var n=e.fog;K="",Z=-1,Q=null,!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),ue.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),le.setFromMatrix(ue),F.length=0,G=V=-1,k.length=0,j.length=0,d(e,t),N.length=V+1,O.length=G+1,!0===W.sortObjects&&(N.sort(l),O.sort(u));var o,a,s,h,c,p,E=F,m=0,g=0,v=0,T=t.matrixWorldInverse,y=0,R=0,H=0,_=0,M=0;for(o=de.shadowsPointLight=0,a=E.length;a>o;o++)if(s=E[o],h=s.color,c=s.intensity,p=s.distance,s instanceof THREE.AmbientLight)m+=h.r*c,g+=h.g*c,v+=h.b*c;else if(s instanceof THREE.DirectionalLight){var b=_e.get(s);b.color.copy(s.color).multiplyScalar(s.intensity),b.direction.setFromMatrixPosition(s.matrixWorld),pe.setFromMatrixPosition(s.target.matrixWorld),b.direction.sub(pe),b.direction.transformDirection(T),(b.shadow=s.castShadow)&&(b.shadowBias=s.shadow.bias,b.shadowRadius=s.shadow.radius,b.shadowMapSize=s.shadow.mapSize,de.shadows[M++]=s),de.directionalShadowMap[y]=s.shadow.map,de.directionalShadowMatrix[y]=s.shadow.matrix,de.directional[y++]=b}else s instanceof THREE.SpotLight?(b=_e.get(s),b.position.setFromMatrixPosition(s.matrixWorld),b.position.applyMatrix4(T),b.color.copy(h).multiplyScalar(c),b.distance=p,b.direction.setFromMatrixPosition(s.matrixWorld),pe.setFromMatrixPosition(s.target.matrixWorld),b.direction.sub(pe),b.direction.transformDirection(T),b.coneCos=Math.cos(s.angle),b.penumbraCos=Math.cos(s.angle*(1-s.penumbra)),b.decay=0===s.distance?0:s.decay,(b.shadow=s.castShadow)&&(b.shadowBias=s.shadow.bias,b.shadowRadius=s.shadow.radius,b.shadowMapSize=s.shadow.mapSize,de.shadows[M++]=s),de.spotShadowMap[H]=s.shadow.map,de.spotShadowMatrix[H]=s.shadow.matrix,de.spot[H++]=b):s instanceof THREE.PointLight?(b=_e.get(s),b.position.setFromMatrixPosition(s.matrixWorld),b.position.applyMatrix4(T),b.color.copy(s.color).multiplyScalar(s.intensity),b.distance=s.distance,b.decay=0===s.distance?0:s.decay,(b.shadow=s.castShadow)&&(b.shadowBias=s.shadow.bias,b.shadowRadius=s.shadow.radius,b.shadowMapSize=s.shadow.mapSize,de.shadows[M++]=s),de.pointShadowMap[R]=s.shadow.map,void 0===de.pointShadowMatrix[R]&&(de.pointShadowMatrix[R]=new THREE.Matrix4),pe.setFromMatrixPosition(s.matrixWorld).negate(),de.pointShadowMatrix[R].identity().setPosition(pe),de.point[R++]=b):s instanceof THREE.HemisphereLight&&(b=_e.get(s),b.direction.setFromMatrixPosition(s.matrixWorld),b.direction.transformDirection(T),b.direction.normalize(),b.skyColor.copy(s.color).multiplyScalar(c),b.groundColor.copy(s.groundColor).multiplyScalar(c),de.hemi[_++]=b);de.ambient[0]=m,de.ambient[1]=g,de.ambient[2]=v,de.directional.length=y,de.spot.length=H,de.point.length=R,de.hemi.length=_,de.shadows.length=M,de.hash=y+","+R+","+H+","+_+","+M,Se.render(e,t),Ee.calls=0,Ee.vertices=0,Ee.faces=0,Ee.points=0,void 0===i&&(i=null),this.setRenderTarget(i),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),e.overrideMaterial?(r=e.overrideMaterial,f(N,t,n,r),f(O,t,n,r)):(ye.setBlending(THREE.NoBlending),f(N,t,n),f(O,t,n)),we.render(e,t),Ae.render(e,t,ee),i&&(e=i.texture,e.generateMipmaps&&x(i)&&e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter&&(e=i instanceof THREE.WebGLRenderTargetCube?me.TEXTURE_CUBE_MAP:me.TEXTURE_2D,i=Re.get(i.texture).__webglTexture,ye.bindTexture(e,i),me.generateMipmap(e),ye.bindTexture(e,null))),ye.setDepthTest(!0),ye.setDepthWrite(!0),ye.setColorWrite(!0)}},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?ye.disable(me.CULL_FACE):(t===THREE.FrontFaceDirectionCW?me.frontFace(me.CW):me.frontFace(me.CCW),e===THREE.CullFaceBack?me.cullFace(me.BACK):e===THREE.CullFaceFront?me.cullFace(me.FRONT):me.cullFace(me.FRONT_AND_BACK),ye.enable(me.CULL_FACE))},this.setTexture=function(e,t){var i=Re.get(e);if(0<e.version&&i.__version!==e.version){var r=e.image;if(void 0===r);else if(!1===r.complete);else{void 0===i.__webglInit&&(i.__webglInit=!0,e.addEventListener("dispose",o),i.__webglTexture=me.createTexture(),fe.textures++),ye.activeTexture(me.TEXTURE0+t),ye.bindTexture(me.TEXTURE_2D,i.__webglTexture),me.pixelStorei(me.UNPACK_FLIP_Y_WEBGL,e.flipY),me.pixelStorei(me.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),me.pixelStorei(me.UNPACK_ALIGNMENT,e.unpackAlignment);var n=R(e.image,Te.maxTextureSize);if((e.wrapS!==THREE.ClampToEdgeWrapping||e.wrapT!==THREE.ClampToEdgeWrapping||e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter)&&!1===x(n))if(r=n,r instanceof HTMLImageElement||r instanceof HTMLCanvasElement){var a=document.createElement("canvas");a.width=THREE.Math.nearestPowerOfTwo(r.width),a.height=THREE.Math.nearestPowerOfTwo(r.height),a.getContext("2d").drawImage(r,0,0,a.width,a.height),n=a}else n=r;var r=x(n),a=w(e.format),s=w(e.type);y(me.TEXTURE_2D,e,r);var h=e.mipmaps;if(e instanceof THREE.DataTexture)if(0<h.length&&r){for(var c=0,l=h.length;l>c;c++)n=h[c],ye.texImage2D(me.TEXTURE_2D,c,a,n.width,n.height,0,a,s,n.data);e.generateMipmaps=!1}else ye.texImage2D(me.TEXTURE_2D,0,a,n.width,n.height,0,a,s,n.data);else if(e instanceof THREE.CompressedTexture)for(c=0,l=h.length;l>c;c++)n=h[c],e.format!==THREE.RGBAFormat&&e.format!==THREE.RGBFormat?-1<ye.getCompressedTextureFormats().indexOf(a)?ye.compressedTexImage2D(me.TEXTURE_2D,c,a,n.width,n.height,0,n.data):void 0:ye.texImage2D(me.TEXTURE_2D,c,a,n.width,n.height,0,a,s,n.data);else if(0<h.length&&r){for(c=0,l=h.length;l>c;c++)n=h[c],ye.texImage2D(me.TEXTURE_2D,c,a,a,s,n);e.generateMipmaps=!1}else ye.texImage2D(me.TEXTURE_2D,0,a,a,s,n);e.generateMipmaps&&r&&me.generateMipmap(me.TEXTURE_2D),i.__version=e.version,e.onUpdate&&e.onUpdate(e)}}else ye.activeTexture(me.TEXTURE0+t),ye.bindTexture(me.TEXTURE_2D,i.__webglTexture)},this.getCurrentRenderTarget=function(){return q},this.setRenderTarget=function(e){if((q=e)&&void 0===Re.get(e).__webglFramebuffer){var t=Re.get(e),i=Re.get(e.texture);e.addEventListener("dispose",a),i.__webglTexture=me.createTexture(),fe.textures++;var r=e instanceof THREE.WebGLRenderTargetCube,n=THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height);if(r){t.__webglFramebuffer=[];for(var o=0;6>o;o++)t.__webglFramebuffer[o]=me.createFramebuffer()}else t.__webglFramebuffer=me.createFramebuffer();if(r){for(ye.bindTexture(me.TEXTURE_CUBE_MAP,i.__webglTexture),y(me.TEXTURE_CUBE_MAP,e.texture,n),o=0;6>o;o++)M(t.__webglFramebuffer[o],e,me.COLOR_ATTACHMENT0,me.TEXTURE_CUBE_MAP_POSITIVE_X+o);e.texture.generateMipmaps&&n&&me.generateMipmap(me.TEXTURE_CUBE_MAP),ye.bindTexture(me.TEXTURE_CUBE_MAP,null)}else ye.bindTexture(me.TEXTURE_2D,i.__webglTexture),y(me.TEXTURE_2D,e.texture,n),M(t.__webglFramebuffer,e,me.COLOR_ATTACHMENT0,me.TEXTURE_2D),e.texture.generateMipmaps&&n&&me.generateMipmap(me.TEXTURE_2D),ye.bindTexture(me.TEXTURE_2D,null);if(e.depthBuffer){if(t=Re.get(e),e instanceof THREE.WebGLRenderTargetCube)for(t.__webglDepthbuffer=[],i=0;6>i;i++)me.bindFramebuffer(me.FRAMEBUFFER,t.__webglFramebuffer[i]),t.__webglDepthbuffer[i]=me.createRenderbuffer(),b(t.__webglDepthbuffer[i],e);else me.bindFramebuffer(me.FRAMEBUFFER,t.__webglFramebuffer),t.__webglDepthbuffer=me.createRenderbuffer(),b(t.__webglDepthbuffer,e);me.bindFramebuffer(me.FRAMEBUFFER,null)}}t=e instanceof THREE.WebGLRenderTargetCube,e?(i=Re.get(e),i=t?i.__webglFramebuffer[e.activeCubeFace]:i.__webglFramebuffer,J.copy(e.scissor),$=e.scissorTest,ee.copy(e.viewport)):(i=null,J.copy(se).multiplyScalar(ae),$=he,ee.copy(ce).multiplyScalar(ae)),Y!==i&&(me.bindFramebuffer(me.FRAMEBUFFER,i),Y=i),ye.scissor(J),ye.setScissorTest($),ye.viewport(ee),t&&(t=Re.get(e.texture),me.framebufferTexture2D(me.FRAMEBUFFER,me.COLOR_ATTACHMENT0,me.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,t.__webglTexture,e.activeMipMapLevel))},this.readRenderTargetPixels=function(e,t,i,r,n,o){if(!1==e instanceof THREE.WebGLRenderTarget);else{var a=Re.get(e).__webglFramebuffer;if(a){var s=!1;a!==Y&&(me.bindFramebuffer(me.FRAMEBUFFER,a),s=!0);try{var h=e.texture;h.format!==THREE.RGBAFormat&&w(h.format)!==me.getParameter(me.IMPLEMENTATION_COLOR_READ_FORMAT)?void 0:(h.type===THREE.UnsignedByteType||w(h.type)===me.getParameter(me.IMPLEMENTATION_COLOR_READ_TYPE)||h.type===THREE.FloatType&&ve.get("WEBGL_color_buffer_float")||h.type===THREE.HalfFloatType&&ve.get("EXT_color_buffer_half_float"))&&me.checkFramebufferStatus(me.FRAMEBUFFER)===me.FRAMEBUFFER_COMPLETE?me.readPixels(t,i,r,n,w(h.format),w(h.type),o):void 0}finally{s&&me.bindFramebuffer(me.FRAMEBUFFER,Y)}}}}},THREE.WebGLRenderTarget=function(e,t,i){this.uuid=THREE.Math.generateUUID(),this.width=e,this.height=t,this.scissor=new THREE.Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new THREE.Vector4(0,0,e,t),i=i||{},void 0===i.minFilter&&(i.minFilter=THREE.LinearFilter),this.texture=new THREE.Texture(void 0,void 0,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy),this.depthBuffer=void 0!==i.depthBuffer?i.depthBuffer:!0,this.stencilBuffer=void 0!==i.stencilBuffer?i.stencilBuffer:!0},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(e,t,i){THREE.WebGLRenderTarget.call(this,e,t,i),this.activeMipMapLevel=this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.WebGLBufferRenderer=function(e,t,i){var r;this.setMode=function(e){r=e},this.render=function(t,n){e.drawArrays(r,t,n),i.calls++,i.vertices+=n,r===e.TRIANGLES&&(i.faces+=n/3)},this.renderInstances=function(n){var o=t.get("ANGLE_instanced_arrays");if(null===o);else{var a=n.attributes.position,s=0,s=a instanceof THREE.InterleavedBufferAttribute?a.data.count:a.count;o.drawArraysInstancedANGLE(r,0,s,n.maxInstancedCount),i.calls++,i.vertices+=s*n.maxInstancedCount,r===e.TRIANGLES&&(i.faces+=n.maxInstancedCount*s/3)}}},THREE.WebGLIndexedBufferRenderer=function(e,t,i){var r,n,o;this.setMode=function(e){r=e},this.setIndex=function(i){i.array instanceof Uint32Array&&t.get("OES_element_index_uint")?(n=e.UNSIGNED_INT,o=4):(n=e.UNSIGNED_SHORT,o=2)},this.render=function(t,a){e.drawElements(r,a,n,t*o),i.calls++,i.vertices+=a,r===e.TRIANGLES&&(i.faces+=a/3)},this.renderInstances=function(a,s,h){var c=t.get("ANGLE_instanced_arrays");null===c?void 0:(c.drawElementsInstancedANGLE(r,h,n,s*o,a.maxInstancedCount),i.calls++,i.vertices+=h*a.maxInstancedCount,r===e.TRIANGLES&&(i.faces+=a.maxInstancedCount*h/3))}},THREE.WebGLExtensions=function(e){var t={};this.get=function(i){if(void 0!==t[i])return t[i];var r;switch(i){case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":r=e.getExtension("WEBGL_compressed_texture_etc1");break;default:r=e.getExtension(i)}return t[i]=r}},THREE.WebGLCapabilities=function(e,t,i){function r(t){if("highp"===t){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return"highp";t="mediump"}return"mediump"===t&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?"mediump":"lowp"}this.getMaxPrecision=r,this.precision=void 0!==i.precision?i.precision:"highp",this.logarithmicDepthBuffer=void 0!==i.logarithmicDepthBuffer?i.logarithmicDepthBuffer:!1,this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS),this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=0<this.maxVertexTextures,this.floatFragmentTextures=!!t.get("OES_texture_float"),this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures,i=r(this.precision),i!==this.precision&&(this.precision=i),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!t.get("EXT_frag_depth"))},THREE.WebGLGeometries=function(e,t,i){function r(e){var a=e.target;e=o[a.id],null!==e.index&&n(e.index);var s,h=e.attributes;for(s in h)n(h[s]);a.removeEventListener("dispose",r),delete o[a.id],s=t.get(a),s.wireframe&&n(s.wireframe),t["delete"](a),a=t.get(e),a.wireframe&&n(a.wireframe),t["delete"](e),i.memory.geometries--}function n(i){var r;r=i instanceof THREE.InterleavedBufferAttribute?t.get(i.data).__webglBuffer:t.get(i).__webglBuffer,void 0!==r&&(e.deleteBuffer(r),i instanceof THREE.InterleavedBufferAttribute?t["delete"](i.data):t["delete"](i))}var o={};this.get=function(e){var t=e.geometry;if(void 0!==o[t.id])return o[t.id];t.addEventListener("dispose",r);var n;return t instanceof THREE.BufferGeometry?n=t:t instanceof THREE.Geometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new THREE.BufferGeometry).setFromObject(e)),n=t._bufferGeometry),o[t.id]=n,i.memory.geometries++,n}},THREE.WebGLLights=function(){var e={};this.get=function(t){if(void 0!==e[t.id])return e[t.id];var i;switch(t.type){case"DirectionalLight":i={direction:new THREE.Vector3,color:new THREE.Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"SpotLight":i={position:new THREE.Vector3,direction:new THREE.Vector3,color:new THREE.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"PointLight":i={position:new THREE.Vector3,color:new THREE.Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"HemisphereLight":i={direction:new THREE.Vector3,skyColor:new THREE.Color,groundColor:new THREE.Color}}return e[t.id]=i}},THREE.WebGLObjects=function(e,t,i){function r(i,r){var n=i instanceof THREE.InterleavedBufferAttribute?i.data:i,o=t.get(n);void 0===o.__webglBuffer?(o.__webglBuffer=e.createBuffer(),e.bindBuffer(r,o.__webglBuffer),e.bufferData(r,n.array,n.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW),o.version=n.version):o.version!==n.version&&(e.bindBuffer(r,o.__webglBuffer),!1===n.dynamic||-1===n.updateRange.count?e.bufferSubData(r,0,n.array):0===n.updateRange.count?void 0:(e.bufferSubData(r,n.updateRange.offset*n.array.BYTES_PER_ELEMENT,n.array.subarray(n.updateRange.offset,n.updateRange.offset+n.updateRange.count)),n.updateRange.count=0),o.version=n.version)}function n(e,t,i){if(t>i){var r=t;t=i,i=r}return r=e[t],void 0===r?(e[t]=[i],
!0):-1===r.indexOf(i)?(r.push(i),!0):!1}var o=new THREE.WebGLGeometries(e,t,i);this.getAttributeBuffer=function(e){return e instanceof THREE.InterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer},this.getWireframeAttribute=function(i){var o=t.get(i);if(void 0!==o.wireframe)return o.wireframe;var a=[],s=i.index,h=i.attributes;if(i=h.position,null!==s)for(var h={},s=s.array,c=0,l=s.length;l>c;c+=3){var u=s[c+0],p=s[c+1],d=s[c+2];n(h,u,p)&&a.push(u,p),n(h,p,d)&&a.push(p,d),n(h,d,u)&&a.push(d,u)}else for(s=h.position.array,c=0,l=s.length/3-1;l>c;c+=3)u=c+0,p=c+1,d=c+2,a.push(u,p,p,d,d,u);return a=new THREE.BufferAttribute(new(65535<i.count?Uint32Array:Uint16Array)(a),1),r(a,e.ELEMENT_ARRAY_BUFFER),o.wireframe=a},this.update=function(t){var i=o.get(t);t.geometry instanceof THREE.Geometry&&i.updateFromObject(t),t=i.index;var n=i.attributes;null!==t&&r(t,e.ELEMENT_ARRAY_BUFFER);for(var a in n)r(n[a],e.ARRAY_BUFFER);t=i.morphAttributes;for(a in t)for(var n=t[a],s=0,h=n.length;h>s;s++)r(n[s],e.ARRAY_BUFFER);return i}},THREE.WebGLProgram=function(){function e(e){switch(e){case THREE.LinearEncoding:return["Linear","( value )"];case THREE.sRGBEncoding:return["sRGB","( value )"];case THREE.RGBEEncoding:return["RGBE","( value )"];case THREE.RGBM7Encoding:return["RGBM","( value, 7.0 )"];case THREE.RGBM16Encoding:return["RGBM","( value, 16.0 )"];case THREE.RGBDEncoding:return["RGBD","( value, 256.0 )"];case THREE.GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw Error("unsupported encoding: "+e)}}function t(t,i){var r=e(i);return"vec4 "+t+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function i(t,i){var r=e(i);return"vec4 "+t+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function r(e,t){var i;switch(t){case THREE.LinearToneMapping:i="Linear";break;case THREE.ReinhardToneMapping:i="Reinhard";break;case THREE.Uncharted2ToneMapping:i="Uncharted2";break;case THREE.CineonToneMapping:i="OptimizedCineon";break;default:throw Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+i+"ToneMapping( color ); }"}function n(e,t,i){return e=e||{},[e.derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&i.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&i.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&i.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""].filter(a).join("\n")}function o(e){var t,i=[];for(t in e){var r=e[t];!1!==r&&i.push("#define "+t+" "+r)}return i.join("\n")}function a(e){return""!==e}function s(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function h(e){return e.replace(/#include +<([\w\d.]+)>/g,function(e,t){var i=THREE.ShaderChunk[t];if(void 0===i)throw Error("Can not resolve #include <"+t+">");return h(i)})}function c(e){return e.replace(/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,function(e,t,i,r){for(e="",t=parseInt(t);t<parseInt(i);t++)e+=r.replace(/\[ i \]/g,"[ "+t+" ]");return e})}var l=0,u=/^([\w\d_]+)\.([\w\d_]+)$/,p=/^([\w\d_]+)\[(\d+)\]\.([\w\d_]+)$/,d=/^([\w\d_]+)\[0\]$/;return function(e,f,E,m){var g=e.context,v=E.extensions,T=E.defines,y=E.__webglShader.vertexShader,R=E.__webglShader.fragmentShader,x="SHADOWMAP_TYPE_BASIC";m.shadowMapType===THREE.PCFShadowMap?x="SHADOWMAP_TYPE_PCF":m.shadowMapType===THREE.PCFSoftShadowMap&&(x="SHADOWMAP_TYPE_PCF_SOFT");var H="ENVMAP_TYPE_CUBE",_="ENVMAP_MODE_REFLECTION",M="ENVMAP_BLENDING_MULTIPLY";if(m.envMap){switch(E.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:H="ENVMAP_TYPE_CUBE";break;case THREE.CubeUVReflectionMapping:case THREE.CubeUVRefractionMapping:H="ENVMAP_TYPE_CUBE_UV";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:H="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:H="ENVMAP_TYPE_SPHERE"}switch(E.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:_="ENVMAP_MODE_REFRACTION"}switch(E.combine){case THREE.MultiplyOperation:M="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:M="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:M="ENVMAP_BLENDING_ADD"}}var b=0<e.gammaFactor?e.gammaFactor:1,v=n(v,m,e.extensions),S=o(T),w=g.createProgram();E instanceof THREE.RawShaderMaterial?e=T="":(T=["precision "+m.precision+" float;","precision "+m.precision+" int;","#define SHADER_NAME "+E.__webglShader.name,S,m.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+b,"#define MAX_BONES "+m.maxBones,m.map?"#define USE_MAP":"",m.envMap?"#define USE_ENVMAP":"",m.envMap?"#define "+_:"",m.lightMap?"#define USE_LIGHTMAP":"",m.aoMap?"#define USE_AOMAP":"",m.emissiveMap?"#define USE_EMISSIVEMAP":"",m.bumpMap?"#define USE_BUMPMAP":"",m.normalMap?"#define USE_NORMALMAP":"",m.displacementMap&&m.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",m.specularMap?"#define USE_SPECULARMAP":"",m.roughnessMap?"#define USE_ROUGHNESSMAP":"",m.metalnessMap?"#define USE_METALNESSMAP":"",m.alphaMap?"#define USE_ALPHAMAP":"",m.vertexColors?"#define USE_COLOR":"",m.flatShading?"#define FLAT_SHADED":"",m.skinning?"#define USE_SKINNING":"",m.useVertexTexture?"#define BONE_TEXTURE":"",m.morphTargets?"#define USE_MORPHTARGETS":"",m.morphNormals&&!1===m.flatShading?"#define USE_MORPHNORMALS":"",m.doubleSided?"#define DOUBLE_SIDED":"",m.flipSided?"#define FLIP_SIDED":"",m.shadowMapEnabled?"#define USE_SHADOWMAP":"",m.shadowMapEnabled?"#define "+x:"",0<m.pointLightShadows?"#define POINT_LIGHT_SHADOWS":"",m.sizeAttenuation?"#define USE_SIZEATTENUATION":"",m.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",m.logarithmicDepthBuffer&&e.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(a).join("\n"),e=[v,"precision "+m.precision+" float;","precision "+m.precision+" int;","#define SHADER_NAME "+E.__webglShader.name,S,m.alphaTest?"#define ALPHATEST "+m.alphaTest:"","#define GAMMA_FACTOR "+b,m.useFog&&m.fog?"#define USE_FOG":"",m.useFog&&m.fogExp?"#define FOG_EXP2":"",m.map?"#define USE_MAP":"",m.envMap?"#define USE_ENVMAP":"",m.envMap?"#define "+H:"",m.envMap?"#define "+_:"",m.envMap?"#define "+M:"",m.lightMap?"#define USE_LIGHTMAP":"",m.aoMap?"#define USE_AOMAP":"",m.emissiveMap?"#define USE_EMISSIVEMAP":"",m.bumpMap?"#define USE_BUMPMAP":"",m.normalMap?"#define USE_NORMALMAP":"",m.specularMap?"#define USE_SPECULARMAP":"",m.roughnessMap?"#define USE_ROUGHNESSMAP":"",m.metalnessMap?"#define USE_METALNESSMAP":"",m.alphaMap?"#define USE_ALPHAMAP":"",m.vertexColors?"#define USE_COLOR":"",m.flatShading?"#define FLAT_SHADED":"",m.doubleSided?"#define DOUBLE_SIDED":"",m.flipSided?"#define FLIP_SIDED":"",m.shadowMapEnabled?"#define USE_SHADOWMAP":"",m.shadowMapEnabled?"#define "+x:"",0<m.pointLightShadows?"#define POINT_LIGHT_SHADOWS":"",m.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",m.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",m.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",m.logarithmicDepthBuffer&&e.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",m.envMap&&e.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",m.toneMapping!==THREE.NoToneMapping?"#define TONE_MAPPING":"",m.toneMapping!==THREE.NoToneMapping?THREE.ShaderChunk.tonemapping_pars_fragment:"",m.toneMapping!==THREE.NoToneMapping?r("toneMapping",m.toneMapping):"",m.outputEncoding||m.mapEncoding||m.envMapEncoding||m.emissiveMapEncoding?THREE.ShaderChunk.encodings_pars_fragment:"",m.mapEncoding?t("mapTexelToLinear",m.mapEncoding):"",m.envMapEncoding?t("envMapTexelToLinear",m.envMapEncoding):"",m.emissiveMapEncoding?t("emissiveMapTexelToLinear",m.emissiveMapEncoding):"",m.outputEncoding?i("linearToOutputTexel",m.outputEncoding):"","\n"].filter(a).join("\n")),y=h(y,m),y=s(y,m),R=h(R,m),R=s(R,m),!1==E instanceof THREE.ShaderMaterial&&(y=c(y),R=c(R)),R=e+R,y=THREE.WebGLShader(g,g.VERTEX_SHADER,T+y),R=THREE.WebGLShader(g,g.FRAGMENT_SHADER,R),g.attachShader(w,y),g.attachShader(w,R),void 0!==E.index0AttributeName?g.bindAttribLocation(w,0,E.index0AttributeName):!0===m.morphTargets&&g.bindAttribLocation(w,0,"position"),g.linkProgram(w),m=g.getProgramInfoLog(w),x=g.getShaderInfoLog(y),H=g.getShaderInfoLog(R),M=_=!0,!1===g.getProgramParameter(w,g.LINK_STATUS)?void(_=!1):""!==m||(""===x||""===H)&&(M=!1),M&&(this.diagnostics={runnable:_,material:E,programLog:m,vertexShader:{log:x,prefix:T},fragmentShader:{log:H,prefix:e}}),g.deleteShader(y),g.deleteShader(R);var A;this.getUniforms=function(){if(void 0===A){for(var e={},t=g.getProgramParameter(w,g.ACTIVE_UNIFORMS),i=0;t>i;i++){var r=g.getActiveUniform(w,i).name,n=g.getUniformLocation(w,r),o=u.exec(r);if(o){var r=o[1],o=o[2],a=e[r];a||(a=e[r]={}),a[o]=n}else if(o=p.exec(r)){var a=o[1],r=o[2],o=o[3],s=e[a];s||(s=e[a]=[]),(a=s[r])||(a=s[r]={}),a[o]=n}else(o=d.exec(r))?(a=o[1],e[a]=n):e[r]=n}A=e}return A};var L;return this.getAttributes=function(){if(void 0===L){for(var e={},t=g.getProgramParameter(w,g.ACTIVE_ATTRIBUTES),i=0;t>i;i++){var r=g.getActiveAttrib(w,i).name;e[r]=g.getAttribLocation(w,r)}L=e}return L},this.destroy=function(){g.deleteProgram(w),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return this.getUniforms()}},attributes:{get:function(){return this.getAttributes()}}}),this.id=l++,this.code=f,this.usedTimes=1,this.program=w,this.vertexShader=y,this.fragmentShader=R,this}}(),THREE.WebGLPrograms=function(e,t){function i(e,t){var i;return e?e instanceof THREE.Texture?i=e.encoding:e instanceof THREE.WebGLRenderTarget&&(i=e.texture.encoding):i=THREE.LinearEncoding,i===THREE.LinearEncoding&&t&&(i=THREE.GammaEncoding),i}var r=[],n={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshStandardMaterial:"standard",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},o="precision supportsVertexTextures map mapEncoding envMap envMapMode envMapEncoding lightMap aoMap emissiveMap emissiveMapEncoding bumpMap normalMap displacementMap specularMap roughnessMap metalnessMap alphaMap combine vertexColors fog useFog fogExp flatShading sizeAttenuation logarithmicDepthBuffer skinning maxBones useVertexTexture morphTargets morphNormals maxMorphTargets maxMorphNormals premultipliedAlpha numDirLights numPointLights numSpotLights numHemiLights shadowMapEnabled pointLightShadows toneMapping physicallyCorrectLights shadowMapType alphaTest doubleSided flipSided".split(" ");this.getParameters=function(r,o,a,s){var h,c=n[r.type];t.floatVertexTextures&&s&&s.skeleton&&s.skeleton.useVertexTexture?h=1024:(h=Math.floor((t.maxVertexUniforms-20)/4),void 0!==s&&s instanceof THREE.SkinnedMesh&&(h=Math.min(s.skeleton.bones.length,h),h<s.skeleton.bones.length&&void 0));var l=e.getPrecision();return null!==r.precision&&(l=t.getMaxPrecision(r.precision),l!==r.precision&&void 0),{shaderID:c,precision:l,supportsVertexTextures:t.vertexTextures,outputEncoding:i(e.getCurrentRenderTarget(),e.gammaOutput),map:!!r.map,mapEncoding:i(r.map,e.gammaInput),envMap:!!r.envMap,envMapMode:r.envMap&&r.envMap.mapping,envMapEncoding:i(r.envMap,e.gammaInput),envMapCubeUV:!!r.envMap&&(r.envMap.mapping===THREE.CubeUVReflectionMapping||r.envMap.mapping===THREE.CubeUVRefractionMapping),lightMap:!!r.lightMap,aoMap:!!r.aoMap,emissiveMap:!!r.emissiveMap,emissiveMapEncoding:i(r.emissiveMap,e.gammaInput),bumpMap:!!r.bumpMap,normalMap:!!r.normalMap,displacementMap:!!r.displacementMap,roughnessMap:!!r.roughnessMap,metalnessMap:!!r.metalnessMap,specularMap:!!r.specularMap,alphaMap:!!r.alphaMap,combine:r.combine,vertexColors:r.vertexColors,fog:a,useFog:r.fog,fogExp:a instanceof THREE.FogExp2,flatShading:r.shading===THREE.FlatShading,sizeAttenuation:r.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:r.skinning,maxBones:h,useVertexTexture:t.floatVertexTextures&&s&&s.skeleton&&s.skeleton.useVertexTexture,morphTargets:r.morphTargets,morphNormals:r.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numHemiLights:o.hemi.length,pointLightShadows:o.shadowsPointLight,shadowMapEnabled:e.shadowMap.enabled&&s.receiveShadow&&0<o.shadows.length,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:r.premultipliedAlpha,alphaTest:r.alphaTest,doubleSided:r.side===THREE.DoubleSide,flipSided:r.side===THREE.BackSide}},this.getProgramCode=function(e,t){var i=[];if(t.shaderID?i.push(t.shaderID):(i.push(e.fragmentShader),i.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)i.push(r),i.push(e.defines[r]);for(r=0;r<o.length;r++){var n=o[r];i.push(n),i.push(t[n])}return i.join()},this.acquireProgram=function(t,i,n){for(var o,a=0,s=r.length;s>a;a++){var h=r[a];if(h.code===n){o=h,++o.usedTimes;break}}return void 0===o&&(o=new THREE.WebGLProgram(e,n,t,i),r.push(o)),o},this.releaseProgram=function(e){if(0===--e.usedTimes){var t=r.indexOf(e);r[t]=r[r.length-1],r.pop(),e.destroy()}},this.programs=r},THREE.WebGLProperties=function(){var e={};this.get=function(t){t=t.uuid;var i=e[t];return void 0===i&&(i={},e[t]=i),i},this["delete"]=function(t){delete e[t.uuid]},this.clear=function(){e={}}},THREE.WebGLShader=function(){return function(e,t,i){var r=e.createShader(t);return e.shaderSource(r,i),e.compileShader(r),!1===e.getShaderParameter(r,e.COMPILE_STATUS)&&void 0,""!==e.getShaderInfoLog(r)&&void 0,r}}(),THREE.WebGLShadowMap=function(e,t,i){function r(e,t,i,r){var n=e.geometry,o=null,o=d,a=e.customDepthMaterial;return i&&(o=f,a=e.customDistanceMaterial),a?o=a:(e=e instanceof THREE.SkinnedMesh&&t.skinning,a=0,void 0!==n.morphTargets&&0<n.morphTargets.length&&t.morphTargets&&(a|=1),e&&(a|=2),o=o[a]),o.visible=t.visible,o.wireframe=t.wireframe,o.wireframeLinewidth=t.wireframeLinewidth,i&&void 0!==o.uniforms.lightPos&&o.uniforms.lightPos.value.copy(r),o}function n(e,t,i){if(!1!==e.visible){e.layers.test(t.layers)&&(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Points)&&e.castShadow&&(!1===e.frustumCulled||!0===s.intersectsObject(e))&&!0===e.material.visible&&(e.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,e.matrixWorld),p.push(e)),e=e.children;for(var r=0,o=e.length;o>r;r++)n(e[r],t,i)}}for(var o=e.context,a=e.state,s=new THREE.Frustum,h=new THREE.Matrix4,c=new THREE.Vector2,l=new THREE.Vector3,u=new THREE.Vector3,p=[],d=Array(4),f=Array(4),E=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)],m=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],g=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],v=THREE.ShaderLib.depthRGBA,T=THREE.UniformsUtils.clone(v.uniforms),y=THREE.ShaderLib.distanceRGBA,R=THREE.UniformsUtils.clone(y.uniforms),x=0;4!==x;++x){var H=0!==(1&x),_=0!==(2&x),M=new THREE.ShaderMaterial({uniforms:T,vertexShader:v.vertexShader,fragmentShader:v.fragmentShader,morphTargets:H,skinning:_});d[x]=M,H=new THREE.ShaderMaterial({defines:{USE_SHADOWMAP:""},uniforms:R,vertexShader:y.vertexShader,fragmentShader:y.fragmentShader,morphTargets:H,skinning:_}),f[x]=H}var b=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=THREE.PCFShadowMap,this.cullFace=THREE.CullFaceFront,this.render=function(d,f){var v,T,y=t.shadows;if(0!==y.length&&!1!==b.enabled&&(!1!==b.autoUpdate||!1!==b.needsUpdate)){a.clearColor(1,1,1,1),a.disable(o.BLEND),a.enable(o.CULL_FACE),o.frontFace(o.CCW),o.cullFace(b.cullFace===THREE.CullFaceFront?o.FRONT:o.BACK),a.setDepthTest(!0),a.setScissorTest(!1);for(var R=0,x=y.length;x>R;R++){var H=y[R],_=H.shadow,M=_.camera;if(c.copy(_.mapSize),H instanceof THREE.PointLight){v=6,T=!0;var S=c.x,w=c.y;g[0].set(2*S,w,S,w),g[1].set(0,w,S,w),g[2].set(3*S,w,S,w),g[3].set(S,w,S,w),g[4].set(3*S,0,S,w),g[5].set(S,0,S,w),c.x*=4,c.y*=2}else v=1,T=!1;for(null===_.map&&(_.map=new THREE.WebGLRenderTarget(c.x,c.y,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat}),H instanceof THREE.SpotLight&&(M.aspect=c.x/c.y),M.updateProjectionMatrix()),S=_.map,_=_.matrix,u.setFromMatrixPosition(H.matrixWorld),M.position.copy(u),e.setRenderTarget(S),e.clear(),S=0;v>S;S++){T?(l.copy(M.position),l.add(E[S]),M.up.copy(m[S]),M.lookAt(l),a.viewport(g[S])):(l.setFromMatrixPosition(H.target.matrixWorld),M.lookAt(l)),M.updateMatrixWorld(),M.matrixWorldInverse.getInverse(M.matrixWorld),_.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),_.multiply(M.projectionMatrix),_.multiply(M.matrixWorldInverse),h.multiplyMatrices(M.projectionMatrix,M.matrixWorldInverse),s.setFromMatrix(h),p.length=0,n(d,f,M);for(var w=0,A=p.length;A>w;w++){var L=p[w],C=i.update(L),P=L.material;if(P instanceof THREE.MultiMaterial)for(var D=C.groups,P=P.materials,B=0,I=D.length;I>B;B++){var U=D[B],F=P[U.materialIndex];!0===F.visible&&(F=r(L,F,T,u),e.renderBufferDirect(M,null,C,F,L,U))}else F=r(L,P,T,u),e.renderBufferDirect(M,null,C,F,L,null)}}}v=e.getClearColor(),T=e.getClearAlpha(),e.setClearColor(v,T),a.enable(o.BLEND),b.cullFace===THREE.CullFaceFront&&o.cullFace(o.BACK),b.needsUpdate=!1}}},THREE.WebGLState=function(e,t,i){var r=this,n=new THREE.Vector4,o=new Uint8Array(16),a=new Uint8Array(16),s=new Uint8Array(16),h={},c=null,l=null,u=null,p=null,d=null,f=null,E=null,m=null,g=!1,v=null,T=null,y=null,R=null,x=null,H=null,_=null,M=null,b=null,S=null,w=null,A=null,L=null,C=null,P=null,D=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),B=void 0,I={},U=new THREE.Vector4,F=null,N=null,V=new THREE.Vector4,O=new THREE.Vector4,G=e.createTexture();e.bindTexture(e.TEXTURE_2D,G),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),e.texImage2D(e.TEXTURE_2D,0,e.RGB,1,1,0,e.RGB,e.UNSIGNED_BYTE,new Uint8Array(3)),this.init=function(){this.clearColor(0,0,0,1),this.clearDepth(1),this.clearStencil(0),this.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.frontFace(e.CCW),e.cullFace(e.BACK),this.enable(e.CULL_FACE),this.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA)},this.initAttributes=function(){for(var e=0,t=o.length;t>e;e++)o[e]=0},this.enableAttribute=function(i){o[i]=1,0===a[i]&&(e.enableVertexAttribArray(i),a[i]=1),0!==s[i]&&(t.get("ANGLE_instanced_arrays").vertexAttribDivisorANGLE(i,0),s[i]=0)},this.enableAttributeAndDivisor=function(t,i,r){o[t]=1,0===a[t]&&(e.enableVertexAttribArray(t),a[t]=1),s[t]!==i&&(r.vertexAttribDivisorANGLE(t,i),s[t]=i)},this.disableUnusedAttributes=function(){for(var t=0,i=a.length;i>t;t++)a[t]!==o[t]&&(e.disableVertexAttribArray(t),a[t]=0)},this.enable=function(t){!0!==h[t]&&(e.enable(t),h[t]=!0)},this.disable=function(t){!1!==h[t]&&(e.disable(t),h[t]=!1)},this.getCompressedTextureFormats=function(){if(null===c&&(c=[],t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")||t.get("WEBGL_compressed_texture_etc1")))for(var i=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),r=0;r<i.length;r++)c.push(i[r]);return c},this.setBlending=function(t,r,n,o,a,s,h,c){t===THREE.NoBlending?this.disable(e.BLEND):this.enable(e.BLEND),(t!==l||c!==g)&&(t===THREE.AdditiveBlending?c?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):t===THREE.SubtractiveBlending?c?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):t===THREE.MultiplyBlending?c?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.SRC_COLOR,e.SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):c?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),l=t,g=c),t===THREE.CustomBlending?(a=a||r,s=s||n,h=h||o,(r!==u||a!==f)&&(e.blendEquationSeparate(i(r),i(a)),u=r,f=a),(n!==p||o!==d||s!==E||h!==m)&&(e.blendFuncSeparate(i(n),i(o),i(s),i(h)),p=n,d=o,E=s,m=h)):m=E=f=d=p=u=null},this.setDepthFunc=function(t){if(v!==t){if(t)switch(t){case THREE.NeverDepth:e.depthFunc(e.NEVER);break;case THREE.AlwaysDepth:e.depthFunc(e.ALWAYS);break;case THREE.LessDepth:e.depthFunc(e.LESS);break;case THREE.LessEqualDepth:e.depthFunc(e.LEQUAL);break;case THREE.EqualDepth:e.depthFunc(e.EQUAL);break;case THREE.GreaterEqualDepth:e.depthFunc(e.GEQUAL);break;case THREE.GreaterDepth:e.depthFunc(e.GREATER);break;case THREE.NotEqualDepth:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);v=t}},this.setDepthTest=function(t){t?this.enable(e.DEPTH_TEST):this.disable(e.DEPTH_TEST)},this.setDepthWrite=function(t){T!==t&&(e.depthMask(t),T=t)},this.setColorWrite=function(t){y!==t&&(e.colorMask(t,t,t,t),y=t)},this.setStencilFunc=function(t,i,r){(x!==t||H!==i||_!==r)&&(e.stencilFunc(t,i,r),x=t,H=i,_=r)},this.setStencilOp=function(t,i,r){(M!==t||b!==i||S!==r)&&(e.stencilOp(t,i,r),M=t,b=i,S=r)},this.setStencilTest=function(t){t?this.enable(e.STENCIL_TEST):this.disable(e.STENCIL_TEST)},this.setStencilWrite=function(t){R!==t&&(e.stencilMask(t),R=t)},this.setFlipSided=function(t){w!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),w=t)},this.setLineWidth=function(t){t!==A&&(e.lineWidth(t),A=t)},this.setPolygonOffset=function(t,i,r){t?this.enable(e.POLYGON_OFFSET_FILL):this.disable(e.POLYGON_OFFSET_FILL),!t||L===i&&C===r||(e.polygonOffset(i,r),L=i,C=r)},this.getScissorTest=function(){return P},this.setScissorTest=function(t){(P=t)?this.enable(e.SCISSOR_TEST):this.disable(e.SCISSOR_TEST)},this.activeTexture=function(t){void 0===t&&(t=e.TEXTURE0+D-1),B!==t&&(e.activeTexture(t),B=t)},this.bindTexture=function(t,i){void 0===B&&r.activeTexture();var n=I[B];void 0===n&&(n={type:void 0,texture:void 0},I[B]=n),(n.type!==t||n.texture!==i)&&(e.bindTexture(t,i||G),n.type=t,n.texture=i)},this.compressedTexImage2D=function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){}},this.texImage2D=function(){try{e.texImage2D.apply(e,arguments)}catch(t){}},this.clearColor=function(t,i,r,o){n.set(t,i,r,o),!1===U.equals(n)&&(e.clearColor(t,i,r,o),U.copy(n))},this.clearDepth=function(t){F!==t&&(e.clearDepth(t),F=t)},this.clearStencil=function(t){N!==t&&(e.clearStencil(t),N=t)},this.scissor=function(t){!1===V.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),V.copy(t))},this.viewport=function(t){!1===O.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),O.copy(t))},this.reset=function(){for(var t=0;t<a.length;t++)1===a[t]&&(e.disableVertexAttribArray(t),a[t]=0);h={},c=null,B=void 0,I={},w=R=T=y=l=null}},THREE.LensFlarePlugin=function(e,t){var i,r,n,o,a,s,h,c,l,u,p,d,f,E,m,g,v=e.context,T=e.state;this.render=function(y,R,x){if(0!==t.length){y=new THREE.Vector3;var H=x.w/x.z,_=.5*x.z,M=.5*x.w,b=16/x.w,S=new THREE.Vector2(b*H,b),w=new THREE.Vector3(1,1,0),A=new THREE.Vector2(1,1);if(void 0===f){var b=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),L=new Uint16Array([0,1,2,0,2,3]);p=v.createBuffer(),d=v.createBuffer(),v.bindBuffer(v.ARRAY_BUFFER,p),v.bufferData(v.ARRAY_BUFFER,b,v.STATIC_DRAW),v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,d),v.bufferData(v.ELEMENT_ARRAY_BUFFER,L,v.STATIC_DRAW),m=v.createTexture(),g=v.createTexture(),T.bindTexture(v.TEXTURE_2D,m),v.texImage2D(v.TEXTURE_2D,0,v.RGB,16,16,0,v.RGB,v.UNSIGNED_BYTE,null),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,v.NEAREST),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,v.NEAREST),T.bindTexture(v.TEXTURE_2D,g),v.texImage2D(v.TEXTURE_2D,0,v.RGBA,16,16,0,v.RGBA,v.UNSIGNED_BYTE,null),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,v.NEAREST),v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,v.NEAREST);var b=(E=0<v.getParameter(v.MAX_VERTEX_TEXTURE_IMAGE_UNITS))?{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility =        visibility.r / 9.0;\nvVisibility *= 1.0 - visibility.g / 9.0;\nvVisibility *=       visibility.b / 9.0;\nvVisibility *= 1.0 - visibility.a / 9.0;\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif ( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif ( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if ( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\nvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},L=v.createProgram(),C=v.createShader(v.FRAGMENT_SHADER),P=v.createShader(v.VERTEX_SHADER),D="precision "+e.getPrecision()+" float;\n";v.shaderSource(C,D+b.fragmentShader),v.shaderSource(P,D+b.vertexShader),v.compileShader(C),v.compileShader(P),v.attachShader(L,C),v.attachShader(L,P),v.linkProgram(L),f=L,l=v.getAttribLocation(f,"position"),u=v.getAttribLocation(f,"uv"),i=v.getUniformLocation(f,"renderType"),r=v.getUniformLocation(f,"map"),n=v.getUniformLocation(f,"occlusionMap"),o=v.getUniformLocation(f,"opacity"),a=v.getUniformLocation(f,"color"),s=v.getUniformLocation(f,"scale"),h=v.getUniformLocation(f,"rotation"),c=v.getUniformLocation(f,"screenPosition")}for(v.useProgram(f),T.initAttributes(),T.enableAttribute(l),T.enableAttribute(u),T.disableUnusedAttributes(),v.uniform1i(n,0),v.uniform1i(r,1),v.bindBuffer(v.ARRAY_BUFFER,p),v.vertexAttribPointer(l,2,v.FLOAT,!1,16,0),v.vertexAttribPointer(u,2,v.FLOAT,!1,16,8),v.bindBuffer(v.ELEMENT_ARRAY_BUFFER,d),T.disable(v.CULL_FACE),T.setDepthWrite(!1),L=0,C=t.length;C>L;L++)if(b=16/x.w,S.set(b*H,b),P=t[L],y.set(P.matrixWorld.elements[12],P.matrixWorld.elements[13],P.matrixWorld.elements[14]),y.applyMatrix4(R.matrixWorldInverse),y.applyProjection(R.projectionMatrix),w.copy(y),A.x=w.x*_+_,A.y=w.y*M+M,E||0<A.x&&A.x<x.z&&0<A.y&&A.y<x.w){T.activeTexture(v.TEXTURE0),T.bindTexture(v.TEXTURE_2D,null),T.activeTexture(v.TEXTURE1),T.bindTexture(v.TEXTURE_2D,m),v.copyTexImage2D(v.TEXTURE_2D,0,v.RGB,x.x+A.x-8,x.y+A.y-8,16,16,0),v.uniform1i(i,0),v.uniform2f(s,S.x,S.y),v.uniform3f(c,w.x,w.y,w.z),T.disable(v.BLEND),T.enable(v.DEPTH_TEST),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0),T.activeTexture(v.TEXTURE0),T.bindTexture(v.TEXTURE_2D,g),v.copyTexImage2D(v.TEXTURE_2D,0,v.RGBA,x.x+A.x-8,x.y+A.y-8,16,16,0),v.uniform1i(i,1),T.disable(v.DEPTH_TEST),T.activeTexture(v.TEXTURE1),T.bindTexture(v.TEXTURE_2D,m),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0),P.positionScreen.copy(w),P.customUpdateCallback?P.customUpdateCallback(P):P.updateLensFlares(),v.uniform1i(i,2),T.enable(v.BLEND);for(var D=0,B=P.lensFlares.length;B>D;D++){var I=P.lensFlares[D];.001<I.opacity&&.001<I.scale&&(w.x=I.x,w.y=I.y,w.z=I.z,b=I.size*I.scale/x.w,S.x=b*H,S.y=b,v.uniform3f(c,w.x,w.y,w.z),v.uniform2f(s,S.x,S.y),v.uniform1f(h,I.rotation),v.uniform1f(o,I.opacity),v.uniform3f(a,I.color.r,I.color.g,I.color.b),T.setBlending(I.blending,I.blendEquation,I.blendSrc,I.blendDst),e.setTexture(I.texture,1),v.drawElements(v.TRIANGLES,6,v.UNSIGNED_SHORT,0))}}T.enable(v.CULL_FACE),T.enable(v.DEPTH_TEST),T.setDepthWrite(!0),e.resetGLState()}}},THREE.SpritePlugin=function(e,t){function i(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:t.id-e.id}var r,n,o,a,s,h,c,l,u,p,d,f,E,m,g,v,T,y,R,x,H,_=e.context,M=e.state,b=new THREE.Vector3,S=new THREE.Quaternion,w=new THREE.Vector3;this.render=function(A,L){if(0!==t.length){if(void 0===x){var C=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),P=new Uint16Array([0,1,2,0,2,3]);y=_.createBuffer(),R=_.createBuffer(),_.bindBuffer(_.ARRAY_BUFFER,y),_.bufferData(_.ARRAY_BUFFER,C,_.STATIC_DRAW),_.bindBuffer(_.ELEMENT_ARRAY_BUFFER,R),_.bufferData(_.ELEMENT_ARRAY_BUFFER,P,_.STATIC_DRAW);var C=_.createProgram(),P=_.createShader(_.VERTEX_SHADER),D=_.createShader(_.FRAGMENT_SHADER);_.shaderSource(P,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position * scale;\nvec2 rotatedPosition;\nrotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\nrotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\nvec4 finalPosition;\nfinalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition;\nfinalPosition = projectionMatrix * finalPosition;\ngl_Position = finalPosition;\n}"].join("\n")),
_.shaderSource(D,["precision "+e.getPrecision()+" float;","uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"].join("\n")),_.compileShader(P),_.compileShader(D),_.attachShader(C,P),_.attachShader(C,D),_.linkProgram(C),x=C,v=_.getAttribLocation(x,"position"),T=_.getAttribLocation(x,"uv"),r=_.getUniformLocation(x,"uvOffset"),n=_.getUniformLocation(x,"uvScale"),o=_.getUniformLocation(x,"rotation"),a=_.getUniformLocation(x,"scale"),s=_.getUniformLocation(x,"color"),h=_.getUniformLocation(x,"map"),c=_.getUniformLocation(x,"opacity"),l=_.getUniformLocation(x,"modelViewMatrix"),u=_.getUniformLocation(x,"projectionMatrix"),p=_.getUniformLocation(x,"fogType"),d=_.getUniformLocation(x,"fogDensity"),f=_.getUniformLocation(x,"fogNear"),E=_.getUniformLocation(x,"fogFar"),m=_.getUniformLocation(x,"fogColor"),g=_.getUniformLocation(x,"alphaTest"),C=document.createElement("canvas"),C.width=8,C.height=8,P=C.getContext("2d"),P.fillStyle="white",P.fillRect(0,0,8,8),H=new THREE.Texture(C),H.needsUpdate=!0}_.useProgram(x),M.initAttributes(),M.enableAttribute(v),M.enableAttribute(T),M.disableUnusedAttributes(),M.disable(_.CULL_FACE),M.enable(_.BLEND),_.bindBuffer(_.ARRAY_BUFFER,y),_.vertexAttribPointer(v,2,_.FLOAT,!1,16,0),_.vertexAttribPointer(T,2,_.FLOAT,!1,16,8),_.bindBuffer(_.ELEMENT_ARRAY_BUFFER,R),_.uniformMatrix4fv(u,!1,L.projectionMatrix.elements),M.activeTexture(_.TEXTURE0),_.uniform1i(h,0),P=C=0,(D=A.fog)?(_.uniform3f(m,D.color.r,D.color.g,D.color.b),D instanceof THREE.Fog?(_.uniform1f(f,D.near),_.uniform1f(E,D.far),_.uniform1i(p,1),P=C=1):D instanceof THREE.FogExp2&&(_.uniform1f(d,D.density),_.uniform1i(p,2),P=C=2)):(_.uniform1i(p,0),P=C=0);for(var D=0,B=t.length;B>D;D++){var I=t[D];I.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,I.matrixWorld),I.z=-I.modelViewMatrix.elements[14]}t.sort(i);for(var U=[],D=0,B=t.length;B>D;D++){var I=t[D],F=I.material;_.uniform1f(g,F.alphaTest),_.uniformMatrix4fv(l,!1,I.modelViewMatrix.elements),I.matrixWorld.decompose(b,S,w),U[0]=w.x,U[1]=w.y,I=0,A.fog&&F.fog&&(I=P),C!==I&&(_.uniform1i(p,I),C=I),null!==F.map?(_.uniform2f(r,F.map.offset.x,F.map.offset.y),_.uniform2f(n,F.map.repeat.x,F.map.repeat.y)):(_.uniform2f(r,0,0),_.uniform2f(n,1,1)),_.uniform1f(c,F.opacity),_.uniform3f(s,F.color.r,F.color.g,F.color.b),_.uniform1f(o,F.rotation),_.uniform2fv(a,U),M.setBlending(F.blending,F.blendEquation,F.blendSrc,F.blendDst),M.setDepthTest(F.depthTest),M.setDepthWrite(F.depthWrite),F.map&&F.map.image&&F.map.image.width?e.setTexture(F.map,0):e.setTexture(H,0),_.drawElements(_.TRIANGLES,6,_.UNSIGNED_SHORT,0)}M.enable(_.CULL_FACE),e.resetGLState()}}},Object.defineProperties(THREE.Box2.prototype,{empty:{value:function(){return this.isEmpty()}},isIntersectionBox:{value:function(e){return this.intersectsBox(e)}}}),Object.defineProperties(THREE.Box3.prototype,{empty:{value:function(){return this.isEmpty()}},isIntersectionBox:{value:function(e){return this.intersectsBox(e)}},isIntersectionSphere:{value:function(e){return this.intersectsSphere(e)}}}),Object.defineProperties(THREE.Matrix3.prototype,{multiplyVector3:{value:function(e){return e.applyMatrix3(this)}},multiplyVector3Array:{value:function(e){return this.applyToVector3Array(e)}}}),Object.defineProperties(THREE.Matrix4.prototype,{extractPosition:{value:function(e){return this.copyPosition(e)}},setRotationFromQuaternion:{value:function(e){return this.makeRotationFromQuaternion(e)}},multiplyVector3:{value:function(e){return e.applyProjection(this)}},multiplyVector4:{value:function(e){return e.applyMatrix4(this)}},multiplyVector3Array:{value:function(e){return this.applyToVector3Array(e)}},rotateAxis:{value:function(e){e.transformDirection(this)}},crossVector:{value:function(e){return e.applyMatrix4(this)}},translate:{value:function(e){}},rotateX:{value:function(e){}},rotateY:{value:function(e){}},rotateZ:{value:function(e){}},rotateByAxis:{value:function(e,t){}}}),Object.defineProperties(THREE.Plane.prototype,{isIntersectionLine:{value:function(e){return this.intersectsLine(e)}}}),Object.defineProperties(THREE.Quaternion.prototype,{multiplyVector3:{value:function(e){return e.applyQuaternion(this)}}}),Object.defineProperties(THREE.Ray.prototype,{isIntersectionBox:{value:function(e){return this.intersectsBox(e)}},isIntersectionPlane:{value:function(e){return this.intersectsPlane(e)}},isIntersectionSphere:{value:function(e){return this.intersectsSphere(e)}}}),Object.defineProperties(THREE.Vector3.prototype,{setEulerFromRotationMatrix:{value:function(){}},setEulerFromQuaternion:{value:function(){}},getPositionFromMatrix:{value:function(e){return this.setFromMatrixPosition(e)}},getScaleFromMatrix:{value:function(e){return this.setFromMatrixScale(e)}},getColumnFromMatrix:{value:function(e,t){return this.setFromMatrixColumn(e,t)}}}),THREE.Face4=function(e,t,i,r,n,o,a){return new THREE.Face3(e,t,i,n,o,a)},THREE.Vertex=function(e,t,i){return new THREE.Vector3(e,t,i)},Object.defineProperties(THREE.Object3D.prototype,{eulerOrder:{get:function(){return this.rotation.order},set:function(e){this.rotation.order=e}},getChildByName:{value:function(e){return this.getObjectByName(e)}},renderDepth:{set:function(e){}},translate:{value:function(e,t){return this.translateOnAxis(t,e)}},useQuaternion:{get:function(){},set:function(e){}}}),Object.defineProperties(THREE,{PointCloud:{value:function(e,t){return new THREE.Points(e,t)}},ParticleSystem:{value:function(e,t){return new THREE.Points(e,t)}}}),Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(e){}},shadowCameraFov:{set:function(e){this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){this.shadow.camera.far=e}},shadowCameraVisible:{set:function(e){}},shadowBias:{set:function(e){this.shadow.bias=e}},shadowDarkness:{set:function(e){}},shadowMapWidth:{set:function(e){this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){this.shadow.mapSize.height=e}}}),Object.defineProperties(THREE.BufferAttribute.prototype,{length:{get:function(){return this.array.length}}}),Object.defineProperties(THREE.BufferGeometry.prototype,{drawcalls:{get:function(){return this.groups}},offsets:{get:function(){return this.groups}},addIndex:{value:function(e){this.setIndex(e)}},addDrawCall:{value:function(e,t,i){this.addGroup(e,t)}},clearDrawCalls:{value:function(){this.clearGroups()}},computeTangents:{value:function(){}},computeOffsets:{value:function(){}}}),Object.defineProperties(THREE.Material.prototype,{wrapAround:{get:function(){},set:function(e){}},wrapRGB:{get:function(){return new THREE.Color}}}),Object.defineProperties(THREE,{PointCloudMaterial:{value:function(e){return new THREE.PointsMaterial(e)}},ParticleBasicMaterial:{value:function(e){return new THREE.PointsMaterial(e)}},ParticleSystemMaterial:{value:function(e){return new THREE.PointsMaterial(e)}}}),Object.defineProperties(THREE.MeshPhongMaterial.prototype,{metal:{get:function(){return!1},set:function(e){}}}),Object.defineProperties(THREE.ShaderMaterial.prototype,{derivatives:{get:function(){return this.extensions.derivatives},set:function(e){this.extensions.derivatives=e}}}),Object.defineProperties(THREE.WebGLRenderer.prototype,{supportsFloatTextures:{value:function(){return this.extensions.get("OES_texture_float")}},supportsHalfFloatTextures:{value:function(){return this.extensions.get("OES_texture_half_float")}},supportsStandardDerivatives:{value:function(){return this.extensions.get("OES_standard_derivatives")}},supportsCompressedTextureS3TC:{value:function(){return this.extensions.get("WEBGL_compressed_texture_s3tc")}},supportsCompressedTexturePVRTC:{value:function(){return this.extensions.get("WEBGL_compressed_texture_pvrtc")}},supportsBlendMinMax:{value:function(){return this.extensions.get("EXT_blend_minmax")}},supportsVertexTextures:{value:function(){return this.capabilities.vertexTextures}},supportsInstancedArrays:{value:function(){return this.extensions.get("ANGLE_instanced_arrays")}},enableScissorTest:{value:function(e){this.setScissorTest(e)}},initMaterial:{value:function(){}},addPrePlugin:{value:function(){}},addPostPlugin:{value:function(){}},updateShadowMap:{value:function(){}},shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){this.shadowMap.type=e}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(e){this.shadowMap.cullFace=e}}}),Object.defineProperties(THREE.WebGLRenderTarget.prototype,{wrapS:{get:function(){return this.texture.wrapS},set:function(e){this.texture.wrapS=e}},wrapT:{get:function(){return this.texture.wrapT},set:function(e){this.texture.wrapT=e}},magFilter:{get:function(){return this.texture.magFilter},set:function(e){this.texture.magFilter=e}},minFilter:{get:function(){return this.texture.minFilter},set:function(e){this.texture.minFilter=e}},anisotropy:{get:function(){return this.texture.anisotropy},set:function(e){this.texture.anisotropy=e}},offset:{get:function(){return this.texture.offset},set:function(e){this.texture.offset=e}},repeat:{get:function(){return this.texture.repeat},set:function(e){this.texture.repeat=e}},format:{get:function(){return this.texture.format},set:function(e){this.texture.format=e}},type:{get:function(){return this.texture.type},set:function(e){this.texture.type=e}},generateMipmaps:{get:function(){return this.texture.generateMipmaps},set:function(e){this.texture.generateMipmaps=e}}}),THREE.GeometryUtils={merge:function(e,t,i){var r;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry),e.merge(t,r,i)},center:function(e){return e.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,i,r){var n=new THREE.TextureLoader;return n.setCrossOrigin(this.crossOrigin),e=n.load(e,i,void 0,r),t&&(e.mapping=t),e},loadTextureCube:function(e,t,i,r){var n=new THREE.CubeTextureLoader;return n.setCrossOrigin(this.crossOrigin),e=n.load(e,i,void 0,r),t&&(e.mapping=t),e},loadCompressedTexture:function(){},loadCompressedTextureCube:function(){}},THREE.Projector=function(){this.projectVector=function(e,t){e.project(t)},this.unprojectVector=function(e,t){e.unproject(t)},this.pickingRay=function(e,t){}},THREE.CanvasRenderer=function(){this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},THREE.MeshFaceMaterial=THREE.MultiMaterial,THREE.CurveUtils={tangentQuadraticBezier:function(e,t,i,r){return 2*(1-e)*(i-t)+2*e*(r-i)},tangentCubicBezier:function(e,t,i,r,n){return-3*t*(1-e)*(1-e)+3*i*(1-e)*(1-e)-6*e*i*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*n},tangentSpline:function(e,t,i,r,n){return 6*e*e-6*e+(3*e*e-4*e+1)+(-6*e*e+6*e)+(3*e*e-2*e)},interpolate:function(e,t,i,r,n){e=.5*(i-e),r=.5*(r-t);var o=n*n;return(2*t-2*i+e+r)*n*o+(-3*t+3*i-2*e-r)*o+e*n+t}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var i=new THREE.Group,r=0,n=t.length;n>r;r++)i.add(new THREE.Mesh(e,t[r]));return i},detach:function(e,t,i){e.applyMatrix(t.matrixWorld),t.remove(e),i.add(e)},attach:function(e,t,i){var r=new THREE.Matrix4;r.getInverse(i.matrixWorld),e.applyMatrix(r),t.remove(e),i.add(e)}},THREE.ShapeUtils={area:function(e){for(var t=e.length,i=0,r=t-1,n=0;t>n;r=n++)i+=e[r].x*e[n].y-e[n].x*e[r].y;return.5*i},triangulate:function(){return function(e,t){var i=e.length;if(3>i)return null;var r,n,o,a=[],s=[],h=[];if(0<THREE.ShapeUtils.area(e))for(n=0;i>n;n++)s[n]=n;else for(n=0;i>n;n++)s[n]=i-1-n;var c=2*i;for(n=i-1;i>2&&!(0>=c--);){r=n,r>=i&&(r=0),n=r+1,n>=i&&(n=0),o=n+1,o>=i&&(o=0);var l;e:{var u=l=void 0,p=void 0,d=void 0,f=void 0,E=void 0,m=void 0,g=void 0,v=void 0,u=e[s[r]].x,p=e[s[r]].y,d=e[s[n]].x,f=e[s[n]].y,E=e[s[o]].x,m=e[s[o]].y;if(Number.EPSILON>(d-u)*(m-p)-(f-p)*(E-u))l=!1;else{var T=void 0,y=void 0,R=void 0,x=void 0,H=void 0,_=void 0,M=void 0,b=void 0,S=void 0,w=void 0,S=b=M=v=g=void 0,T=E-d,y=m-f,R=u-E,x=p-m,H=d-u,_=f-p;for(l=0;i>l;l++)if(g=e[s[l]].x,v=e[s[l]].y,!(g===u&&v===p||g===d&&v===f||g===E&&v===m)&&(M=g-u,b=v-p,S=g-d,w=v-f,g-=E,v-=m,S=T*w-y*S,M=H*b-_*M,b=R*v-x*g,S>=-Number.EPSILON&&b>=-Number.EPSILON&&M>=-Number.EPSILON)){l=!1;break e}l=!0}}if(l){for(a.push([e[s[r]],e[s[n]],e[s[o]]]),h.push([s[r],s[n],s[o]]),r=n,o=n+1;i>o;r++,o++)s[r]=s[o];i--,c=2*i}}return t?h:a}}(),triangulateShape:function(e,t){function i(e,t,i){return e.x!==t.x?e.x<t.x?e.x<=i.x&&i.x<=t.x:t.x<=i.x&&i.x<=e.x:e.y<t.y?e.y<=i.y&&i.y<=t.y:t.y<=i.y&&i.y<=e.y}function r(e,t,r,n,o){var a=t.x-e.x,s=t.y-e.y,h=n.x-r.x,c=n.y-r.y,l=e.x-r.x,u=e.y-r.y,p=s*h-a*c,d=s*l-a*u;if(Math.abs(p)>Number.EPSILON){if(p>0){if(0>d||d>p)return[];if(h=c*l-h*u,0>h||h>p)return[]}else{if(d>0||p>d)return[];if(h=c*l-h*u,h>0||p>h)return[]}return 0===h?!o||0!==d&&d!==p?[e]:[]:h===p?!o||0!==d&&d!==p?[t]:[]:0===d?[r]:d===p?[n]:(o=h/p,[{x:e.x+o*a,y:e.y+o*s}])}return 0!==d||c*l!==h*u?[]:(s=0===a&&0===s,h=0===h&&0===c,s&&h?e.x!==r.x||e.y!==r.y?[]:[e]:s?i(r,n,e)?[e]:[]:h?i(e,t,r)?[r]:[]:(0!==a?(e.x<t.x?(a=e,h=e.x,s=t,e=t.x):(a=t,h=t.x,s=e,e=e.x),r.x<n.x?(t=r,p=r.x,c=n,r=n.x):(t=n,p=n.x,c=r,r=r.x)):(e.y<t.y?(a=e,h=e.y,s=t,e=t.y):(a=t,h=t.y,s=e,e=e.y),r.y<n.y?(t=r,p=r.y,c=n,r=n.y):(t=n,p=n.y,c=r,r=r.y)),p>=h?p>e?[]:e===p?o?[]:[t]:r>=e?[t,s]:[t,c]:h>r?[]:h===r?o?[]:[a]:r>=e?[a,s]:[a,c]))}function n(e,t,i,r){var n=t.x-e.x,o=t.y-e.y;t=i.x-e.x,i=i.y-e.y;var a=r.x-e.x;return r=r.y-e.y,e=n*i-o*t,n=n*r-o*a,Math.abs(e)>Number.EPSILON?(t=a*i-r*t,e>0?n>=0&&t>=0:n>=0||t>=0):n>0}var o,a,s,h,c,l={};for(s=e.concat(),o=0,a=t.length;a>o;o++)Array.prototype.push.apply(s,t[o]);for(o=0,a=s.length;a>o;o++)c=s[o].x+":"+s[o].y,void 0!==l[c]&&void 0,l[c]=o;o=function(e,t){function i(e,t){var i=m.length-1,r=e-1;0>r&&(r=i);var o=e+1;return o>i&&(o=0),(i=n(m[e],m[r],m[o],s[t]))?(i=s.length-1,r=t-1,0>r&&(r=i),o=t+1,o>i&&(o=0),(i=n(s[t],s[r],s[o],m[e]))?!0:!1):!1}function o(e,t){var i,n;for(i=0;i<m.length;i++)if(n=i+1,n%=m.length,n=r(e,t,m[i],m[n],!0),0<n.length)return!0;return!1}function a(e,i){var n,o,a,s;for(n=0;n<g.length;n++)for(o=t[g[n]],a=0;a<o.length;a++)if(s=a+1,s%=o.length,s=r(e,i,o[a],o[s],!0),0<s.length)return!0;return!1}var s,h,c,l,u,p,d,f,E,m=e.concat(),g=[],v=[],T=0;for(h=t.length;h>T;T++)g.push(T);d=0;for(var y=2*g.length;0<g.length&&(y--,!(0>y));)for(c=d;c<m.length;c++){for(l=m[c],h=-1,T=0;T<g.length;T++)if(u=g[T],p=l.x+":"+l.y+":"+u,void 0===v[p]){for(s=t[u],f=0;f<s.length;f++)if(u=s[f],i(c,f)&&!o(l,u)&&!a(l,u)){h=f,g.splice(T,1),d=m.slice(0,c+1),u=m.slice(c),f=s.slice(h),E=s.slice(0,h+1),m=d.concat(f).concat(E).concat(u),d=c;break}if(h>=0)break;v[p]=!0}if(h>=0)break}return m}(e,t);var u=THREE.ShapeUtils.triangulate(o,!1);for(o=0,a=u.length;a>o;o++)for(h=u[o],s=0;3>s;s++)c=h[s].x+":"+h[s].y,c=l[c],void 0!==c&&(h[s]=c);return u.concat()},isClockWise:function(e){return 0>THREE.ShapeUtils.area(e)},b2:function(){return function(e,t,i,r){var n=1-e;return n*n*t+2*(1-e)*e*i+e*e*r}}(),b3:function(){return function(e,t,i,r,n){var o=1-e,a=1-e;return o*o*o*t+3*a*a*e*i+3*(1-e)*e*e*r+e*e*e*n}}()},THREE.Curve=function(){},THREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(e){return null},getPointAt:function(e){return e=this.getUtoTmapping(e),this.getPoint(e)},getPoints:function(e){e||(e=5);var t,i=[];for(t=0;e>=t;t++)i.push(this.getPoint(t/e));return i},getSpacedPoints:function(e){e||(e=5);var t,i=[];for(t=0;e>=t;t++)i.push(this.getPointAt(t/e));return i},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,i,r=[],n=this.getPoint(0),o=0;for(r.push(0),i=1;e>=i;i++)t=this.getPoint(i/e),o+=t.distanceTo(n),r.push(o),n=t;return this.cacheArcLengths=r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var i,r=this.getLengths(),n=0,o=r.length;i=t?t:e*r[o-1];for(var a,s=0,h=o-1;h>=s;)if(n=Math.floor(s+(h-s)/2),a=r[n]-i,0>a)s=n+1;else{if(!(a>0)){h=n;break}h=n-1}return n=h,r[n]===i?n/(o-1):(s=r[n],r=(n+(i-s)/(r[n+1]-s))/(o-1))},getTangent:function(e){var t=e-1e-4;return e+=1e-4,0>t&&(t=0),e>1&&(e=1),t=this.getPoint(t),this.getPoint(e).clone().sub(t).normalize()},getTangentAt:function(e){return e=this.getUtoTmapping(e),this.getTangent(e)}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),i=this.getCurveLengths(),r=0;r<i.length;){if(i[r]>=t)return e=this.curves[r],t=1-(i[r]-t)/e.getLength(),e.getPointAt(t);r++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,i=0,r=this.curves.length;r>i;i++)t+=this.curves[i].getLength(),e.push(t);return this.cacheLengths=e},THREE.CurvePath.prototype.createPointsGeometry=function(e){return e=this.getPoints(e),this.createGeometry(e)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){return e=this.getSpacedPoints(e),this.createGeometry(e)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,i=0,r=e.length;r>i;i++){var n=e[i];t.vertices.push(new THREE.Vector3(n.x,n.y,n.z||0))}return t},THREE.Font=function(e){this.data=e},THREE.Font.prototype={constructor:THREE.Font,generateShapes:function(e,t,i){void 0===t&&(t=100),void 0===i&&(i=4);var r=this.data;e=String(e).split("");var n=t/r.resolution,o=0;t=[];for(var a=0;a<e.length;a++){var s;s=n;var h=o,c=r.glyphs[e[a]]||r.glyphs["?"];if(c){var l=new THREE.Path,u=[],p=THREE.ShapeUtils.b2,d=THREE.ShapeUtils.b3,f=void 0,E=void 0,m=E=f=void 0,g=void 0,v=void 0,T=void 0,y=void 0,R=void 0,g=void 0;if(c.o)for(var x=c._cachedOutline||(c._cachedOutline=c.o.split(" ")),H=0,_=x.length;_>H;)switch(x[H++]){case"m":f=x[H++]*s+h,E=x[H++]*s,l.moveTo(f,E);break;case"l":f=x[H++]*s+h,E=x[H++]*s,l.lineTo(f,E);break;case"q":if(f=x[H++]*s+h,E=x[H++]*s,v=x[H++]*s+h,T=x[H++]*s,l.quadraticCurveTo(v,T,f,E),g=u[u.length-1])for(var m=g.x,g=g.y,M=1;i>=M;M++){var b=M/i;p(b,m,v,f),p(b,g,T,E)}break;case"b":if(f=x[H++]*s+h,E=x[H++]*s,v=x[H++]*s+h,T=x[H++]*s,y=x[H++]*s+h,R=x[H++]*s,l.bezierCurveTo(v,T,y,R,f,E),g=u[u.length-1])for(m=g.x,g=g.y,M=1;i>=M;M++)b=M/i,d(b,m,v,y,f),d(b,g,T,R,E)}s={offset:c.ha*s,path:l}}else s=void 0;o+=s.offset,t.push(s.path)}for(i=[],r=0,e=t.length;e>r;r++)Array.prototype.push.apply(i,t[r].toShapes());return i}},THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.Path.prototype.constructor=THREE.Path,THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,i=e.length;i>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(e,t){this.actions.push({action:"moveTo",args:[e,t]})},THREE.Path.prototype.lineTo=function(e,t){var i=this.actions[this.actions.length-1].args,i=new THREE.LineCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(e,t));this.curves.push(i),this.actions.push({action:"lineTo",args:[e,t]})},THREE.Path.prototype.quadraticCurveTo=function(e,t,i,r){var n=this.actions[this.actions.length-1].args,n=new THREE.QuadraticBezierCurve(new THREE.Vector2(n[n.length-2],n[n.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r));this.curves.push(n),this.actions.push({action:"quadraticCurveTo",args:[e,t,i,r]})},THREE.Path.prototype.bezierCurveTo=function(e,t,i,r,n,o){var a=this.actions[this.actions.length-1].args,a=new THREE.CubicBezierCurve(new THREE.Vector2(a[a.length-2],a[a.length-1]),new THREE.Vector2(e,t),new THREE.Vector2(i,r),new THREE.Vector2(n,o));this.curves.push(a),this.actions.push({action:"bezierCurveTo",args:[e,t,i,r,n,o]})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=[new THREE.Vector2(i[i.length-2],i[i.length-1])];Array.prototype.push.apply(i,e),i=new THREE.SplineCurve(i),this.curves.push(i),this.actions.push({action:"splineThru",args:t})},THREE.Path.prototype.arc=function(e,t,i,r,n,o){var a=this.actions[this.actions.length-1].args;this.absarc(e+a[a.length-2],t+a[a.length-1],i,r,n,o)},THREE.Path.prototype.absarc=function(e,t,i,r,n,o){this.absellipse(e,t,i,i,r,n,o)},THREE.Path.prototype.ellipse=function(e,t,i,r,n,o,a,s){var h=this.actions[this.actions.length-1].args;this.absellipse(e+h[h.length-2],t+h[h.length-1],i,r,n,o,a,s)},THREE.Path.prototype.absellipse=function(e,t,i,r,n,o,a,s){var h=[e,t,i,r,n,o,a,s||0];e=new THREE.EllipseCurve(e,t,i,r,n,o,a,s),this.curves.push(e),e=e.getPoint(1),h.push(e.x),h.push(e.y),this.actions.push({action:"ellipse",args:h})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],i=0;e>i;i++)t.push(this.getPoint(i/e));return this.autoClose&&t.push(t[0]),t},THREE.Path.prototype.getPoints=function(e){e=e||12;for(var t,i,r,n,o,a,s,h,c,l,u=THREE.ShapeUtils.b2,p=THREE.ShapeUtils.b3,d=[],f=0,E=this.actions.length;E>f;f++){c=this.actions[f];var m=c.args;switch(c.action){case"moveTo":d.push(new THREE.Vector2(m[0],m[1]));break;case"lineTo":d.push(new THREE.Vector2(m[0],m[1]));break;case"quadraticCurveTo":for(t=m[2],i=m[3],o=m[0],a=m[1],0<d.length?(c=d[d.length-1],s=c.x,h=c.y):(c=this.actions[f-1].args,s=c[c.length-2],h=c[c.length-1]),m=1;e>=m;m++)l=m/e,c=u(l,s,o,t),l=u(l,h,a,i),d.push(new THREE.Vector2(c,l));break;case"bezierCurveTo":for(t=m[4],i=m[5],o=m[0],a=m[1],r=m[2],n=m[3],0<d.length?(c=d[d.length-1],s=c.x,h=c.y):(c=this.actions[f-1].args,s=c[c.length-2],h=c[c.length-1]),m=1;e>=m;m++)l=m/e,c=p(l,s,o,r,t),l=p(l,h,a,n,i),d.push(new THREE.Vector2(c,l));break;case"splineThru":for(c=this.actions[f-1].args,l=[new THREE.Vector2(c[c.length-2],c[c.length-1])],c=e*m[0].length,l=l.concat(m[0]),l=new THREE.SplineCurve(l),m=1;c>=m;m++)d.push(l.getPointAt(m/c));break;case"arc":for(t=m[0],i=m[1],a=m[2],r=m[3],c=m[4],o=!!m[5],s=c-r,h=2*e,m=1;h>=m;m++)l=m/h,o||(l=1-l),l=r+l*s,c=t+a*Math.cos(l),l=i+a*Math.sin(l),d.push(new THREE.Vector2(c,l));break;case"ellipse":t=m[0],i=m[1],a=m[2],n=m[3],r=m[4],c=m[5],o=!!m[6];var g=m[7];s=c-r,h=2*e;var v,T;for(0!==g&&(v=Math.cos(g),T=Math.sin(g)),m=1;h>=m;m++){if(l=m/h,o||(l=1-l),l=r+l*s,c=t+a*Math.cos(l),l=i+n*Math.sin(l),0!==g){var y=c;c=(y-t)*v-(l-i)*T+t,l=(y-t)*T+(l-i)*v+i}d.push(new THREE.Vector2(c,l))}}}return e=d[d.length-1],Math.abs(e.x-d[0].x)<Number.EPSILON&&Math.abs(e.y-d[0].y)<Number.EPSILON&&d.splice(d.length-1,1),this.autoClose&&d.push(d[0]),d},THREE.Path.prototype.toShapes=function(e,t){function i(e){for(var t=[],i=0,r=e.length;r>i;i++){var n=e[i],o=new THREE.Shape;o.actions=n.actions,o.curves=n.curves,t.push(o)}return t}function r(e,t){for(var i=t.length,r=!1,n=i-1,o=0;i>o;n=o++){var a=t[n],s=t[o],h=s.x-a.x,c=s.y-a.y;if(Math.abs(c)>Number.EPSILON){if(0>c&&(a=t[o],h=-h,s=t[n],c=-c),!(e.y<a.y||e.y>s.y))if(e.y===a.y){if(e.x===a.x)return!0}else{if(n=c*(e.x-a.x)-h*(e.y-a.y),0===n)return!0;0>n||(r=!r)}}else if(e.y===a.y&&(s.x<=e.x&&e.x<=a.x||a.x<=e.x&&e.x<=s.x))return!0}return r}var n=THREE.ShapeUtils.isClockWise,o=function(e){for(var t=[],i=new THREE.Path,r=0,n=e.length;n>r;r++){var o=e[r],a=o.args,o=o.action;"moveTo"===o&&0!==i.actions.length&&(t.push(i),i=new THREE.Path),i[o].apply(i,a)}return 0!==i.actions.length&&t.push(i),t}(this.actions);if(0===o.length)return[];if(!0===t)return i(o);var a,s,h,c=[];if(1===o.length)return s=o[0],h=new THREE.Shape,h.actions=s.actions,h.curves=s.curves,c.push(h),c;var l=!n(o[0].getPoints()),l=e?!l:l;h=[];var u,p=[],d=[],f=0;p[f]=void 0,d[f]=[];for(var E=0,m=o.length;m>E;E++)s=o[E],u=s.getPoints(),a=n(u),(a=e?!a:a)?(!l&&p[f]&&f++,p[f]={s:new THREE.Shape,p:u},p[f].s.actions=s.actions,p[f].s.curves=s.curves,l&&f++,d[f]=[]):d[f].push({h:s,p:u[0]});if(!p[0])return i(o);if(1<p.length){for(E=!1,s=[],n=0,o=p.length;o>n;n++)h[n]=[];for(n=0,o=p.length;o>n;n++)for(a=d[n],l=0;l<a.length;l++){for(f=a[l],u=!0,m=0;m<p.length;m++)r(f.p,p[m].p)&&(n!==m&&s.push({froms:n,tos:m,hole:l}),u?(u=!1,h[m].push(f)):E=!0);u&&h[n].push(f)}0<s.length&&(E||(d=h))}for(E=0,n=p.length;n>E;E++)for(h=p[E].s,c.push(h),s=d[E],o=0,a=s.length;a>o;o++)h.holes.push(s[o].h);return c},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.constructor=THREE.Shape,THREE.Shape.prototype.extrude=function(e){return new THREE.ExtrudeGeometry(this,e)},THREE.Shape.prototype.makeGeometry=function(e){return new THREE.ShapeGeometry(this,e)},THREE.Shape.prototype.getPointsHoles=function(e){for(var t=[],i=0,r=this.holes.length;r>i;i++)t[i]=this.holes[i].getPoints(e);return t},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.extractAllPoints(e)},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){return this.v2.clone().sub(this.v1).normalize()},THREE.QuadraticBezierCurve=function(e,t,i){this.v0=e,this.v1=t,this.v2=i},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t=THREE.ShapeUtils.b2;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y))},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t=THREE.CurveUtils.tangentQuadraticBezier;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y)).normalize()},THREE.CubicBezierCurve=function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(e){var t=THREE.ShapeUtils.b3;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y))},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t=THREE.CurveUtils.tangentCubicBezier;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(e){var t=this.points;e*=t.length-1;var i=Math.floor(e);e-=i;var r=t[0===i?i:i-1],n=t[i],o=t[i>t.length-2?t.length-1:i+1],t=t[i>t.length-3?t.length-1:i+2],i=THREE.CurveUtils.interpolate;return new THREE.Vector2(i(r.x,n.x,o.x,t.x,e),i(r.y,n.y,o.y,t.y,e))},THREE.EllipseCurve=function(e,t,i,r,n,o,a,s){this.aX=e,this.aY=t,this.xRadius=i,this.yRadius=r,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a,this.aRotation=s||0},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve,THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;0>t&&(t+=2*Math.PI),t>2*Math.PI&&(t-=2*Math.PI),t=!0===this.aClockwise?this.aEndAngle+(1-e)*(2*Math.PI-t):this.aStartAngle+e*t,e=this.aX+this.xRadius*Math.cos(t);var i=this.aY+this.yRadius*Math.sin(t);if(0!==this.aRotation){var t=Math.cos(this.aRotation),r=Math.sin(this.aRotation),n=e;e=(n-this.aX)*t-(i-this.aY)*r+this.aX,i=(n-this.aX)*r+(i-this.aY)*t+this.aY}return new THREE.Vector2(e,i)},THREE.ArcCurve=function(e,t,i,r,n,o){THREE.EllipseCurve.call(this,e,t,i,i,r,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,i){this.v0=e,this.v1=t,this.v2=i},function(e){var t=THREE.ShapeUtils.b2;return new THREE.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y),t(e,this.v0.z,this.v1.z,this.v2.z))}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,i,r){this.v0=e,this.v1=t,this.v2=i,this.v3=r},function(e){var t=THREE.ShapeUtils.b3;return new THREE.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z))}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=this.points;e*=t.length-1;var i=Math.floor(e);e-=i;var r=t[0==i?i:i-1],n=t[i],o=t[i>t.length-2?t.length-1:i+1],t=t[i>t.length-3?t.length-1:i+2],i=THREE.CurveUtils.interpolate;return new THREE.Vector3(i(r.x,n.x,o.x,t.x,e),i(r.y,n.y,o.y,t.y,e),i(r.z,n.z,o.z,t.z,e))}),THREE.CatmullRomCurve3=function(){function e(){}var t=new THREE.Vector3,i=new e,r=new e,n=new e;return e.prototype.init=function(e,t,i,r){this.c0=e,this.c1=i,this.c2=-3*e+3*t-2*i-r,this.c3=2*e-2*t+i+r},e.prototype.initNonuniformCatmullRom=function(e,t,i,r,n,o,a){e=((t-e)/n-(i-e)/(n+o)+(i-t)/o)*o,r=((i-t)/o-(r-t)/(o+a)+(r-i)/a)*o,this.init(t,i,e,r)},e.prototype.initCatmullRom=function(e,t,i,r,n){this.init(t,i,n*(i-e),n*(r-t))},e.prototype.calc=function(e){var t=e*e;return this.c0+this.c1*e+this.c2*t+this.c3*t*e},THREE.Curve.create(function(e){this.points=e||[],this.closed=!1},function(e){var o,a,s=this.points;a=s.length,e*=a-(this.closed?0:1),o=Math.floor(e),e-=o,this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/s.length)+1)*s.length:0===e&&o===a-1&&(o=a-2,e=1);var h,c,l;if(this.closed||o>0?h=s[(o-1)%a]:(t.subVectors(s[0],s[1]).add(s[0]),h=t),c=s[o%a],l=s[(o+1)%a],this.closed||a>o+2?s=s[(o+2)%a]:(t.subVectors(s[a-1],s[a-2]).add(s[a-1]),s=t),void 0===this.type||"centripetal"===this.type||"chordal"===this.type){var u="chordal"===this.type?.5:.25;a=Math.pow(h.distanceToSquared(c),u),o=Math.pow(c.distanceToSquared(l),u),u=Math.pow(l.distanceToSquared(s),u),
1e-4>o&&(o=1),1e-4>a&&(a=o),1e-4>u&&(u=o),i.initNonuniformCatmullRom(h.x,c.x,l.x,s.x,a,o,u),r.initNonuniformCatmullRom(h.y,c.y,l.y,s.y,a,o,u),n.initNonuniformCatmullRom(h.z,c.z,l.z,s.z,a,o,u)}else"catmullrom"===this.type&&(a=void 0!==this.tension?this.tension:.5,i.initCatmullRom(h.x,c.x,l.x,s.x,a),r.initCatmullRom(h.y,c.y,l.y,s.y,a),n.initCatmullRom(h.z,c.z,l.z,s.z,a));return new THREE.Vector3(i.calc(e),r.calc(e),n.calc(e))})}(),THREE.ClosedSplineCurve3=function(e){THREE.CatmullRomCurve3.call(this,e),this.type="catmullrom",this.closed=!0},THREE.ClosedSplineCurve3.prototype=Object.create(THREE.CatmullRomCurve3.prototype),THREE.BoxGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:n,depthSegments:o},this.fromBufferGeometry(new THREE.BoxBufferGeometry(e,t,i,r,n,o)),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry,THREE.CubeGeometry=THREE.BoxGeometry,THREE.BoxBufferGeometry=function(e,t,i,r,n,o){function a(e,t,i,r,n,o,a,h,c,T,y){var R=o/c,x=a/T,H=o/2,_=a/2,M=h/2;a=c+1;for(var b=T+1,S=o=0,w=new THREE.Vector3,A=0;b>A;A++)for(var L=A*x-_,C=0;a>C;C++)w[e]=(C*R-H)*r,w[t]=L*n,w[i]=M,u[f]=w.x,u[f+1]=w.y,u[f+2]=w.z,w[e]=0,w[t]=0,w[i]=h>0?1:-1,p[f]=w.x,p[f+1]=w.y,p[f+2]=w.z,d[E]=C/c,d[E+1]=1-A/T,f+=3,E+=2,o+=1;for(A=0;T>A;A++)for(C=0;c>C;C++)e=g+C+a*(A+1),t=g+(C+1)+a*(A+1),i=g+(C+1)+a*A,l[m]=g+C+a*A,l[m+1]=e,l[m+2]=i,l[m+3]=e,l[m+4]=t,l[m+5]=i,m+=6,S+=6;s.addGroup(v,S,y),v+=S,g+=o}THREE.BufferGeometry.call(this),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:r,heightSegments:n,depthSegments:o};var s=this;r=Math.floor(r)||1,n=Math.floor(n)||1,o=Math.floor(o)||1;var h=function(e,t,i){return e=0+e*t*2+e*i*2,e+=i*t*2,4*e}(r,n,o),c=h/4*6,l=new(c>65535?Uint32Array:Uint16Array)(c),u=new Float32Array(3*h),p=new Float32Array(3*h),d=new Float32Array(2*h),f=0,E=0,m=0,g=0,v=0;a("z","y","x",-1,-1,i,t,e,o,n,0),a("z","y","x",1,-1,i,t,-e,o,n,1),a("x","z","y",1,1,e,i,t,r,o,2),a("x","z","y",1,-1,e,i,-t,r,o,3),a("x","y","z",1,-1,e,t,i,r,n,4),a("x","y","z",-1,-1,e,t,-i,r,n,5),this.setIndex(new THREE.BufferAttribute(l,1)),this.addAttribute("position",new THREE.BufferAttribute(u,3)),this.addAttribute("normal",new THREE.BufferAttribute(p,3)),this.addAttribute("uv",new THREE.BufferAttribute(d,2))},THREE.BoxBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.BoxBufferGeometry.prototype.constructor=THREE.BoxBufferGeometry,THREE.CircleGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},this.fromBufferGeometry(new THREE.CircleBufferGeometry(e,t,i,r))},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry,THREE.CircleBufferGeometry=function(e,t,i,r){THREE.BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:i,thetaLength:r},e=e||50,t=void 0!==t?Math.max(3,t):8,i=void 0!==i?i:0,r=void 0!==r?r:2*Math.PI;var n=t+2,o=new Float32Array(3*n),a=new Float32Array(3*n),n=new Float32Array(2*n);a[2]=1,n[0]=.5,n[1]=.5;for(var s=0,h=3,c=2;t>=s;s++,h+=3,c+=2){var l=i+s/t*r;o[h]=e*Math.cos(l),o[h+1]=e*Math.sin(l),a[h+2]=1,n[c]=(o[h]/e+1)/2,n[c+1]=(o[h+1]/e+1)/2}for(i=[],h=1;t>=h;h++)i.push(h,h+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(i),1)),this.addAttribute("position",new THREE.BufferAttribute(o,3)),this.addAttribute("normal",new THREE.BufferAttribute(a,3)),this.addAttribute("uv",new THREE.BufferAttribute(n,2)),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry,THREE.CylinderBufferGeometry=function(e,t,i,r,n,o,a,s){function h(i){var n,o,h;h=new THREE.Vector2;var c=new THREE.Vector3,l=!0===i?e:t,g=!0===i?1:-1;for(o=E,n=1;r>=n;n++)p.setXYZ(E,0,v*g,0),d.setXYZ(E,0,g,0),!0===i?(h.x=n/r,h.y=0):(h.x=(n-1)/r,h.y=1),f.setXY(E,h.x,h.y),E++;for(h=E,n=0;r>=n;n++){var T=n/r;c.x=l*Math.sin(T*s+a),c.y=v*g,c.z=l*Math.cos(T*s+a),p.setXYZ(E,c.x,c.y,c.z),d.setXYZ(E,0,g,0),f.setXY(E,T,!0===i?1:0),E++}for(n=0;r>n;n++)c=o+n,l=h+n,!0===i?(u.setX(m,l),m++,u.setX(m,l+1)):(u.setX(m,l+1),m++,u.setX(m,l)),m++,u.setX(m,c),m++}THREE.BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:n,openEnded:o,thetaStart:a,thetaLength:s},e=void 0!==e?e:20,t=void 0!==t?t:20,i=void 0!==i?i:100,r=Math.floor(r)||8,n=Math.floor(n)||1,o=void 0!==o?o:!1,a=void 0!==a?a:0,s=void 0!==s?s:2*Math.PI;var c=function(){var e=(r+1)*(n+1);return!1===o&&(e+=2*(r+1)+2*r),e}(),l=function(){var e=r*n*6;return!1===o&&(e+=6*r),e}(),u=new THREE.BufferAttribute(new(l>65535?Uint32Array:Uint16Array)(l),1),p=new THREE.BufferAttribute(new Float32Array(3*c),3),d=new THREE.BufferAttribute(new Float32Array(3*c),3),f=new THREE.BufferAttribute(new Float32Array(2*c),2),E=0,m=0,g=[],v=i/2;!function(){var o,h,c=new THREE.Vector3,l=new THREE.Vector3,T=(t-e)/i;for(h=0;n>=h;h++){var y=[],R=h/n,x=R*(t-e)+e;for(o=0;r>=o;o++){var H=o/r;l.x=x*Math.sin(H*s+a),l.y=-R*i+v,l.z=x*Math.cos(H*s+a),p.setXYZ(E,l.x,l.y,l.z),c.copy(l),(0===e&&0===h||0===t&&h===n)&&(c.x=Math.sin(H*s+a),c.z=Math.cos(H*s+a)),c.setY(Math.sqrt(c.x*c.x+c.z*c.z)*T).normalize(),d.setXYZ(E,c.x,c.y,c.z),f.setXY(E,H,1-R),y.push(E),E++}g.push(y)}for(o=0;r>o;o++)for(h=0;n>h;h++)c=g[h+1][o],l=g[h+1][o+1],T=g[h][o+1],u.setX(m,g[h][o]),m++,u.setX(m,c),m++,u.setX(m,T),m++,u.setX(m,c),m++,u.setX(m,l),m++,u.setX(m,T),m++}(),!1===o&&(e>0&&h(!0),t>0&&h(!1)),this.setIndex(u),this.addAttribute("position",p),this.addAttribute("normal",d),this.addAttribute("uv",f)},THREE.CylinderBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.CylinderBufferGeometry.prototype.constructor=THREE.CylinderBufferGeometry,THREE.CylinderGeometry=function(e,t,i,r,n,o,a,s){THREE.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:r,heightSegments:n,openEnded:o,thetaStart:a,thetaLength:s},this.fromBufferGeometry(new THREE.CylinderBufferGeometry(e,t,i,r,n,o,a,s)),this.mergeVertices()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.EdgesGeometry=function(e,t){function i(e,t){return e-t}THREE.BufferGeometry.call(this);var r,n=Math.cos(THREE.Math.degToRad(void 0!==t?t:1)),o=[0,0],a={},s=["a","b","c"];e instanceof THREE.BufferGeometry?(r=new THREE.Geometry,r.fromBufferGeometry(e)):r=e.clone(),r.mergeVertices(),r.computeFaceNormals();var h=r.vertices;r=r.faces;for(var c=0,l=r.length;l>c;c++)for(var u=r[c],p=0;3>p;p++){o[0]=u[s[p]],o[1]=u[s[(p+1)%3]],o.sort(i);var d=o.toString();void 0===a[d]?a[d]={vert1:o[0],vert2:o[1],face1:c,face2:void 0}:a[d].face2=c}o=[];for(d in a)s=a[d],(void 0===s.face2||r[s.face1].normal.dot(r[s.face2].normal)<=n)&&(c=h[s.vert1],o.push(c.x),o.push(c.y),o.push(c.z),c=h[s.vert2],o.push(c.x),o.push(c.y),o.push(c.z));this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(o),3))},THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry,THREE.ExtrudeGeometry=function(e,t){"undefined"!=typeof e&&(THREE.Geometry.call(this),this.type="ExtrudeGeometry",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var i=e.length,r=0;i>r;r++)this.addShape(e[r],t)},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function i(e,t,i){return t.clone().multiplyScalar(i).add(e)}function r(e,t,i){var r=1,r=e.x-t.x,n=e.y-t.y,o=i.x-e.x,a=i.y-e.y,s=r*r+n*n;if(Math.abs(r*a-n*o)>Number.EPSILON){var h=Math.sqrt(s),c=Math.sqrt(o*o+a*a),s=t.x-n/h;if(t=t.y+r/h,o=((i.x-a/c-s)*a-(i.y+o/c-t)*o)/(r*a-n*o),i=s+r*o-e.x,e=t+n*o-e.y,r=i*i+e*e,2>=r)return new THREE.Vector2(i,e);r=Math.sqrt(r/2)}else e=!1,r>Number.EPSILON?o>Number.EPSILON&&(e=!0):r<-Number.EPSILON?o<-Number.EPSILON&&(e=!0):Math.sign(n)===Math.sign(a)&&(e=!0),e?(i=-n,e=r,r=Math.sqrt(s)):(i=r,e=n,r=Math.sqrt(s/2));return new THREE.Vector2(i/r,e/r)}function n(e,t){var i,r;for(N=e.length;0<=--N;){i=N,r=N-1,0>r&&(r=e.length-1);for(var n=0,o=v+2*E,n=0;o>n;n++){var a=U*n,s=U*(n+1),h=t+i+a,a=t+r+a,c=t+r+s,s=t+i+s,h=h+b,a=a+b,c=c+b,s=s+b;M.faces.push(new THREE.Face3(h,a,s,null,null,1)),M.faces.push(new THREE.Face3(a,c,s,null,null,1)),h=R.generateSideWallUV(M,h,a,c,s),M.faceVertexUvs[0].push([h[0],h[1],h[3]]),M.faceVertexUvs[0].push([h[1],h[2],h[3]])}}}function o(e,t,i){M.vertices.push(new THREE.Vector3(e,t,i))}function a(e,t,i){e+=b,t+=b,i+=b,M.faces.push(new THREE.Face3(e,t,i,null,null,0)),e=R.generateTopUV(M,e,t,i),M.faceVertexUvs[0].push(e)}var s,h,c,l,u,p=void 0!==t.amount?t.amount:100,d=void 0!==t.bevelThickness?t.bevelThickness:6,f=void 0!==t.bevelSize?t.bevelSize:d-2,E=void 0!==t.bevelSegments?t.bevelSegments:3,m=void 0!==t.bevelEnabled?t.bevelEnabled:!0,g=void 0!==t.curveSegments?t.curveSegments:12,v=void 0!==t.steps?t.steps:1,T=t.extrudePath,y=!1,R=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;T&&(s=T.getSpacedPoints(v),y=!0,m=!1,h=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(T,v,!1),c=new THREE.Vector3,l=new THREE.Vector3,u=new THREE.Vector3),m||(f=d=E=0);var x,H,_,M=this,b=this.vertices.length,T=e.extractPoints(g),g=T.shape,S=T.holes;if(T=!THREE.ShapeUtils.isClockWise(g)){for(g=g.reverse(),H=0,_=S.length;_>H;H++)x=S[H],THREE.ShapeUtils.isClockWise(x)&&(S[H]=x.reverse());T=!1}var w=THREE.ShapeUtils.triangulateShape(g,S),A=g;for(H=0,_=S.length;_>H;H++)x=S[H],g=g.concat(x);var L,C,P,D,B,I,U=g.length,F=w.length,T=[],N=0;for(P=A.length,L=P-1,C=N+1;P>N;N++,L++,C++)L===P&&(L=0),C===P&&(C=0),T[N]=r(A[N],A[L],A[C]);var V,O=[],G=T.concat();for(H=0,_=S.length;_>H;H++){for(x=S[H],V=[],N=0,P=x.length,L=P-1,C=N+1;P>N;N++,L++,C++)L===P&&(L=0),C===P&&(C=0),V[N]=r(x[N],x[L],x[C]);O.push(V),G=G.concat(V)}for(L=0;E>L;L++){for(P=L/E,D=d*(1-P),C=f*Math.sin(P*Math.PI/2),N=0,P=A.length;P>N;N++)B=i(A[N],T[N],C),o(B.x,B.y,-D);for(H=0,_=S.length;_>H;H++)for(x=S[H],V=O[H],N=0,P=x.length;P>N;N++)B=i(x[N],V[N],C),o(B.x,B.y,-D)}for(C=f,N=0;U>N;N++)B=m?i(g[N],G[N],C):g[N],y?(l.copy(h.normals[0]).multiplyScalar(B.x),c.copy(h.binormals[0]).multiplyScalar(B.y),u.copy(s[0]).add(l).add(c),o(u.x,u.y,u.z)):o(B.x,B.y,0);for(P=1;v>=P;P++)for(N=0;U>N;N++)B=m?i(g[N],G[N],C):g[N],y?(l.copy(h.normals[P]).multiplyScalar(B.x),c.copy(h.binormals[P]).multiplyScalar(B.y),u.copy(s[P]).add(l).add(c),o(u.x,u.y,u.z)):o(B.x,B.y,p/v*P);for(L=E-1;L>=0;L--){for(P=L/E,D=d*(1-P),C=f*Math.sin(P*Math.PI/2),N=0,P=A.length;P>N;N++)B=i(A[N],T[N],C),o(B.x,B.y,p+D);for(H=0,_=S.length;_>H;H++)for(x=S[H],V=O[H],N=0,P=x.length;P>N;N++)B=i(x[N],V[N],C),y?o(B.x,B.y+s[v-1].y,s[v-1].x+D):o(B.x,B.y,p+D)}!function(){if(m){var e;for(e=0*U,N=0;F>N;N++)I=w[N],a(I[2]+e,I[1]+e,I[0]+e);for(e=v+2*E,e*=U,N=0;F>N;N++)I=w[N],a(I[0]+e,I[1]+e,I[2]+e)}else{for(N=0;F>N;N++)I=w[N],a(I[2],I[1],I[0]);for(N=0;F>N;N++)I=w[N],a(I[0]+U*v,I[1]+U*v,I[2]+U*v)}}(),function(){var e=0;for(n(A,e),e+=A.length,H=0,_=S.length;_>H;H++)x=S[H],n(x,e),e+=x.length}()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,i,r){return e=e.vertices,t=e[t],i=e[i],r=e[r],[new THREE.Vector2(t.x,t.y),new THREE.Vector2(i.x,i.y),new THREE.Vector2(r.x,r.y)]},generateSideWallUV:function(e,t,i,r,n){return e=e.vertices,t=e[t],i=e[i],r=e[r],n=e[n],.01>Math.abs(t.y-i.y)?[new THREE.Vector2(t.x,1-t.z),new THREE.Vector2(i.x,1-i.z),new THREE.Vector2(r.x,1-r.z),new THREE.Vector2(n.x,1-n.z)]:[new THREE.Vector2(t.y,1-t.z),new THREE.Vector2(i.y,1-i.z),new THREE.Vector2(r.y,1-r.z),new THREE.Vector2(n.y,1-n.z)]}},THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),this.type="ShapeGeometry",!1===Array.isArray(e)&&(e=[e]),this.addShapeList(e,t),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry,THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var i=0,r=e.length;r>i;i++)this.addShape(e[i],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var i,r,n,o=t.material,a=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,s=this.vertices.length;i=e.extractPoints(void 0!==t.curveSegments?t.curveSegments:12);var h=i.shape,c=i.holes;if(!THREE.ShapeUtils.isClockWise(h))for(h=h.reverse(),i=0,r=c.length;r>i;i++)n=c[i],THREE.ShapeUtils.isClockWise(n)&&(c[i]=n.reverse());var l=THREE.ShapeUtils.triangulateShape(h,c);for(i=0,r=c.length;r>i;i++)n=c[i],h=h.concat(n);for(c=h.length,r=l.length,i=0;c>i;i++)n=h[i],this.vertices.push(new THREE.Vector3(n.x,n.y,0));for(i=0;r>i;i++)c=l[i],h=c[0]+s,n=c[1]+s,c=c[2]+s,this.faces.push(new THREE.Face3(h,n,c,null,null,o)),this.faceVertexUvs[0].push(a.generateTopUV(this,h,n,c))},THREE.LatheBufferGeometry=function(e,t,i,r){THREE.BufferGeometry.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},t=Math.floor(t)||12,i=i||0,r=r||2*Math.PI,r=THREE.Math.clamp(r,0,2*Math.PI);for(var n=(t+1)*e.length,o=t*e.length*6,a=new THREE.BufferAttribute(new(o>65535?Uint32Array:Uint16Array)(o),1),s=new THREE.BufferAttribute(new Float32Array(3*n),3),h=new THREE.BufferAttribute(new Float32Array(2*n),2),c=0,l=0,u=1/t,p=new THREE.Vector3,d=new THREE.Vector2,n=0;t>=n;n++)for(var o=i+n*u*r,f=Math.sin(o),E=Math.cos(o),o=0;o<=e.length-1;o++)p.x=e[o].x*f,p.y=e[o].y,p.z=e[o].x*E,s.setXYZ(c,p.x,p.y,p.z),d.x=n/t,d.y=o/(e.length-1),h.setXY(c,d.x,d.y),c++;for(n=0;t>n;n++)for(o=0;o<e.length-1;o++)i=o+n*e.length,c=i+e.length,u=i+e.length+1,p=i+1,a.setX(l,i),l++,a.setX(l,c),l++,a.setX(l,p),l++,a.setX(l,c),l++,a.setX(l,u),l++,a.setX(l,p),l++;if(this.setIndex(a),this.addAttribute("position",s),this.addAttribute("uv",h),this.computeVertexNormals(),r===2*Math.PI)for(r=this.attributes.normal.array,a=new THREE.Vector3,s=new THREE.Vector3,h=new THREE.Vector3,i=t*e.length*3,o=n=0;n<e.length;n++,o+=3)a.x=r[o+0],a.y=r[o+1],a.z=r[o+2],s.x=r[i+o+0],s.y=r[i+o+1],s.z=r[i+o+2],h.addVectors(a,s).normalize(),r[o+0]=r[i+o+0]=h.x,r[o+1]=r[i+o+1]=h.y,r[o+2]=r[i+o+2]=h.z},THREE.LatheBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.LatheBufferGeometry.prototype.constructor=THREE.LatheBufferGeometry,THREE.LatheGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:i,phiLength:r},this.fromBufferGeometry(new THREE.LatheBufferGeometry(e,t,i,r)),this.mergeVertices()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(e,t,i,r){THREE.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r},this.fromBufferGeometry(new THREE.PlaneBufferGeometry(e,t,i,r))},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.PlaneBufferGeometry=function(e,t,i,r){THREE.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:r};var n=e/2,o=t/2;i=Math.floor(i)||1,r=Math.floor(r)||1;var a=i+1,s=r+1,h=e/i,c=t/r;t=new Float32Array(a*s*3),e=new Float32Array(a*s*3);for(var l=new Float32Array(a*s*2),u=0,p=0,d=0;s>d;d++)for(var f=d*c-o,E=0;a>E;E++)t[u]=E*h-n,t[u+1]=-f,e[u+2]=1,l[p]=E/i,l[p+1]=1-d/r,u+=3,p+=2;for(u=0,n=new(65535<t.length/3?Uint32Array:Uint16Array)(i*r*6),d=0;r>d;d++)for(E=0;i>E;E++)o=E+a*(d+1),s=E+1+a*(d+1),h=E+1+a*d,n[u]=E+a*d,n[u+1]=o,n[u+2]=h,n[u+3]=o,n[u+4]=s,n[u+5]=h,u+=6;this.setIndex(new THREE.BufferAttribute(n,1)),this.addAttribute("position",new THREE.BufferAttribute(t,3)),this.addAttribute("normal",new THREE.BufferAttribute(e,3)),this.addAttribute("uv",new THREE.BufferAttribute(l,2))},THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry,THREE.RingBufferGeometry=function(e,t,i,r,n,o){THREE.BufferGeometry.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:n,thetaLength:o},e=e||20,t=t||50,n=void 0!==n?n:0,o=void 0!==o?o:2*Math.PI,i=void 0!==i?Math.max(3,i):8,r=void 0!==r?Math.max(1,r):1;var a,s,h=(i+1)*(r+1),c=i*r*6,c=new THREE.BufferAttribute(new(c>65535?Uint32Array:Uint16Array)(c),1),l=new THREE.BufferAttribute(new Float32Array(3*h),3),u=new THREE.BufferAttribute(new Float32Array(3*h),3),h=new THREE.BufferAttribute(new Float32Array(2*h),2),p=0,d=0,f=e,E=(t-e)/r,m=new THREE.Vector3,g=new THREE.Vector2;for(e=0;r>=e;e++){for(s=0;i>=s;s++)a=n+s/i*o,m.x=f*Math.cos(a),m.y=f*Math.sin(a),l.setXYZ(p,m.x,m.y,m.z),u.setXYZ(p,0,0,1),g.x=(m.x/t+1)/2,g.y=(m.y/t+1)/2,h.setXY(p,g.x,g.y),p++;f+=E}for(e=0;r>e;e++)for(t=e*(i+1),s=0;i>s;s++)n=a=s+t,o=a+i+1,p=a+i+2,a+=1,c.setX(d,n),d++,c.setX(d,o),d++,c.setX(d,p),d++,c.setX(d,n),d++,c.setX(d,p),d++,c.setX(d,a),d++;this.setIndex(c),this.addAttribute("position",l),this.addAttribute("normal",u),this.addAttribute("uv",h)},THREE.RingBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.RingBufferGeometry.prototype.constructor=THREE.RingBufferGeometry,THREE.RingGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:i,phiSegments:r,thetaStart:n,thetaLength:o},this.fromBufferGeometry(new THREE.RingBufferGeometry(e,t,i,r,n,o))},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry.prototype.constructor=THREE.RingGeometry,THREE.SphereGeometry=function(e,t,i,r,n,o,a){THREE.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:n,thetaStart:o,thetaLength:a},this.fromBufferGeometry(new THREE.SphereBufferGeometry(e,t,i,r,n,o,a))},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.SphereBufferGeometry=function(e,t,i,r,n,o,a){THREE.BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:r,phiLength:n,thetaStart:o,thetaLength:a},e=e||50,t=Math.max(3,Math.floor(t)||8),i=Math.max(2,Math.floor(i)||6),r=void 0!==r?r:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;for(var s=o+a,h=(t+1)*(i+1),c=new THREE.BufferAttribute(new Float32Array(3*h),3),l=new THREE.BufferAttribute(new Float32Array(3*h),3),h=new THREE.BufferAttribute(new Float32Array(2*h),2),u=0,p=[],d=new THREE.Vector3,f=0;i>=f;f++){for(var E=[],m=f/i,g=0;t>=g;g++){var v=g/t,T=-e*Math.cos(r+v*n)*Math.sin(o+m*a),y=e*Math.cos(o+m*a),R=e*Math.sin(r+v*n)*Math.sin(o+m*a);d.set(T,y,R).normalize(),c.setXYZ(u,T,y,R),l.setXYZ(u,d.x,d.y,d.z),h.setXY(u,v,1-m),E.push(u),u++}p.push(E)}for(r=[],f=0;i>f;f++)for(g=0;t>g;g++)n=p[f][g+1],a=p[f][g],u=p[f+1][g],d=p[f+1][g+1],(0!==f||o>0)&&r.push(n,a,d),(f!==i-1||s<Math.PI)&&r.push(a,u,d);this.setIndex(new(65535<c.count?THREE.Uint32Attribute:THREE.Uint16Attribute)(r,1)),this.addAttribute("position",c),this.addAttribute("normal",l),this.addAttribute("uv",h),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry,THREE.TextGeometry=function(e,t){t=t||{};var i=t.font;return!1==i instanceof THREE.Font?new THREE.Geometry:(i=i.generateShapes(e,t.size,t.curveSegments),t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,i,t),void(this.type="TextGeometry"))},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TextGeometry.prototype.constructor=THREE.TextGeometry,THREE.TorusBufferGeometry=function(e,t,i,r,n){THREE.BufferGeometry.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:n},e=e||100,t=t||40,i=Math.floor(i)||8,r=Math.floor(r)||6,n=n||2*Math.PI;var o,a,s=(i+1)*(r+1),h=i*r*6,h=new(h>65535?Uint32Array:Uint16Array)(h),c=new Float32Array(3*s),l=new Float32Array(3*s),s=new Float32Array(2*s),u=0,p=0,d=0,f=new THREE.Vector3,E=new THREE.Vector3,m=new THREE.Vector3;for(o=0;i>=o;o++)for(a=0;r>=a;a++){var g=a/r*n,v=o/i*Math.PI*2;E.x=(e+t*Math.cos(v))*Math.cos(g),E.y=(e+t*Math.cos(v))*Math.sin(g),E.z=t*Math.sin(v),c[u]=E.x,c[u+1]=E.y,c[u+2]=E.z,f.x=e*Math.cos(g),f.y=e*Math.sin(g),m.subVectors(E,f).normalize(),l[u]=m.x,l[u+1]=m.y,l[u+2]=m.z,s[p]=a/r,s[p+1]=o/i,u+=3,p+=2}for(o=1;i>=o;o++)for(a=1;r>=a;a++)e=(r+1)*(o-1)+a-1,t=(r+1)*(o-1)+a,n=(r+1)*o+a,h[d]=(r+1)*o+a-1,h[d+1]=e,h[d+2]=n,h[d+3]=e,h[d+4]=t,h[d+5]=n,d+=6;this.setIndex(new THREE.BufferAttribute(h,1)),this.addAttribute("position",new THREE.BufferAttribute(c,3)),this.addAttribute("normal",new THREE.BufferAttribute(l,3)),this.addAttribute("uv",new THREE.BufferAttribute(s,2))},THREE.TorusBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.TorusBufferGeometry.prototype.constructor=THREE.TorusBufferGeometry,THREE.TorusGeometry=function(e,t,i,r,n){THREE.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:i,tubularSegments:r,arc:n},this.fromBufferGeometry(new THREE.TorusBufferGeometry(e,t,i,r,n))},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusKnotBufferGeometry=function(e,t,i,r,n,o){function a(e,t,i,r,n){var o=Math.cos(e),a=Math.sin(e);e*=i/t,t=Math.cos(e),n.x=r*(2+t)*.5*o,n.y=r*(2+t)*a*.5,n.z=r*Math.sin(e)*.5}THREE.BufferGeometry.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:n,q:o},e=e||100,t=t||40,i=Math.floor(i)||64,r=Math.floor(r)||8,n=n||2,o=o||3;var s,h,c=(r+1)*(i+1),l=r*i*6,l=new THREE.BufferAttribute(new(l>65535?Uint32Array:Uint16Array)(l),1),u=new THREE.BufferAttribute(new Float32Array(3*c),3),p=new THREE.BufferAttribute(new Float32Array(3*c),3),c=new THREE.BufferAttribute(new Float32Array(2*c),2),d=0,f=0,E=new THREE.Vector3,m=new THREE.Vector3,g=new THREE.Vector2,v=new THREE.Vector3,T=new THREE.Vector3,y=new THREE.Vector3,R=new THREE.Vector3,x=new THREE.Vector3;for(s=0;i>=s;++s)for(h=s/i*n*Math.PI*2,a(h,n,o,e,v),a(h+.01,n,o,e,T),R.subVectors(T,v),x.addVectors(T,v),y.crossVectors(R,x),x.crossVectors(y,R),y.normalize(),x.normalize(),h=0;r>=h;++h){var H=h/r*Math.PI*2,_=-t*Math.cos(H),H=t*Math.sin(H);E.x=v.x+(_*x.x+H*y.x),E.y=v.y+(_*x.y+H*y.y),E.z=v.z+(_*x.z+H*y.z),u.setXYZ(d,E.x,E.y,E.z),m.subVectors(E,v).normalize(),p.setXYZ(d,m.x,m.y,m.z),g.x=s/i,g.y=h/r,c.setXY(d,g.x,g.y),d++}for(h=1;i>=h;h++)for(s=1;r>=s;s++)e=(r+1)*h+(s-1),t=(r+1)*h+s,n=(r+1)*(h-1)+s,l.setX(f,(r+1)*(h-1)+(s-1)),f++,l.setX(f,e),f++,l.setX(f,n),f++,l.setX(f,e),f++,l.setX(f,t),f++,l.setX(f,n),f++;this.setIndex(l),this.addAttribute("position",u),this.addAttribute("normal",p),this.addAttribute("uv",c)},THREE.TorusKnotBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.TorusKnotBufferGeometry.prototype.constructor=THREE.TorusKnotBufferGeometry,THREE.TorusKnotGeometry=function(e,t,i,r,n,o,a){THREE.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:i,radialSegments:r,p:n,q:o},this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(e,t,i,r,n,o)),this.mergeVertices()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TubeGeometry=function(e,t,i,r,n,o){THREE.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,segments:t,radius:i,radialSegments:r,closed:n,taper:o},t=t||64,i=i||1,r=r||8,n=n||!1,o=o||THREE.TubeGeometry.NoTaper;var a,s,h,c,l,u,p,d,f,E,m=[],g=t+1,v=new THREE.Vector3;for(d=new THREE.TubeGeometry.FrenetFrames(e,t,n),f=d.normals,E=d.binormals,this.tangents=d.tangents,this.normals=f,this.binormals=E,d=0;g>d;d++)for(m[d]=[],h=d/(g-1),p=e.getPointAt(h),a=f[d],s=E[d],l=i*o(h),h=0;r>h;h++)c=h/r*2*Math.PI,u=-l*Math.cos(c),c=l*Math.sin(c),v.copy(p),v.x+=u*a.x+c*s.x,v.y+=u*a.y+c*s.y,v.z+=u*a.z+c*s.z,m[d][h]=this.vertices.push(new THREE.Vector3(v.x,v.y,v.z))-1;for(d=0;t>d;d++)for(h=0;r>h;h++)o=n?(d+1)%t:d+1,g=(h+1)%r,e=m[d][h],i=m[o][h],o=m[o][g],g=m[d][g],v=new THREE.Vector2(d/t,h/r),f=new THREE.Vector2((d+1)/t,h/r),E=new THREE.Vector2((d+1)/t,(h+1)/r),a=new THREE.Vector2(d/t,(h+1)/r),this.faces.push(new THREE.Face3(e,i,g)),this.faceVertexUvs[0].push([v,f,a]),this.faces.push(new THREE.Face3(i,o,g)),this.faceVertexUvs[0].push([f.clone(),E,a.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.NoTaper=function(e){return 1},THREE.TubeGeometry.SinusoidalTaper=function(e){return Math.sin(Math.PI*e)},THREE.TubeGeometry.FrenetFrames=function(e,t,i){var r=new THREE.Vector3,n=[],o=[],a=[],s=new THREE.Vector3,h=new THREE.Matrix4;t+=1;var c,l,u;for(this.tangents=n,this.normals=o,this.binormals=a,c=0;t>c;c++)l=c/(t-1),n[c]=e.getTangentAt(l),n[c].normalize();for(o[0]=new THREE.Vector3,a[0]=new THREE.Vector3,e=Number.MAX_VALUE,c=Math.abs(n[0].x),l=Math.abs(n[0].y),u=Math.abs(n[0].z),e>=c&&(e=c,r.set(1,0,0)),e>=l&&(e=l,r.set(0,1,0)),e>=u&&r.set(0,0,1),s.crossVectors(n[0],r).normalize(),o[0].crossVectors(n[0],s),a[0].crossVectors(n[0],o[0]),c=1;t>c;c++)o[c]=o[c-1].clone(),a[c]=a[c-1].clone(),s.crossVectors(n[c-1],n[c]),s.length()>Number.EPSILON&&(s.normalize(),r=Math.acos(THREE.Math.clamp(n[c-1].dot(n[c]),-1,1)),o[c].applyMatrix4(h.makeRotationAxis(s,r))),a[c].crossVectors(n[c],o[c]);if(i)for(r=Math.acos(THREE.Math.clamp(o[0].dot(o[t-1]),-1,1)),r/=t-1,0<n[0].dot(s.crossVectors(o[0],o[t-1]))&&(r=-r),c=1;t>c;c++)o[c].applyMatrix4(h.makeRotationAxis(n[c],r*c)),a[c].crossVectors(n[c],o[c])},THREE.PolyhedronGeometry=function(e,t,i,r){function n(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var i=Math.atan2(e.z,-e.x)/2/Math.PI+.5;return e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+.5,t.uv=new THREE.Vector2(i,1-e),t}function o(e,t,i,r){r=new THREE.Face3(e.index,t.index,i.index,[e.clone(),t.clone(),i.clone()],void 0,r),h.faces.push(r),m.copy(e).add(t).add(i).divideScalar(3),r=Math.atan2(m.z,-m.x),h.faceVertexUvs[0].push([s(e.uv,e,r),s(t.uv,t,r),s(i.uv,i,r)])}function a(e,t){for(var i=Math.pow(2,t),r=n(h.vertices[e.a]),a=n(h.vertices[e.b]),s=n(h.vertices[e.c]),c=[],l=e.materialIndex,u=0;i>=u;u++){c[u]=[];for(var p=n(r.clone().lerp(s,u/i)),d=n(a.clone().lerp(s,u/i)),f=i-u,E=0;f>=E;E++)c[u][E]=0===E&&u===i?p:n(p.clone().lerp(d,E/f))}for(u=0;i>u;u++)for(E=0;2*(i-u)-1>E;E++)r=Math.floor(E/2),0===E%2?o(c[u][r+1],c[u+1][r],c[u][r],l):o(c[u][r+1],c[u+1][r+1],c[u+1][r],l)}function s(e,t,i){return 0>i&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(i/2/Math.PI+.5,e.y)),e.clone()}THREE.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:i,detail:r},i=i||1,r=r||0;for(var h=this,c=0,l=e.length;l>c;c+=3)n(new THREE.Vector3(e[c],e[c+1],e[c+2]));e=this.vertices;for(var u=[],p=c=0,l=t.length;l>c;c+=3,p++){var d=e[t[c]],f=e[t[c+1]],E=e[t[c+2]];u[p]=new THREE.Face3(d.index,f.index,E.index,[d.clone(),f.clone(),E.clone()],void 0,p)}for(var m=new THREE.Vector3,c=0,l=u.length;l>c;c++)a(u[c],r);for(c=0,l=this.faceVertexUvs[0].length;l>c;c++)t=this.faceVertexUvs[0][c],r=t[0].x,e=t[1].x,u=t[2].x,p=Math.max(r,e,u),d=Math.min(r,e,u),p>.9&&.1>d&&(.2>r&&(t[0].x+=1),.2>e&&(t[1].x+=1),.2>u&&(t[2].x+=1));for(c=0,l=this.vertices.length;l>c;c++)this.vertices[c].multiplyScalar(i);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,i)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.DodecahedronGeometry=function(e,t){var i=(1+Math.sqrt(5))/2,r=1/i;THREE.PolyhedronGeometry.call(this,[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-i,0,-r,i,0,r,-i,0,r,i,-r,-i,0,-r,i,0,r,-i,0,r,i,0,-i,0,-r,i,0,-r,-i,0,r,i,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}},THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry,THREE.IcosahedronGeometry=function(e,t){var i=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}},THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.OctahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}},THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.TetrahedronGeometry=function(e,t){THREE.PolyhedronGeometry.call(this,[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}},THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.ParametricGeometry=function(e,t,i){THREE.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:i};var r,n,o,a,s=this.vertices,h=this.faces,c=this.faceVertexUvs[0],l=t+1;for(r=0;i>=r;r++)for(a=r/i,n=0;t>=n;n++)o=n/t,o=e(o,a),s.push(o);var u,p,d,f;for(r=0;i>r;r++)for(n=0;t>n;n++)e=r*l+n,s=r*l+n+1,a=(r+1)*l+n+1,o=(r+1)*l+n,u=new THREE.Vector2(n/t,r/i),p=new THREE.Vector2((n+1)/t,r/i),d=new THREE.Vector2((n+1)/t,(r+1)/i),f=new THREE.Vector2(n/t,(r+1)/i),h.push(new THREE.Face3(e,s,o)),c.push([u,p,f]),h.push(new THREE.Face3(s,a,o)),c.push([p.clone(),d,f.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.WireframeGeometry=function(e){function t(e,t){return e-t}THREE.BufferGeometry.call(this);var i=[0,0],r={},n=["a","b","c"];if(e instanceof THREE.Geometry){var o=e.vertices,a=e.faces,s=0,h=new Uint32Array(6*a.length);e=0;for(var c=a.length;c>e;e++)for(var l=a[e],u=0;3>u;u++){i[0]=l[n[u]],i[1]=l[n[(u+1)%3]],i.sort(t);var p=i.toString();void 0===r[p]&&(h[2*s]=i[0],
h[2*s+1]=i[1],r[p]=!0,s++)}for(i=new Float32Array(6*s),e=0,c=s;c>e;e++)for(u=0;2>u;u++)r=o[h[2*e+u]],s=6*e+3*u,i[s+0]=r.x,i[s+1]=r.y,i[s+2]=r.z;this.addAttribute("position",new THREE.BufferAttribute(i,3))}else if(e instanceof THREE.BufferGeometry){if(null!==e.index){for(c=e.index.array,o=e.attributes.position,n=e.groups,s=0,0===n.length&&e.addGroup(0,c.length),h=new Uint32Array(2*c.length),a=0,l=n.length;l>a;++a){e=n[a],u=e.start,p=e.count,e=u;for(var d=u+p;d>e;e+=3)for(u=0;3>u;u++)i[0]=c[e+u],i[1]=c[e+(u+1)%3],i.sort(t),p=i.toString(),void 0===r[p]&&(h[2*s]=i[0],h[2*s+1]=i[1],r[p]=!0,s++)}for(i=new Float32Array(6*s),e=0,c=s;c>e;e++)for(u=0;2>u;u++)s=6*e+3*u,r=h[2*e+u],i[s+0]=o.getX(r),i[s+1]=o.getY(r),i[s+2]=o.getZ(r)}else for(o=e.attributes.position.array,s=o.length/3,h=s/3,i=new Float32Array(6*s),e=0,c=h;c>e;e++)for(u=0;3>u;u++)s=18*e+6*u,h=9*e+3*u,i[s+0]=o[h],i[s+1]=o[h+1],i[s+2]=o[h+2],r=9*e+(u+1)%3*3,i[s+3]=o[r],i[s+4]=o[r+1],i[s+5]=o[r+2];this.addAttribute("position",new THREE.BufferAttribute(i,3))}},THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry,THREE.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),i=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]);e=new THREE.BufferGeometry,e.addAttribute("position",new THREE.BufferAttribute(t,3)),e.addAttribute("color",new THREE.BufferAttribute(i,3)),t=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors}),THREE.LineSegments.call(this,e,t)},THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(){var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var t=new THREE.CylinderGeometry(0,.5,1,5,1);return t.translate(0,-.5,0),function(i,r,n,o,a,s){THREE.Object3D.call(this),void 0===o&&(o=16776960),void 0===n&&(n=1),void 0===a&&(a=.2*n),void 0===s&&(s=.2*a),this.position.copy(r),this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:o})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:o})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(i),this.setLength(n,a,s)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(){var e,t=new THREE.Vector3;return function(i){.99999<i.y?this.quaternion.set(0,0,0,1):-.99999>i.y?this.quaternion.set(1,0,0,0):(t.set(i.z,0,-i.x).normalize(),e=Math.acos(i.y),this.quaternion.setFromAxisAngle(t,e))}}(),THREE.ArrowHelper.prototype.setLength=function(e,t,i){void 0===t&&(t=.2*e),void 0===i&&(i=.2*t),this.line.scale.set(1,Math.max(0,e-t),1),this.line.updateMatrix(),this.cone.scale.set(i,t,i),this.cone.position.y=e,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.set(e),this.cone.material.color.set(e)},THREE.BoxHelper=function(e){var t=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(24),r=new THREE.BufferGeometry;r.setIndex(new THREE.BufferAttribute(t,1)),r.addAttribute("position",new THREE.BufferAttribute(i,3)),THREE.LineSegments.call(this,r,new THREE.LineBasicMaterial({color:16776960})),void 0!==e&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.BoxHelper.prototype.constructor=THREE.BoxHelper,THREE.BoxHelper.prototype.update=function(){var e=new THREE.Box3;return function(t){if(e.setFromObject(t),!e.isEmpty()){t=e.min;var i=e.max,r=this.geometry.attributes.position,n=r.array;n[0]=i.x,n[1]=i.y,n[2]=i.z,n[3]=t.x,n[4]=i.y,n[5]=i.z,n[6]=t.x,n[7]=t.y,n[8]=i.z,n[9]=i.x,n[10]=t.y,n[11]=i.z,n[12]=i.x,n[13]=i.y,n[14]=t.z,n[15]=t.x,n[16]=i.y,n[17]=t.z,n[18]=t.x,n[19]=t.y,n[20]=t.z,n[21]=i.x,n[22]=t.y,n[23]=t.z,r.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),THREE.BoundingBoxHelper=function(e,t){var i=void 0!==t?t:8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:i,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper,THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){function t(e,t,r){i(e,r),i(t,r)}function i(e,t){r.vertices.push(new THREE.Vector3),r.colors.push(new THREE.Color(t)),void 0===o[e]&&(o[e]=[]),o[e].push(r.vertices.length-1)}var r=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),o={};t("n1","n2",16755200),t("n2","n4",16755200),t("n4","n3",16755200),t("n3","n1",16755200),t("f1","f2",16755200),t("f2","f4",16755200),t("f4","f3",16755200),t("f3","f1",16755200),t("n1","f1",16755200),t("n2","f2",16755200),t("n3","f3",16755200),t("n4","f4",16755200),t("p","n1",16711680),t("p","n2",16711680),t("p","n3",16711680),t("p","n4",16711680),t("u1","u2",43775),t("u2","u3",43775),t("u3","u1",43775),t("c","t",16777215),t("p","c",3355443),t("cn1","cn2",3355443),t("cn3","cn4",3355443),t("cf1","cf2",3355443),t("cf3","cf4",3355443),THREE.LineSegments.call(this,r,n),this.camera=e,this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){function e(e,o,a,s){if(r.set(o,a,s).unproject(n),e=i[e],void 0!==e)for(o=0,a=e.length;a>o;o++)t.vertices[e[o]].copy(r)}var t,i,r=new THREE.Vector3,n=new THREE.Camera;return function(){t=this.geometry,i=this.pointMap,n.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-1,-1,-1),e("n2",1,-1,-1),e("n3",-1,1,-1),e("n4",1,1,-1),e("f1",-1,-1,1),e("f2",1,-1,1),e("f3",-1,1,1),e("f4",1,1,1),e("u1",.7,1.1,-1),e("u2",-.7,1.1,-1),e("u3",0,2,-1),e("cf1",-1,0,1),e("cf2",1,0,1),e("cf3",0,-1,1),e("cf4",0,1,1),e("cn1",-1,0,-1),e("cn2",1,0,-1),e("cn3",0,-1,-1),e("cn4",0,1,-1),t.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var i=new THREE.Geometry;i.vertices.push(new THREE.Vector3(-t,t,0),new THREE.Vector3(t,t,0),new THREE.Vector3(t,-t,0),new THREE.Vector3(-t,-t,0),new THREE.Vector3(-t,t,0));var r=new THREE.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(i,r),this.add(this.lightPlane),i=new THREE.Geometry,i.vertices.push(new THREE.Vector3,new THREE.Vector3),r=new THREE.LineBasicMaterial({fog:!1}),r.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(i,r),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper,THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),i.subVectors(t,e),this.lightPlane.lookAt(i),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(i),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(e,t,i){t=void 0!==t?t:16777215,THREE.LineSegments.call(this,new THREE.EdgesGeometry(e.geometry,i),new THREE.LineBasicMaterial({color:t})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper,THREE.FaceNormalsHelper=function(e,t,i,r){this.object=e,this.size=void 0!==t?t:1,e=void 0!==i?i:16776960,r=void 0!==r?r:1,t=0,i=this.object.geometry,i instanceof THREE.Geometry?t=i.faces.length:void 0,i=new THREE.BufferGeometry,t=new THREE.Float32Attribute(6*t,3),i.addAttribute("position",t),THREE.LineSegments.call(this,i,new THREE.LineBasicMaterial({color:e,linewidth:r})),this.matrixAutoUpdate=!1,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper,THREE.FaceNormalsHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,n=this.geometry.attributes.position,o=this.object.geometry,a=o.vertices,o=o.faces,s=0,h=0,c=o.length;c>h;h++){var l=o[h],u=l.normal;e.copy(a[l.a]).add(a[l.b]).add(a[l.c]).divideScalar(3).applyMatrix4(r),t.copy(u).applyMatrix3(i).normalize().multiplyScalar(this.size).add(e),n.setXYZ(s,e.x,e.y,e.z),s+=1,n.setXYZ(s,t.x,t.y,t.z),s+=1}return n.needsUpdate=!0,this}}(),THREE.GridHelper=function(e,t){var i=new THREE.Geometry,r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var n=-e;e>=n;n+=t){i.vertices.push(new THREE.Vector3(-e,0,n),new THREE.Vector3(e,0,n),new THREE.Vector3(n,0,-e),new THREE.Vector3(n,0,e));var o=0===n?this.color1:this.color2;i.colors.push(o,o,o,o)}THREE.LineSegments.call(this,i,r)},THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.GridHelper.prototype.constructor=THREE.GridHelper,THREE.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var i=new THREE.SphereGeometry(t,4,2);i.rotateX(-Math.PI/2);for(var r=0;8>r;r++)i.faces[r].color=this.colors[4>r?0:1];r=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0}),this.lightSphere=new THREE.Mesh(i,r),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper,THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var i=new THREE.SphereGeometry(t,4,2),r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,i,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper,THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var t=new THREE.Geometry,i=0;i<this.bones.length;i++)this.bones[i].parent instanceof THREE.Bone&&(t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(0,0,1)),t.colors.push(new THREE.Color(0,1,0)));t.dynamic=!0,i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0}),THREE.LineSegments.call(this,t,i),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper,THREE.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof THREE.Bone&&t.push(e);for(var i=0;i<e.children.length;i++)t.push.apply(t,this.getBoneList(e.children[i]));return t},THREE.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=(new THREE.Matrix4).getInverse(this.root.matrixWorld),i=new THREE.Matrix4,r=0,n=0;n<this.bones.length;n++){var o=this.bones[n];o.parent instanceof THREE.Bone&&(i.multiplyMatrices(t,o.matrixWorld),e.vertices[r].setFromMatrixPosition(i),i.multiplyMatrices(t,o.parent.matrixWorld),e.vertices[r+1].setFromMatrixPosition(i),r+=2)}e.verticesNeedUpdate=!0,e.computeBoundingSphere()},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,e=new THREE.CylinderGeometry(0,1,1,8,1,!0),e.translate(0,-.5,0),e.rotateX(-Math.PI/2);var t=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(e,t),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper,THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var i=this.light.distance?this.light.distance:1e4,r=i*Math.tan(this.light.angle);this.cone.scale.set(r,r,i),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,i,r){this.object=e,this.size=void 0!==t?t:1,e=void 0!==i?i:16711680,r=void 0!==r?r:1,t=0,i=this.object.geometry,i instanceof THREE.Geometry?t=3*i.faces.length:i instanceof THREE.BufferGeometry&&(t=i.attributes.normal.count),i=new THREE.BufferGeometry,t=new THREE.Float32Attribute(6*t,3),i.addAttribute("position",t),THREE.LineSegments.call(this,i,new THREE.LineBasicMaterial({color:e,linewidth:r})),this.matrixAutoUpdate=!1,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper,THREE.VertexNormalsHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,i=new THREE.Matrix3;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),i.getNormalMatrix(this.object.matrixWorld);var n=this.object.matrixWorld,o=this.geometry.attributes.position,a=this.object.geometry;if(a instanceof THREE.Geometry)for(var s=a.vertices,h=a.faces,c=a=0,l=h.length;l>c;c++)for(var u=h[c],p=0,d=u.vertexNormals.length;d>p;p++){var f=u.vertexNormals[p];e.copy(s[u[r[p]]]).applyMatrix4(n),t.copy(f).applyMatrix3(i).normalize().multiplyScalar(this.size).add(e),o.setXYZ(a,e.x,e.y,e.z),a+=1,o.setXYZ(a,t.x,t.y,t.z),a+=1}else if(a instanceof THREE.BufferGeometry)for(r=a.attributes.position,s=a.attributes.normal,p=a=0,d=r.count;d>p;p++)e.set(r.getX(p),r.getY(p),r.getZ(p)).applyMatrix4(n),t.set(s.getX(p),s.getY(p),s.getZ(p)),t.applyMatrix3(i).normalize().multiplyScalar(this.size).add(e),o.setXYZ(a,e.x,e.y,e.z),a+=1,o.setXYZ(a,t.x,t.y,t.z),a+=1;return o.needsUpdate=!0,this}}(),THREE.WireframeHelper=function(e,t){var i=void 0!==t?t:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(e.geometry),new THREE.LineBasicMaterial({color:i})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper,THREE.ImmediateRenderObject=function(e){THREE.Object3D.call(this),this.material=e,this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var i=this.geometry.morphTargets.length;this.createAnimation("__default",0,i-1,i/1),this.setAnimationWeight("__default",1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,i,r){t={start:t,end:i,length:i-t+1,fps:r,duration:(i-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1},this.animationsMap[e]=t,this.animationsList.push(t)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,i=/([a-z]+)_?(\d+)/i,r={},n=this.geometry,o=0,a=n.morphTargets.length;a>o;o++){var s=n.morphTargets[o].name.match(i);if(s&&1<s.length){var h=s[1];r[h]||(r[h]={start:1/0,end:-(1/0)}),s=r[h],o<s.start&&(s.start=o),o>s.end&&(s.end=o),t||(t=h)}}for(h in r)s=r[h],this.createAnimation(h,s.start,s.end,e);this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){(e=this.animationsMap[e])&&(e.direction=1,e.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){(e=this.animationsMap[e])&&(e.direction=-1,e.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var i=this.animationsMap[e];i&&(i.fps=t,i.duration=(i.end-i.start)/i.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var i=this.animationsMap[e];i&&(i.duration=t,i.fps=(i.end-i.start)/i.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var i=this.animationsMap[e];i&&(i.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var i=this.animationsMap[e];i&&(i.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0;return(e=this.animationsMap[e])&&(t=e.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1;return(e=this.animationsMap[e])&&(t=e.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):void 0},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){(e=this.animationsMap[e])&&(e.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,i=this.animationsList.length;i>t;t++){var r=this.animationsList[t];if(r.active){var n=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||0>r.time)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),0>r.time&&(r.time=0,r.directionBackwards=!1)):(r.time%=r.duration,0>r.time&&(r.time+=r.duration));var o=r.start+THREE.Math.clamp(Math.floor(r.time/n),0,r.length-1),a=r.weight;o!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*a,this.morphTargetInfluences[o]=0,r.lastFrame=r.currentFrame,r.currentFrame=o),n=r.time%n/n,r.directionBackwards&&(n=1-n),r.currentFrame!==r.lastFrame?(this.morphTargetInfluences[r.currentFrame]=n*a,this.morphTargetInfluences[r.lastFrame]=(1-n)*a):this.morphTargetInfluences[r.currentFrame]=a}}},THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float opacity;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 texel = texture2D( tDiffuse, vUv );","gl_FragColor = opacity * texel;","}"].join("\n")},THREE.DigitalGlitch={uniforms:{tDiffuse:{type:"t",value:null},tDisp:{type:"t",value:null},byp:{type:"i",value:0},amount:{type:"f",value:.08},angle:{type:"f",value:.02},seed:{type:"f",value:.02},seed_x:{type:"f",value:.02},seed_y:{type:"f",value:.02},distortion_x:{type:"f",value:.5},distortion_y:{type:"f",value:.6},col_s:{type:"f",value:.05}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform int byp;","uniform sampler2D tDiffuse;","uniform sampler2D tDisp;","uniform float amount;","uniform float angle;","uniform float seed;","uniform float seed_x;","uniform float seed_y;","uniform float distortion_x;","uniform float distortion_y;","uniform float col_s;","varying vec2 vUv;","float rand(vec2 co){","return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);","}","void main() {","if(byp<1) {","vec2 p = vUv;","float xs = floor(gl_FragCoord.x / 0.5);","float ys = floor(gl_FragCoord.y / 0.5);","vec4 normal = texture2D (tDisp, p*seed*seed);","if(p.y<distortion_x+col_s && p.y>distortion_x-col_s*seed) {","if(seed_x>0.){","p.y = 1. - (p.y + distortion_y);","}","else {","p.y = distortion_y;","}","}","if(p.x<distortion_y+col_s && p.x>distortion_y-col_s*seed) {","if(seed_y>0.){","p.x=distortion_x;","}","else {","p.x = 1. - (p.x + distortion_x);","}","}","p.x+=normal.x*seed_x*(seed/5.);","p.y+=normal.y*seed_y*(seed/5.);","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, p + offset);","vec4 cga = texture2D(tDiffuse, p);","vec4 cb = texture2D(tDiffuse, p - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","vec4 snow = 200.*amount*vec4(rand(vec2(xs * seed,ys * seed*50.))*0.2);","gl_FragColor = gl_FragColor+ snow;","}","else {","gl_FragColor=texture2D (tDiffuse, vUv);","}","}"].join("\n")},THREE.EffectComposer=function(e,t){if(this.renderer=e,void 0===t){var i={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},r=e.getSize();t=new THREE.WebGLRenderTarget(r.width,r.height,i)}this.renderTarget1=t,this.renderTarget2=t.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.passes=[],void 0===THREE.CopyShader,this.copyPass=new THREE.ShaderPass(THREE.CopyShader)},THREE.EffectComposer.prototype={swapBuffers:function(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e},addPass:function(e){this.passes.push(e)},insertPass:function(e,t){this.passes.splice(t,0,e)},render:function(e){this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2;var t,i,r=!1,n=this.passes.length;for(i=0;n>i;i++)if(t=this.passes[i],t.enabled){if(t.render(this.renderer,this.writeBuffer,this.readBuffer,e,r),t.needsSwap){if(r){var o=this.renderer.context;o.stencilFunc(o.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),o.stencilFunc(o.EQUAL,1,4294967295)}this.swapBuffers()}t instanceof THREE.MaskPass?r=!0:t instanceof THREE.ClearMaskPass&&(r=!1)}},reset:function(e){if(void 0===e){var t=this.renderer.getSize();e=this.renderTarget1.clone(),e.setSize(t.width,t.height)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2},setSize:function(e,t){this.renderTarget1.setSize(e,t),this.renderTarget2.setSize(e,t)}},THREE.RenderPass=function(e,t,i,r,n){this.scene=e,this.camera=t,this.overrideMaterial=i,this.clearColor=r,this.clearAlpha=void 0!==n?n:1,this.oldClearColor=new THREE.Color,this.oldClearAlpha=1,this.enabled=!0,this.clear=!0,this.needsSwap=!1},THREE.RenderPass.prototype={render:function(e,t,i,r){this.scene.overrideMaterial=this.overrideMaterial,this.clearColor&&(this.oldClearColor.copy(e.getClearColor()),this.oldClearAlpha=e.getClearAlpha(),e.setClearColor(this.clearColor,this.clearAlpha)),e.render(this.scene,this.camera,i,this.clear),this.clearColor&&e.setClearColor(this.oldClearColor,this.oldClearAlpha),this.scene.overrideMaterial=null}},THREE.MaskPass=function(e,t){this.scene=e,this.camera=t,this.enabled=!0,this.clear=!0,this.needsSwap=!1,this.inverse=!1},THREE.MaskPass.prototype={render:function(e,t,i,r){var n=e.context;n.colorMask(!1,!1,!1,!1),n.depthMask(!1);var o,a;this.inverse?(o=0,a=1):(o=1,a=0),n.enable(n.STENCIL_TEST),n.stencilOp(n.REPLACE,n.REPLACE,n.REPLACE),n.stencilFunc(n.ALWAYS,o,4294967295),n.clearStencil(a),e.render(this.scene,this.camera,i,this.clear),e.render(this.scene,this.camera,t,this.clear),n.colorMask(!0,!0,!0,!0),n.depthMask(!0),n.stencilFunc(n.EQUAL,1,4294967295),n.stencilOp(n.KEEP,n.KEEP,n.KEEP)}},THREE.ClearMaskPass=function(){this.enabled=!0},THREE.ClearMaskPass.prototype={render:function(e,t,i,r){var n=e.context;n.disable(n.STENCIL_TEST)}},THREE.ShaderPass=function(e,t){this.textureID=void 0!==t?t:"tDiffuse",e instanceof THREE.ShaderMaterial?(this.uniforms=e.uniforms,this.material=e):e&&(this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.material=new THREE.ShaderMaterial({defines:e.defines||{},uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader})),this.renderToScreen=!1,this.enabled=!0,this.needsSwap=!0,this.clear=!1,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},THREE.ShaderPass.prototype={render:function(e,t,i,r){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=i),this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,this.clear)}},THREE.GlitchPass=function(e){void 0===THREE.DigitalGlitch;var t=THREE.DigitalGlitch;this.uniforms=THREE.UniformsUtils.clone(t.uniforms),void 0==e&&(e=64),this.uniforms.tDisp.value=this.generateHeightmap(e),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:t.vertexShader,fragmentShader:t.fragmentShader}),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad),this.goWild=!1,this.curF=0,this.generateTrigger()},THREE.GlitchPass.prototype={render:function(e,t,i,r){this.uniforms.tDiffuse.value=i,this.uniforms.seed.value=Math.random(),this.uniforms.byp.value=0,this.curF%this.randX==0||1==this.goWild?(this.uniforms.amount.value=Math.random()/30,this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI),this.uniforms.seed_x.value=THREE.Math.randFloat(-1,1),this.uniforms.seed_y.value=THREE.Math.randFloat(-1,1),this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1),this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1),this.curF=0,this.generateTrigger()):this.curF%this.randX<this.randX/5?(this.uniforms.amount.value=Math.random()/90,this.uniforms.angle.value=THREE.Math.randFloat(-Math.PI,Math.PI),this.uniforms.distortion_x.value=THREE.Math.randFloat(0,1),this.uniforms.distortion_y.value=THREE.Math.randFloat(0,1),this.uniforms.seed_x.value=THREE.Math.randFloat(-.3,.3),this.uniforms.seed_y.value=THREE.Math.randFloat(-.3,.3)):0==this.goWild&&(this.uniforms.byp.value=1),this.curF++,this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,!1)},generateTrigger:function(){this.randX=THREE.Math.randInt(120,240)},generateHeightmap:function(e){for(var t=new Float32Array(e*e*3),i=e*e,r=0;i>r;r++){var n=THREE.Math.randFloat(0,1);t[3*r+0]=n,t[3*r+1]=n,t[3*r+2]=n}var o=new THREE.DataTexture(t,e,e,THREE.RGBFormat,THREE.FloatType);return o.needsUpdate=!0,o}},THREE.RGBShiftShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:.005},angle:{type:"f",value:0}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform float amount;","uniform float angle;","varying vec2 vUv;","void main() {","vec2 offset = amount * vec2( cos(angle), sin(angle));","vec4 cr = texture2D(tDiffuse, vUv + offset);","vec4 cga = texture2D(tDiffuse, vUv);","vec4 cb = texture2D(tDiffuse, vUv - offset);","gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);","}"].join("\n")},THREE.FilmShader={uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},nIntensity:{type:"f",value:.5},sIntensity:{type:"f",value:.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:["varying vec2 vUv;","void main() {","vUv = uv;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float time;","uniform bool grayscale;","uniform float nIntensity;","uniform float sIntensity;","uniform float sCount;","uniform sampler2D tDiffuse;","varying vec2 vUv;","void main() {","vec4 cTextureScreen = texture2D( tDiffuse, vUv );","float x = vUv.x * vUv.y * time *  1000.0;","x = mod( x, 13.0 ) * mod( x, 123.0 );","float dx = mod( x, 0.01 );","vec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );","vec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );","cResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;","cResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );","if( grayscale ) {","cResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );","}","gl_FragColor =  vec4( cResult, cTextureScreen.a );","}"].join("\n")},THREE.FilmPass=function(e,t,i,r){void 0===THREE.FilmShader;var n=THREE.FilmShader;this.uniforms=THREE.UniformsUtils.clone(n.uniforms),this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:n.vertexShader,fragmentShader:n.fragmentShader}),void 0!==r&&(this.uniforms.grayscale.value=r),void 0!==e&&(this.uniforms.nIntensity.value=e),void 0!==t&&(this.uniforms.sIntensity.value=t),void 0!==i&&(this.uniforms.sCount.value=i),this.enabled=!0,this.renderToScreen=!1,this.needsSwap=!0,this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1),this.scene=new THREE.Scene,this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null),this.scene.add(this.quad)},THREE.FilmPass.prototype={render:function(e,t,i,r){this.uniforms.tDiffuse.value=i,this.uniforms.time.value+=r,this.quad.material=this.material,this.renderToScreen?e.render(this.scene,this.camera):e.render(this.scene,this.camera,t,!1)}};var renderer,scene,camera,composer,object;window.onload=function(){init(),animate()};